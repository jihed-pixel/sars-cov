[{"/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Actions/store.js":"1","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/trRythCardiaque.js":"2","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/autresATCD1.js":"3","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/immunosuppreseur1.js":"4","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/confirmationDiag1.js":"5","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Form/SideNav.js":"6","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/Dashbord/http-common.js":"7","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/hta.js":"8","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/grossesse.js":"9","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/info/information.js":"10","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/diabete1.js":"11","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/priseAINS1.js":"12","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/evaluationFinale.js":"13","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/examenRadioParaCli.js":"14","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/examenRadioParaCli1.js":"15","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/evolution1.js":"16","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Reducers/medicalService.js":"17","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/index.js":"18","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/insRenaleChro.js":"19","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/immunosuppreseur.js":"20","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/hta1.js":"21","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/grossesse1.js":"22","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/Dashbord/dash1.js":"23","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/admission1.js":"24","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/traitement1.js":"25","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/login.js":"26","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/addPatient.js":"27","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/infosGenerales.js":"28","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/habitudesDeVie.js":"29","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnosticDetails.js":"30","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/dashbord.js":"31","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux.js":"32","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/addAntecedentsMedicaux.js":"33","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/info/infosGenerales2.js":"34","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/CaracCliniques1.js":"35","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/evaluationFinale1.js":"36","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/examBio1.js":"37","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/examenCliniques1.js":"38","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/exposition1.js":"39","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/ATCDchir1.js":"40","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/avc1.js":"41","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/cardiopathies1.js":"42","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/insRenaleChro1.js":"43","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/pathRespChronique1.js":"44","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/retinopathie1.js":"45","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/trRythCardiaque1.js":"46","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/save/searchPatient1.js":"47","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/save/habitudesDeVie1.js":"48","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/save/addAntecedentsMedicaux1.js":"49","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/App.js":"50","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/reportWebVitals.js":"51","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/admission.js":"52","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Reducers/index.js":"53","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Form/CheckBox.js":"54","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Form/FormButton.js":"55","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Form/FormInput.js":"56","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Form/FormInput2.js":"57","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/CaracCliniques.js":"58","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/confirmationDiag.js":"59","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/evolution.js":"60","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/examBio.js":"61","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/examenCliniques.js":"62","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/exposition.js":"63","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/traitement.js":"64","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/ATCDchir.js":"65","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/autresATCD.js":"66","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/avc.js":"67","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/cardiopathies.js":"68","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/diabete.js":"69","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/pathRespChronique.js":"70","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/priseAINS.js":"71","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/retinopathie.js":"72","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/patientDetails.js":"73","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Form/CaracCls.js":"74","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/info/Heading.js":"75","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/searchPatient.js":"76","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/home.js":"77","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Actions/medicalService.js":"78","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Actions/apiMedicalService.js":"79","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/Dashbord/upload-files.component.js":"80","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/Dashbord/upload-files.service.js":"81","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Form/FormButton1.js":"82","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Form/Steps.js":"83"},{"size":225,"mtime":1601373210000,"results":"84","hashOfConfig":"85"},{"size":3389,"mtime":1610459482000,"results":"86","hashOfConfig":"85"},{"size":2366,"mtime":1610452934000,"results":"87","hashOfConfig":"85"},{"size":3416,"mtime":1611146624118,"results":"88","hashOfConfig":"85"},{"size":9340,"mtime":1611321963400,"results":"89","hashOfConfig":"85"},{"size":1454,"mtime":1610368974000,"results":"90","hashOfConfig":"85"},{"size":162,"mtime":1611328432701,"results":"91","hashOfConfig":"85"},{"size":3224,"mtime":1610459282000,"results":"92","hashOfConfig":"85"},{"size":4414,"mtime":1610459252000,"results":"93","hashOfConfig":"85"},{"size":2090,"mtime":1610451980000,"results":"94","hashOfConfig":"85"},{"size":3278,"mtime":1610453114000,"results":"95","hashOfConfig":"85"},{"size":3365,"mtime":1611147236165,"results":"96","hashOfConfig":"85"},{"size":4611,"mtime":1611320827394,"results":"97","hashOfConfig":"85"},{"size":7264,"mtime":1611319920972,"results":"98","hashOfConfig":"85"},{"size":7540,"mtime":1611245259766,"results":"99","hashOfConfig":"85"},{"size":20584,"mtime":1611245305851,"results":"100","hashOfConfig":"85"},{"size":3119,"mtime":1601373210000,"results":"101","hashOfConfig":"85"},{"size":500,"mtime":1611056195179,"results":"102","hashOfConfig":"85"},{"size":3308,"mtime":1610459340000,"results":"103","hashOfConfig":"85"},{"size":3415,"mtime":1611146612085,"results":"104","hashOfConfig":"85"},{"size":3222,"mtime":1610453206000,"results":"105","hashOfConfig":"85"},{"size":4441,"mtime":1610453154000,"results":"106","hashOfConfig":"85"},{"size":1267,"mtime":1611247015185,"results":"107","hashOfConfig":"85"},{"size":7897,"mtime":1611321831299,"results":"108","hashOfConfig":"85"},{"size":14790,"mtime":1611323178719,"results":"109","hashOfConfig":"85"},{"size":3238,"mtime":1611328212690,"results":"110","hashOfConfig":"85"},{"size":10248,"mtime":1611152914231,"results":"111","hashOfConfig":"85"},{"size":8850,"mtime":1610528846024,"results":"112","hashOfConfig":"85"},{"size":6460,"mtime":1610440686000,"results":"113","hashOfConfig":"85"},{"size":3270,"mtime":1610440900000,"results":"114","hashOfConfig":"85"},{"size":1852,"mtime":1610529252068,"results":"115","hashOfConfig":"85"},{"size":2303,"mtime":1610441174000,"results":"116","hashOfConfig":"85"},{"size":3974,"mtime":1610451868000,"results":"117","hashOfConfig":"85"},{"size":2271,"mtime":1610452080000,"results":"118","hashOfConfig":"85"},{"size":14059,"mtime":1611245216480,"results":"119","hashOfConfig":"85"},{"size":4749,"mtime":1611323388118,"results":"120","hashOfConfig":"85"},{"size":11639,"mtime":1611323243711,"results":"121","hashOfConfig":"85"},{"size":16235,"mtime":1611245236341,"results":"122","hashOfConfig":"85"},{"size":15479,"mtime":1611322954677,"results":"123","hashOfConfig":"85"},{"size":2363,"mtime":1610452904000,"results":"124","hashOfConfig":"85"},{"size":4351,"mtime":1610452970000,"results":"125","hashOfConfig":"85"},{"size":3161,"mtime":1610453068000,"results":"126","hashOfConfig":"85"},{"size":3299,"mtime":1610453302000,"results":"127","hashOfConfig":"85"},{"size":3288,"mtime":1610453340000,"results":"128","hashOfConfig":"85"},{"size":2714,"mtime":1610453422000,"results":"129","hashOfConfig":"85"},{"size":3284,"mtime":1610453458000,"results":"130","hashOfConfig":"85"},{"size":3766,"mtime":1611150999132,"results":"131","hashOfConfig":"85"},{"size":6496,"mtime":1611153368417,"results":"132","hashOfConfig":"85"},{"size":4256,"mtime":1611245702375,"results":"133","hashOfConfig":"85"},{"size":9739,"mtime":1611246125012,"results":"134","hashOfConfig":"85"},{"size":362,"mtime":1606217494000,"results":"135","hashOfConfig":"85"},{"size":7383,"mtime":1611321566263,"results":"136","hashOfConfig":"85"},{"size":155,"mtime":1600088656000,"results":"137","hashOfConfig":"85"},{"size":961,"mtime":1610457724000,"results":"138","hashOfConfig":"85"},{"size":597,"mtime":1610458528000,"results":"139","hashOfConfig":"85"},{"size":766,"mtime":1610705509071,"results":"140","hashOfConfig":"85"},{"size":1010,"mtime":1610957191861,"results":"141","hashOfConfig":"85"},{"size":13860,"mtime":1611220044087,"results":"142","hashOfConfig":"85"},{"size":9167,"mtime":1611320888122,"results":"143","hashOfConfig":"85"},{"size":18005,"mtime":1611320781802,"results":"144","hashOfConfig":"85"},{"size":11400,"mtime":1611320554591,"results":"145","hashOfConfig":"85"},{"size":16031,"mtime":1611220177440,"results":"146","hashOfConfig":"85"},{"size":15195,"mtime":1611319865116,"results":"147","hashOfConfig":"85"},{"size":14627,"mtime":1611319725228,"results":"148","hashOfConfig":"85"},{"size":2337,"mtime":1610459080000,"results":"149","hashOfConfig":"85"},{"size":2341,"mtime":1610459110000,"results":"150","hashOfConfig":"85"},{"size":4339,"mtime":1610459162000,"results":"151","hashOfConfig":"85"},{"size":3266,"mtime":1610459192000,"results":"152","hashOfConfig":"85"},{"size":3243,"mtime":1610459220000,"results":"153","hashOfConfig":"85"},{"size":3318,"mtime":1610459372000,"results":"154","hashOfConfig":"85"},{"size":3371,"mtime":1611147221533,"results":"155","hashOfConfig":"85"},{"size":2706,"mtime":1610459430000,"results":"156","hashOfConfig":"85"},{"size":2216,"mtime":1610459710000,"results":"157","hashOfConfig":"85"},{"size":1455,"mtime":1610957720621,"results":"158","hashOfConfig":"85"},{"size":352,"mtime":1605870604000,"results":"159","hashOfConfig":"85"},{"size":3972,"mtime":1610529261068,"results":"160","hashOfConfig":"85"},{"size":2556,"mtime":1611131968800,"results":"161","hashOfConfig":"85"},{"size":9732,"mtime":1611310144673,"results":"162","hashOfConfig":"85"},{"size":2413,"mtime":1611328412656,"results":"163","hashOfConfig":"85"},{"size":2888,"mtime":1608900710000,"results":"164","hashOfConfig":"85"},{"size":420,"mtime":1608900716000,"results":"165","hashOfConfig":"85"},{"size":597,"mtime":1610957702276,"results":"166","hashOfConfig":"85"},{"size":1080,"mtime":1611153289116,"results":"167","hashOfConfig":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"107kscy",{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"170"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"170"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"170"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"170"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"170"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"170"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"170"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"170"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"170"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"170"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"170"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"170"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"170"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"170"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"170"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"170"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"170"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"170"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"170"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"170"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"170"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"170"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"170"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"170"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"170"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"170"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"170"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"170"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"170"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"170"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"170"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"170"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"170"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"170"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"170"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"170"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"170"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"170"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"170"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"170"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"170"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"170"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"170"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"170"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"170"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"170"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"170"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"170"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"170"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"338","usedDeprecatedRules":"170"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"170"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"170"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"170"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"170"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"170"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"170"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"170"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"170"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"170"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"170"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"170"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"170"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"170"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"170"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"170"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"390","usedDeprecatedRules":"170"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"170"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Actions/store.js",[],["402","403"],"/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/trRythCardiaque.js",["404"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport {View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\nconst TrRythCardiaque = (props) => {\n  const [anciennete, setAnciennete] = useState(0.0);\n  const [traitement, setTraitement] = useState(0);\n  const [equilibre, setEquilibre] = useState(true);\n\n  var handleAnciennteChange = (text) => {\n    setAnciennete(text)\n  }\n  var handleTraitementChange = (text) => {\n    setTraitement(text)\n  }\n  var handleEquilibreChange = (data) => {\n    if (data.target.value===\"true\")\n      setEquilibre(true);\n    else if (data.target.value===\"false\")\n      setEquilibre(false)\n  }\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"TrRythCardiaque\",\n      anciennete: anciennete,\n      traitement: traitement,\n      equilibre: equilibre\n    }\n    e.preventDefault();\n    //console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux\")\n  }\n  return (\n    <div>\n    <div class=\"big\">\n    <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Trouble du rythme cardiaque</Text>\n        <FormInput title=\"Ancienneté\" placeholder=\"Ancienneté\" onChangeText={handleAnciennteChange} type=\"decimal-pad\" />\n        <FormInput title=\"Traitement\" placeholder=\"Traitement\" onChangeText={handleTraitementChange} />\n        <View style={styles.row}>\n        <div onChange={handleEquilibreChange}>\n        <Text style={tailwind('text-gray-700 py-2')}>Equilibré?</Text>\n          <input type=\"radio\" value={true} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n          <input type=\"radio\" value={false} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n        </div>\n        </View>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n        </View>\n      </View>\n      </Container>\n      </div>\n      <ParticlesBg type=\"cobweb\" config={config} bg={true} />\n      </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\nconst styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n});\nexport default connect(mapStateToProps, mapActionToProps)(TrRythCardiaque);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/autresATCD1.js",["405"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n//import 'localstorage-polyfill';\n\nconst AutresATCD1 = (props) => {\n  const [ATCD, setATCD] = useState(\"\");\n  var handleATCDChange = (text) => {\n    setATCD(text)\n  }\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"AutresATCD\",\n      autres: ATCD\n    }\n    e.preventDefault();\n    //console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux1\")\n  }\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}> Autres ATCD </Text>\n        <FormInput placeholder=\"Autres ATCD\" onChangeText={handleATCDChange} />\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux1\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(AutresATCD1);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/immunosuppreseur1.js",["406"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport { DatePicker } from '@assenti/rui-components';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\nconst Immunosuppreseur1 = (props) => {\n\n  const [dose, setDose] = useState(0.0)\n  const [duree, setDuree] = useState(0)\n  const [molecule, setMolecule] = useState(\"\")\n  const [date, setDate] = useState()\n\n  var handleDoseChange = (text) => {\n    setDose(text)\n  }\n  var handleDureeChange = (text) => {\n    setDuree(text)\n  }\n  var handleMoleculeChange = (text) => {\n    setMolecule(text)\n  }\n\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"Immunosuppreseur\",\n      dose: dose,\n      molecule: molecule,\n      duree: duree,\n      datePrise: date\n    }\n    e.preventDefault();\n    console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux1\")\n  }\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Traitement Immunosuppreseur</Text>\n\n        <FormInput placeholder=\"Dose \" type=\"decimal-pad\" onChangeText={handleDoseChange} />\n        <FormInput placeholder=\"Molecule\" onChangeText={handleMoleculeChange} />\n        <FormInput placeholder=\"Duree\" type=\"decimal-pad\" onChangeText={handleDureeChange} />\n        <Text style={tailwind('text-gray-700 py-2')}>Traitement Immunosuppreseur</Text>\n        <DatePicker\n         color=\"primary\"\n         placeholder=\"YYYY-MM-DD\"\n         value={date}\n         clearable\n         minDate=\"1920-05-01\"\n         maxDate={new Date()}\n         onDate={(date) => {\n           setDate(date)\n         }}\n         onClear={() => setDate('')}\n         width={250}\n         onChange={(value) => setDate(value)}/>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux1\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Immunosuppreseur1);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/confirmationDiag1.js",["407"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\n\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\n\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nimport Steps from \"../../Form/Steps\";\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\nconst ConfirmationDiag = (props) => {\n  const [test, setTest] = useState(\"Pcr\")\n  const [datePr, setDatePr] = useState()\n  const [type, setType] = useState(\"Nasopharyngé\")\n  const [resultat, setResultat] = useState(\"Positif\")\n  var handleTypeSdate = (data) => {\n    setDatePr(data.target.value)\n     \n   \n       }\n       var handleTypeSdate1 = (data) => {\n        setDatePr(data.target.value)\n         \n       \n           }\n           var handleTypeSdate2 = (data) => {\n            setDatePr(data.target.value)\n            \n           \n               }\n               var handleTypeSdate3 = (data) => {\n                setDatePr(data.target.value)\n                \n               \n                   }\n  var handleSubmit = (e) => {\n    e.preventDefault();\n    var values = {\n      test: test,\n      datePr: datePr,\n      result: resultat,\n      type: type\n    }\n    //console.log(values)\n    props.addConfDiag(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"Admission1\")\n  }\n\n  var handleTestChange = (data) => {\n      setTest(data.target.value)\n    setResultat(\"Positif\")\n    setDatePr()\n  }\n  var handleTypeChange = (data) => {\n      setType(data.target.value)\n  }\n\n  var handleResulat1Change = (data) => {\n      setResultat(data.target.value)\n  }\n  var handleResultatChange = (data) => {\n      setResultat(data.target.value)\n\n  }\n\n  return (\n    <div>\n<div class=\"big\">\n<View style={styles.row}>\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n<View>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Confirmation diagnostique</Text>\n      <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n\n      <View style={tailwind(' items-center ')} >\n      <div  >\n      <Text style={tailwind(\" text-gray-700 text-center pt-8 pb-2\")}>Type de confirmation ?</Text>\n      <div>  <input onChange={handleTestChange} type=\"radio\" value=\"Pcr\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>PCR</Text></div>\n      <div>  <input onChange={handleTestChange} type=\"radio\" value=\"RapideAc\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Test rapide AC</Text></div>\n      <div>  <input onChange={handleTestChange} type=\"radio\" value=\"RapideAg\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Test rapide AG</Text></div>\n      <div>  <input onChange={handleTestChange} type=\"radio\" value=\"Serologie\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Sérologie</Text></div>\n      </div>\n      </View>\n      {test === \"Pcr\" && <View style={tailwind(\"items-center py-6\")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise ?</Text>\n      <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n        <View style={tailwind(' items-center ')} >\n        <div  >\n        <Text style={tailwind(\" text-gray-700 text-center pt-8 pb-2\")}>Type ?</Text>\n        <div>  <input onChange={handleTypeChange} type=\"radio\" value=\"Nasopharyngé\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Nasopharyngé</Text></div>\n        <div>  <input onChange={handleTypeChange} type=\"radio\" value=\"Aspiration trachéale\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Aspiration trachéale</Text></div>\n        <div>  <input onChange={handleTypeChange} type=\"radio\" value=\"Sanguin\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Sanguin</Text></div>\n        <div>  <input onChange={handleTypeChange} type=\"radio\" value=\"Selle ou pvt rectal\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Selle ou pvt rectal</Text></div>\n        </div>\n        </View>\n        <View style={tailwind(' items-center ')} >\n        <div  >\n        <Text style={tailwind(\" text-gray-700 text-center pt-8 pb-2\")}>Resultat ?</Text>\n        <div>  <input onChange={handleResulat1Change} type=\"radio\" value=\"Positif\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Positif</Text></div>\n        <div>  <input onChange={handleResulat1Change} type=\"radio\" value=\"Negatif\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Negatif</Text></div>\n        <div>  <input onChange={handleResulat1Change} type=\"radio\" value=\"Douteux\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Douteux</Text></div>\n        </div>\n        </View>\n      </View> }\n      {test === \"RapideAc\" && <View style={tailwind(\"items-center py-6\")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise ?</Text>\n      <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate1}/>\n      \n        <View style={tailwind(' items-center ')} >\n        <div  >\n        <Text style={tailwind(\" text-gray-700 text-center pt-8 pb-2\")}>Resultat ?</Text>\n        <div>  <input onChange={handleResultatChange} type=\"radio\" value=\"Positif\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Positif</Text></div>\n        <div>  <input onChange={handleResultatChange} type=\"radio\" value=\"Negatif\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Negatif</Text></div>\n        <div>  <input onChange={handleResultatChange} type=\"radio\" value=\"row\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>row</Text></div>\n        </div>\n        </View>\n      </View>\n      }\n      {test === \"RapideAg\" && <View style={tailwind(\"items-center py-6\")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise ?</Text>\n      <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate2}/>\n      \n        <View style={tailwind(' items-center ')} >\n        <div  >\n        <Text style={tailwind(\" text-gray-700 text-center pt-8 pb-2\")}>Resultat ?</Text>\n        <div>  <input onChange={handleResultatChange} type=\"radio\" value=\"Positif\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Positif</Text></div>\n        <div>  <input onChange={handleResultatChange} type=\"radio\" value=\"Negatif\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Negatif</Text></div>\n        <div>  <input onChange={handleResultatChange} type=\"radio\" value=\"row\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>row</Text></div>\n        </div>\n        </View>\n      </View>\n      }\n      {test === \"Serologie\" && <View style={tailwind(\"items-center py-6\")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise ?</Text>\n      <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate3}/>\n      \n        <View style={tailwind(' items-center ')} >\n        <div  >\n        <Text style={tailwind(\" text-gray-700 text-center pt-8 pb-2\")}>Resultat ?</Text>\n        <div>  <input onChange={handleResultatChange} type=\"radio\" value=\"Positif\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>Positif</Text></div>\n        <div>  <input onChange={handleResultatChange} type=\"radio\" value=\"Negatif\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>Negatif</Text></div>\n        <div>  <input onChange={handleResultatChange} type=\"radio\" value=\"row\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>row</Text></div>\n        </div>\n        </View>\n      </View>\n      }\n      <View style={tailwind(\"items-center\")}>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"HabitudesDeVie1\") }} />\n          <FormButton title=\"Suivant\" onPress={handleSubmit} />\n        </View>\n        <FormButton title=\"Pass\" onPress={() => { props.navigation.navigate(\"Admission1\") }} />\n\n      </View>\n      </View>\n      </Container>\n      <Steps current={4} /> \n</View>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  loggedUser: state.medicalService.loggedUser,\n  patientList: state.medicalService.patientList,\n\n});\nconst mapActionToProps = {\n  //login: actions.login,\n  //logout:actions.logout\n  addConfDiag: actions.addConfDiag\n};\nexport default connect(mapStateToProps, mapActionToProps)(ConfirmationDiag);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Form/SideNav.js",["408","409","410","411","412"],"import React from \"react\"\nimport \"./SideNav.css\"\n\nclass SideNav extends React.Component {\n  state = {\n    state: {\n      showNav: false\n    }\n  }\n\n  openNavClick = e => {\n    e.preventDefault()\n    this.openNav()\n  }\n\n  closeNavClick = e => {\n    e.preventDefault()\n    this.closeNav()\n  }\n\n  openNav = () => {\n    this.setState({\n      showNav: true\n    })\n\n    document.addEventListener(\"keydown\", this.handleEscKey)\n  }\n  closeNav = () => {\n    this.setState({\n      showNav: false\n    })\n\n    document.removeEventListener(\"keydown\", this.handleEscKey)\n  }\n\n  handleEscKey = e => {\n    if (e.key === \"Escape\") {\n      this.closeNav()\n    }\n  }\n\n  render() {\n    const { showNav } = this.state\n    let navCoverStyle = { width: showNav ? \"100%\" : \"0\" }\n    let sideNavStyle = { width: showNav ? \"250px\" : \"0\" }\n\n    return (\n      <React.Fragment>\n        <span onClick={this.openNavClick} class=\"open-nav\">\n          &#9776; open\n        </span>\n        <div\n          onClick={this.navCoverClick}\n          class=\"nav-cover\"\n          style={navCoverStyle}\n        />\n        <div name=\"side-nav\" class=\"side-nav\" style={sideNavStyle}>\n          <a href=\"#\" onClick={this.closeNavClick} class=\"close-nav\">\n            &times;\n          </a>\n          <a href=\"#\">About</a>\n          <a href=\"#\">Services</a>\n          <a href=\"#\">Clients</a>\n          <a href=\"#\">Contact</a>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default SideNav\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/Dashbord/http-common.js",[],"/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/hta.js",["413"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\nconst HTA = (props) => {\n\n  const [anciennete, setAnciennete] = useState(0.0);\n  const [traitement, setTraitement] = useState(0);\n  const [equilibre, setEquilibre] = useState(true);\n\n  var handleAnciennteChange = (text) => {\n    setAnciennete(text)\n  }\n  var handleTraitementChange = (text) => {\n    setTraitement(text)\n  }\n  var handleEquilibreChange = (data) => {\n      setEquilibre(data.target.value)\n  }\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"HTA\",\n      anciennete: anciennete,\n      traitement: traitement,\n      equilibre: equilibre\n    }\n    e.preventDefault();\n    //console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux\")\n  }\n\n\n\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>HTA</Text>\n\n        <FormInput title=\"Ancienneté\" placeholder=\"Ancienneté\" onChangeText={handleAnciennteChange} type=\"decimal-pad\" />\n        <FormInput title=\"Traitement\" placeholder=\"Traitement\" onChangeText={handleTraitementChange} />\n\n        <View style={styles.row}>\n        <div  onChange={handleEquilibreChange}>\n        <Text style={tailwind('text-gray-700 py-2')}>Equilibré?</Text>\n          <input type=\"radio\" value={true} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n          <input type=\"radio\" value={false} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n        </div>\n        </View>\n\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(HTA);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/grossesse.js",["414","415"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\n\n\nconst Grossesse = (props) => {\n  const [simple, setSimple] = useState(true)\n  const [gpa, setGPA] = useState(true)\n  const [sa, setSa] = useState(true)\n  const [path, setPath] = useState(true)\n  const [pathologie, setPathologie] = useState(null)\n\n  var handleSimpleChange = (data) => {\n      setSimple(data.target.value)\n  }\n  var handleGpaChange = (data) => {\n      setGPA(data.target.value)\n  }\n\n  var handleSaChange = (data) => {\n      setSa(data.target.value)\n  }\n  var handlePathChange = (data) => {\n      setPath(data.target.value)\n  }\n  var handlePathologieChange = (text) => {\n    setPathologie(text)\n  }\n\n\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"grossesse\",\n      simple: simple,\n      gpa: gpa,\n      sa: sa,\n      pathologie: pathologie\n    }\n    e.preventDefault();\n    console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux\")\n  }\n\n\n\n\n  return (\n    <div>\n    <div class=\"big\">\n    <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Grossesse en cours</Text>\n        <View style={styles.row}>\n                <div>\n            <Text style={tailwind('text-gray-700 py-2')}>Grossesse?</Text>\n                  <input  onChange={handleSimpleChange} type=\"radio\" value={true} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Grossesse simple</Text>\n                  <input  onChange={handleSimpleChange} type=\"radio\" value={false} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Grossesse compliqué</Text>\n                </div>\n              </View>\n              <View style={styles.row}>\n              <div>\n          <Text style={tailwind('text-gray-700 py-2')}>SA?</Text>\n                <input  onChange={handleSaChange} type=\"radio\" value={true} name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n                <input  onChange={handleSaChange} type=\"radio\" value={false} name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n              </div>\n            </View>\n            <View style={styles.row}>\n            <div>\n        <Text style={tailwind('text-gray-700 py-2')}>Pathologies liées à la grossesse?</Text>\n              <input  onChange={handlePathChange} type=\"radio\" value={true} name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n              <input  onChange={handlePathChange} type=\"radio\" value={false} name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n            </div>\n          </View>\n\n          {(path === \"true\") && <FormInput placeholder=\"Précisier les pathologies\" onChangeText={handlePathologieChange} />}\n\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Grossesse);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/info/information.js",["416","417","418"],"import React from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { StyleSheet,View, Text} from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\n\n\nconst Information = (props) => {\n  let config = {\n        num: [4, 7],\n        rps: 0.1,\n        radius: [5, 40],\n        life: [1.5, 3],\n        v: [2, 3],\n        tha: [-50, 50],\n        alpha: [0.6, 0],\n        scale: [.1, 0.9],\n        position: \"all\",\n        color: [ \"#ff0000\"],\n        cross: \"dead\",\n        random: 10\n      };\n\n    return (\n      <div>\n      <div class=\"big\">\n      <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n            <View style={tailwind(' items-center ')} >\n\n                <View style={tailwind('py-24')}>\n                    <FormButton title=\"Informations générales\" onPress={() => { props.navigation.navigate(\"InfosGenerales2\") }} />\n                    <FormButton title=\"Habitudes de vie\" onPress={() => { props.navigation.navigate(\"HabitudesDeVie\") }} />\n                    <FormButton title=\"Antécédents médicaux\" onPress={() => { props.navigation.navigate(\"AntecendentsMedicaux\") }} />\n                    <FormButton title=\"Expositions a risque\" onPress={() => { props.navigation.navigate(\"Exposition\") }} />\n                    <FormButton title=\"Diagnostics\" onPress={() => { props.navigation.navigate(\"DiagnosticDetails\") }} />\n                </View>\n                <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"SearchPatient\") }} />\n            </View>\n            </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n};\nexport default connect(mapStateToProps, mapActionToProps)(Information);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/diabete1.js",["419"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\nconst Diabete1 = (props) => {\n\n  const [anciennete, setAnciennete] = useState(0.0);\n  const [traitement, setTraitement] = useState(0);\n  const [equilibre, setEquilibre] = useState(true);\n\n  var handleAnciennteChange = (text) => {\n    setAnciennete(text)\n  }\n  var handleTraitementChange = (text) => {\n    setTraitement(text)\n  }\n  var handleEquilibreChange = (data) => {\n      setEquilibre(data.target.value)\n  }\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"Diabete\",\n      anciennete: anciennete,\n      traitement: traitement,\n      equilibre: equilibre\n    }\n    e.preventDefault();\n    //console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux1\")\n  }\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Diabète</Text>\n\n        <FormInput title=\"Ancienneté\" placeholder=\"Ancienneté\" onChangeText={handleAnciennteChange} type=\"decimal-pad\" />\n        <FormInput title=\"Traitement\" placeholder=\"Traitement\" onChangeText={handleTraitementChange} />\n        <View style={styles.row}>\n                <div  onChange={handleEquilibreChange}>\n        \t  <Text style={tailwind('text-gray-700 py-2')}>Equilibré?</Text>\n                  <input type=\"radio\" value={true} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n                  <input type=\"radio\" value={false} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n                </div>\n              </View>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux1\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\nconst styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n});\nexport default connect(mapStateToProps, mapActionToProps)(Diabete1);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/priseAINS1.js",["420"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport { DatePicker } from '@assenti/rui-components';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\nconst PriseAINS1 = (props) => {\n\n  const [dose, setDose] = useState(0.0)\n  const [duree, setDuree] = useState(0)\n  const [molecule, setMolecule] = useState(\"\")\n  const [date, setDate] = useState()\n\n  var handleDoseChange = (text) => {\n    setDose(text)\n  }\n  var handleDureeChange = (text) => {\n    setDuree(text)\n  }\n  var handleMoleculeChange = (text) => {\n    setMolecule(text)\n  }\n\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"PriseAINS\",\n      dose: dose,\n      molecule: molecule,\n      duree: duree,\n      datePrise: date\n    }\n    e.preventDefault();\n    console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux1\")\n  }\n\n\n\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Prise récentes d'AINS</Text>\n\n        <FormInput placeholder=\"Dose \" type=\"decimal-pad\" onChangeText={handleDoseChange} />\n        <FormInput placeholder=\"Molecule\" onChangeText={handleMoleculeChange} />\n        <FormInput placeholder=\"Duree\" type=\"number-pad\" onChangeText={handleDureeChange} />\n        <Text style={tailwind('text-gray-700 py-2')}>Date de prise</Text>\n        <DatePicker\n        color=\"primary\"\n        placeholder=\"YYYY-MM-DD\"\n        value={date}\n        clearable\n        minDate=\"1920-05-01\"\n        maxDate={new Date()}\n        onDate={(date) => {\n        setDate(date)\n        }}\n        onClear={() => setDate('')}\n        width={250}\n        onChange={(value) => setDate(value)}/>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux1\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\nconst styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n});\nexport default connect(mapStateToProps, mapActionToProps)(PriseAINS1);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/evaluationFinale.js",["421","422","423"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport FormInput from '../../Form/FormInput';\nimport FormInput2 from '../../Form/FormInput2';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n   \n\n\nconst EvaluationFinale = (props) => {\n  const [dateSor, setDateSor] = useState()\n  const [deces, setDeces] = useState(false)\n  const [dateDispSig, setDateDispSig] = useState()\n  const [causesDir, setCausesDir] = useState()\n  const [causesIndir, setCausesIndir] = useState()\n\n  var handleTypeSdate = (data) => {\n    setDateSor(data.target.value)\n       }\n       var handleTypeSdate = (data) => {\n        setDateDispSig(data.target.value)\n           }\n  var handleDecesChange = (data) => {\n    if (data.target.value===\"non\")\n      setDeces(false)\n    else setDeces(true)\n  }\n  var handleSubmit = (e) => {\n    e.preventDefault()\n    var values = {\n      dateSor: dateSor,\n      dateDispSig: dateDispSig,\n      deces: deces,\n      causesDir: causesDir,\n      causesIndir: causesIndir,\n    }\n    //console.log(values)\n    props.addEvaluationFinale(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"DiagnosticDetails\")\n  }\n\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n    <View style={tailwind(\"items-center py-8\")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Evaluation finale</Text>\n      <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n      <View style={tailwind(\"items-center py-8\")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de sortie?</Text>\n      <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n      </View>\n      <View style={tailwind(\"items-center\")}>\n        <View style={styles.row}>\n        <Text style={tailwind(\"text-gray-700\")}>Décès</Text>\n        <div>\n          <input  onChange={handleDecesChange} type=\"radio\" value=\"non\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n          <input  onChange={handleDecesChange} type=\"radio\" value=\"oui\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n        </div>\n        </View>\n        {\n          deces === false &&<View style={tailwind(\"items-center py-8\")}>\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de disparition des signes</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n          </View>\n            \n        }\n        {\n          deces === true && <View style={tailwind(\"items-center\")}>\n            <FormInput placeholder=\"Causes directes\" onChangeText={setCausesDir} />\n            <FormInput placeholder=\"Causes indirectes\" onChangeText={setCausesIndir} />\n          </View>\n        }\n\n      </View>\n\n      <View style={tailwind(\"items-center py-8\")}>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"DiagnosticDetails\") }} />\n          <FormButton title=\"Enregistrer\" onPress={handleSubmit} />\n\n        </View>\n      </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\n\nconst mapStateToProps = (state) => ({\n  loggedUser: state.medicalService.loggedUser,\n  patientList: state.medicalService.patientList,\n});\nconst mapActionToProps = {\n  login: actions.login,\n  logout: actions.logout,\n  addEvaluationFinale: actions.addEvaluationFinale\n};\nexport default connect(mapStateToProps, mapActionToProps)(EvaluationFinale);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/examenRadioParaCli.js",["424","425","426","427","428","429","430"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../../Form/FormButton\";\nimport FormInput from \"../../Form/FormInput\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport FormCheckBox from \"../../Form/CheckBox\";\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\n\n\nconst ExamenRadioParaCli = (props) => {\n  var handleTypeSdate = (data) => {\n    setDatePr(data.target.value)     \n       }\n  const [type, setType] = useState(\"Thorax\")\n  const [datePr, setDatePr] = useState()\n  const [result, setResult] = useState(\"Normale\")\n  const [espaceQT, setEspaceQT] = useState()\n  const [aspect, setAspect] = useState()\n  const [nbQua, setNbQua] = useState()\n\n  var handleCheckBoxChange = (newValue, text) => {\n    if (newValue == true) setResult(result + text + \" \")\n    else { setResult(result.replace(text + \" \", \"\")) }\n\n  }\n\n\n  var handleResultChange = (data) => {\n     setResult(data.target.value) }\n  var handleTypeChange = (data) => {\n    if (data.target.value===\"0\") {\n      setType(\"Thorax\")\n      setDatePr()\n      setResult(\"Normale\")\n    }\n\n    if (data.target.value===\"1\") {\n      setType(\"TdmTho\")\n      setDatePr()\n      setResult(\"\")\n    }\n\n    if (data.target.value===\"2\") {\n      setType(\"ECG\")\n      setDatePr()\n      setResult(\"\")\n    }\n\n\n  }\n  var handleSubmit = (e) => {\n    e.preventDefault()\n    var values = {\n      type: type,\n      datePr: datePr,\n      result: result,\n      espaceQT: espaceQT,\n      aspect: aspect,\n      nbQua: nbQua,\n      datepr: datePr\n    }\n    props.addExamRadioParaCli(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"DiagnosticDetails\")\n    console.log(values)\n\n  }\n\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n    <View>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Examens radiologiques et para-cliniques</Text>\n      <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n      <View style={tailwind(' items-center ')} >\n      <div>\n      <Text style={tailwind(\"pt-8 text-center pb-2 text-gray-700\")}>Ajouter un examen?</Text>\n    <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"0\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Radio Thorax</Text></div>\n    <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"1\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>TDM thoracique</Text></div>\n    <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"2\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>ECG</Text></div>\n    </div>\n    </View>\n      <View style={tailwind(\"items-center\")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise</Text>\n      <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n      \n\n      </View>\n      {\n        type === \"Thorax\" && <View style={tailwind(\"items-center py-2\")}>\n          <div>\n          <Text style={tailwind(\"pt-8 text-center pb-2 text-gray-700\")}>Radio Thorax</Text>\n        <div>  <input  onChange={handleResultChange} type=\"radio\" value=\"Normale\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Normale</Text></div>\n        <div>  <input  onChange={handleResultChange} type=\"radio\" value=\"Opacité alvéolaire\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Opacité alvéolaire</Text></div>\n        <div>  <input  onChange={handleResultChange} type=\"radio\" value=\"Opacité interstitielle\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Opacité interstitielle</Text></div>\n        </div>\n          <FormInput placeholder=\"Nb de quadrants atteints\" type=\"number-pad\" onChangeText={setNbQua} />\n        </View>\n      }\n      {\n        type === \"TdmTho\" && <View  >\n\n\n          <Text style={tailwind(\"font-bold py-4 text-xl text-gray-700 text-center\")}>TDM thoracique</Text>\n\n\n\n          <View style={tailwind(\"items-center py-2\")}>\n            <View>\n            <FormCheckBox text=\"Normale\" value={false} onPress={handleCheckBoxChange} />\n            <FormCheckBox text=\"Atteinte alvéolaire\" value={false} onPress={handleCheckBoxChange} />\n            <FormCheckBox text=\"Atteinte interstitielle\" value={false} value={false} onPress={handleCheckBoxChange} />\n            <FormCheckBox text=\"Atteinte bilatérale\" value={false} value={false} onPress={handleCheckBoxChange} />\n            <FormCheckBox text=\"Atteinte unilatérale\" value={false} value={false} onPress={handleCheckBoxChange} />\n\n            </View>\n          </View>\n\n\n\n          <View style={tailwind('items-center')}>\n            <FormInput placeholder=\"Aspect en verre dépoli\"  onChangeText={setAspect} />\n\n          </View>\n        </View>\n      }\n      {\n        type === \"ECG\" && <View >\n          <Text style={tailwind(\"font-bold py-4 text-xl text-gray-700 text-center\")}>ECG</Text>\n          <View style={tailwind(\"items-center\")}>\n            <View>\n            <FormCheckBox text=\"Normale\" value={false} onPress={handleCheckBoxChange} />\n            <FormCheckBox text=\"Troubles de la repolarisation\" value={false} onPress={handleCheckBoxChange} />\n            <FormCheckBox text=\"Troubles du rythme\" value={false} value={false} onPress={handleCheckBoxChange} />\n            <FormCheckBox text=\"Bloc auriculo vantriculaire\" value={false} value={false} onPress={handleCheckBoxChange} />\n            </View>\n          </View>\n          <View style={tailwind(\"items-center\")}>\n            <FormInput placeholder=\"Espace Qt\" type=\"decimal-pad\" onChangeText={setEspaceQT} />\n\n          </View>\n\n        </View>\n      }\n      <View style={tailwind(\"items-center\")}>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => props.navigation.navigate(\"DiagnosticDetails\")} />\n          <FormButton title=\"Enregistrer\" onPress={handleSubmit} />\n\n        </View>\n\n      </View>\n    </View>\n    </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList,\n});\nconst mapActionToProps = {\n  login: actions.login,\n  logout: actions.logout,\n  addExamRadioParaCli: actions.addExamRadioParaCli\n};\nexport default connect(mapStateToProps, mapActionToProps)(ExamenRadioParaCli);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/examenRadioParaCli1.js",["431","432","433","434","435","436"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../../Form/FormButton\";\nimport FormInput from \"../../Form/FormInput\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport FormCheckBox from \"../../Form/CheckBox\";\nimport { DatePicker } from '@assenti/rui-components';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nimport Steps from \"../../Form/Steps\";\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\n\n\nconst ExamenRadioParaCli = (props) => {\n\n  const [type, setType] = useState(\"Thorax\")\n  const [datePr, setDatePr] = useState()\n  const [result, setResult] = useState(\"Normale\")\n  const [espaceQT, setEspaceQT] = useState()\n  const [aspect, setAspect] = useState()\n  const [nbQua, setNbQua] = useState()\n\n  var handleCheckBoxChange = (newValue, text) => {\n    if (newValue === true) setResult(result + text + \" \")\n    else { setResult(result.replace(text + \" \", \"\")) }\n\n  }\n\n\n  var handleResultChange = (data) => {\n     setResult(data.target.value) }\n  var handleTypeChange = (data) => {\n    if (data.target.value===\"0\") {\n      setType(\"Thorax\")\n      setDatePr()\n      setResult(\"Normale\")\n    }\n\n    if (data.target.value===\"1\") {\n      setType(\"TdmTho\")\n      setDatePr()\n      setResult(\"\")\n    }\n\n    if (data.target.value===\"2\") {\n      setType(\"ECG\")\n      setDatePr()\n      setResult(\"\")\n    }\n\n\n  }\n  var handleSubmit = (e) => {\n    e.preventDefault()\n    var values = {\n      type: type,\n      datePr: datePr,\n      result: result,\n      espaceQT: espaceQT,\n      aspect: aspect,\n      nbQua: nbQua,\n      datepr: datePr\n    }\n    props.addExamRadioParaCli(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"ExamBio1\")\n    console.log(values)\n\n  }\n\n\n  return (\n    <div>\n<div class=\"big\">\n<View style={styles.row}>\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n    <View>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Examens radiologiques et para-cliniques</Text>\n      <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n      <View style={tailwind(' items-center ')} >\n      <div>\n      <Text style={tailwind(\"pt-8 text-center pb-2 text-gray-700\")}>Ajouter un examen?</Text>\n    <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"0\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Radio Thorax</Text></div>\n    <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"1\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>TDM thoracique</Text></div>\n    <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"2\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>ECG</Text></div>\n    </div>\n    </View>\n      <View style={tailwind(\"items-center\")}>\n      <DatePicker\n      color=\"primary\"\n      placeholder=\"YYYY-MM-DD\"\n      value={datePr}\n      clearable\n      minDate=\"1920-05-01\"\n      maxDate={new Date()}\n      onDate={(datePr) => {\n      setDatePr(datePr)\n      }}\n      onClear={() => setDatePr('')}\n      width={250}\n      onChange={(value) => setDatePr(value)}/>\n\n      </View>\n      {\n        type === \"Thorax\" && <View style={tailwind(\"items-center py-2\")}>\n          <div>\n          <Text style={tailwind(\"pt-8 text-center pb-2 text-gray-700\")}>Radio Thorax</Text>\n        <div>  <input  onChange={handleResultChange} type=\"radio\" value=\"Normale\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Normale</Text></div>\n        <div>  <input  onChange={handleResultChange} type=\"radio\" value=\"Opacité alvéolaire\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Opacité alvéolaire</Text></div>\n        <div>  <input  onChange={handleResultChange} type=\"radio\" value=\"Opacité interstitielle\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Opacité interstitielle</Text></div>\n        </div>\n          <FormInput placeholder=\"Nb de quadrants atteints\" type=\"number-pad\" onChangeText={setNbQua} />\n        </View>\n      }\n      {\n        type === \"TdmTho\" && <View  >\n\n\n          <Text style={tailwind(\"font-bold py-4 text-xl text-gray-700 text-center\")}>TDM thoracique</Text>\n\n\n\n          <View style={tailwind(\"items-center py-2\")}>\n            <View>\n            <FormCheckBox text=\"Normale\" value={false} onPress={handleCheckBoxChange} />\n            <FormCheckBox text=\"Atteinte alvéolaire\" value={false} onPress={handleCheckBoxChange} />\n            <FormCheckBox text=\"Atteinte interstitielle\" value={false} value={false} onPress={handleCheckBoxChange} />\n            <FormCheckBox text=\"Atteinte bilatérale\" value={false} value={false} onPress={handleCheckBoxChange} />\n            <FormCheckBox text=\"Atteinte unilatérale\" value={false} value={false} onPress={handleCheckBoxChange} />\n\n            </View>\n          </View>\n\n\n\n          <View style={tailwind('items-center')}>\n            <FormInput placeholder=\"Aspect en verre dépoli\"  onChangeText={setAspect} />\n\n          </View>\n        </View>\n      }\n      {\n        type === \"ECG\" && <View >\n          <Text style={tailwind(\"font-bold py-4 text-xl text-gray-700 text-center\")}>ECG</Text>\n          <View style={tailwind(\"items-center\")}>\n            <View>\n            <FormCheckBox text=\"Normale\" value={false} onPress={handleCheckBoxChange} />\n            <FormCheckBox text=\"Troubles de la repolarisation\" value={false} onPress={handleCheckBoxChange} />\n            <FormCheckBox text=\"Troubles du rythme\" value={false} value={false} onPress={handleCheckBoxChange} />\n            <FormCheckBox text=\"Bloc auriculo vantriculaire\" value={false} value={false} onPress={handleCheckBoxChange} />\n            </View>\n          </View>\n          <View style={tailwind(\"items-center\")}>\n            <FormInput placeholder=\"Espace Qt\" type=\"decimal-pad\" onChangeText={setEspaceQT} />\n\n          </View>\n\n        </View>\n      }\n      <View style={tailwind(\"items-center\")}>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => props.navigation.navigate(\"ExamenCliniques1\")} />\n          <FormButton title=\"Suivant\" onPress={handleSubmit} />\n\n        </View>\n        <FormButton title=\"Pass\" onPress={() => props.navigation.navigate(\"ExamBio1\")} />\n      </View>\n    </View>\n    </Container>\n      <Steps current={8} /> \n</View>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList,\n});\nconst mapActionToProps = {\n  login: actions.login,\n  logout: actions.logout,\n  addExamRadioParaCli: actions.addExamRadioParaCli\n};\nexport default connect(mapStateToProps, mapActionToProps)(ExamenRadioParaCli);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/evolution1.js",["437","438","439","440","441"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport FormInput from '../../Form/FormInput';\nimport FormInput2 from '../../Form/FormInput2';\nimport { DatePicker } from '@assenti/rui-components';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nimport Steps from \"../../Form/Steps\";\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\nconst Evolution = (props) => {\n\n  //dateTime picker\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n\n  const showDatePicker = () => {\n    setDatePickerVisibility(true);\n  };\n\n  const hideDatePicker = () => {\n    setDatePickerVisibility(false);\n  };\n\n  const handleConfirm = (date) => {\n    //date.setTime(date.getTime()-date.getTimezoneOffset()*60*1000)\n    setTime(date)\n    hideDatePicker();\n  };\n\n  const [category, setCategory] = useState()\n  const [type, setType] = useState()\n  const [time, setTime] = useState()\n  const [value, setValue] = useState()\n  const [validation, setValidation] = useState()\n\n  const [dateD, setDateD] = useState()\n  const [dateF, setDateF] = useState()\n  const [saps2, setSaps2] = useState()\n  const [apache2, setApache2] = useState()\n  const [sofa, setSofa] = useState()\n  const [dateS, setDateS] = useState()\n  const [typeS, setTypeS] = useState()\n  const [dateH, setDateH] = useState()\n  const [hopital, setHopital] = useState()\n  const [service, setService] = useState()\n  const [ville, setVille] = useState()\n  const [lieu, setLieu] = useState()\n\n  const [hospi, setHospi] = useState()\n\n\n  var handleHospiChange = (data) => {\n    if (data.target.value===\"0\") setHospi(true)\n    if (data.target.value===\"1\") setHospi(false)\n  }\n\n  var handleTypeSChange = (data) => {\n setTypeS(data.target.value)\n\n    }\n\n\n\n  var handleValueCb = (data) => {\n    if (data.target.value===\"oui\")\n      setValue(1.0)\n    if (data.target.value===\"non\")\n      setValue(0.0)\n  }\n\n  var handleEvolutionType = (data) => {\n    if (data.target.value===\"0\") {\n      setType(\"IHH\")\n      setTypeS(\"\")\n\n    }\n    if (data.target.value===\"1\") {\n      setType(\"Ho\")\n      setTypeS(\"Transfert inter-hopital\")\n    }\n\n  }\n\n\n\n\n\n\n  var handleTypeChange = (data) => {\n setType(data.target.value)\n    }\n\n  var handleSubmit = () => {\n    if (type === \"Température\" && (value > 43 || value < 30)) {\n      setValidation(\"La temperature doit etre comprise entre 30et 43 °C !\")\n      return\n    }\n\n    if (type === \"SaO2\" && (value > 100 || value < 0)) {\n      setValidation(\"Le pourcentage de SaO2  doit etre compris entre 0 % et 100 % !\");\n      return\n    }\n\n\n    if (type === \"FR\" && (value > 250 || value < 0)) {\n      setValidation(\"La valuer du FR doit etre comprise entre 0 et 250 C/min !\");\n      return\n    }\n\n    if (type === \"FC\" && (value > 150 || value < 0)) {\n      setValidation(\"La valuer du FC doit etre comprise entre 0 et 150 C/min !\");\n      return\n    }\n    if (type === \"Score de glasgow\" && (value > 15 || value < 0)) {\n      setValidation(\"Le score de Glasgow doit etre entre 0 et 15 !\");\n      return\n    }\n    if (category === \"USI\") {\n      if (dateD === undefined) { setValidation(\"La date du transfert au USI est obligatoire !\"); return; }\n      if (saps2 === undefined) { setValidation(\"SAPS2 est obligatoire\"); return; }\n      if (saps2 > 194) { setValidation(\"SAPS2 doit etre compris entre 0 et 194 \"); return; }\n      if (apache2 === undefined) { setValidation(\"APACHE2 est obligatoire !\"); return }\n      if (apache2 > 74) { setValidation(\"APACHE 2 doit etre compris entre 0 et 74\"); return }\n      if (sofa > 24) { setValidation(\"SOFA doit etre compris entre 0 et 24\"); return }\n\n    }\n\n    if (category === \"AssResp\") {\n      if (dateD === undefined) { setValidation(\"La date de début est obligatoire!\"); return; }\n\n    }\n    if(category ===\"Evolution\"){\n      if(dateS === undefined) {setValidation(\"La date de sortie est obligatoire\");return}\n    }\n\n\n\n    var values = {\n      time: time,\n      type: type,\n      category: category,\n      value: value,\n      dateD: dateD,\n      dateF: dateF,\n      apache2: apache2,\n      saps2: saps2,\n      sofa: sofa,\n      dateS: dateS,\n      typeS: typeS,\n      dateH: dateH,\n      hopital: hopital,\n      service: service,\n      ville: ville,\n      lieu: lieu\n\n    }\n    console.log(values)\n    setCategory()\n    setTime()\n    setValue()\n    setDateF()\n    setDateD()\n    setSofa()\n    setApache2()\n    setSaps2()\n    props.addEvolution(props.patientList[\"cin\"], values)\n\n  }\n\n  return (\n    <div>\n<div class=\"big\">\n<View style={styles.row}>\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n    <View style={tailwind(\"px-8 py-8 \")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Evolution</Text>\n      <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n      <View style={tailwind(\"items-center py-8\")}>\n        <FormButton title=\"Evolution quotidienne\" onPress={() => { setCategory(\"evaluValues\"); setType(\"Température\"); setValidation() }}/>\n        {\n          category === \"evaluValues\" && <View style={tailwind(\"items-center\")}>\n          <div  >\n\n          <div>  <input onChange={handleTypeChange} type=\"radio\" value=\"Température\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Température</Text></div>\n          <div>  <input onChange={handleTypeChange} type=\"radio\" value=\"SaO2\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>SaO2</Text></div>\n          <div>  <input onChange={handleTypeChange} type=\"radio\" value=\"Besoin en O2\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Besoin en O2</Text></div>\n          <div>  <input onChange={handleTypeChange} type=\"radio\" value=\"TA\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>TA</Text></div>\n          <div>  <input onChange={handleTypeChange} type=\"radio\" value=\"FR\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>FR</Text> </div>\n          <div>   <input onChange={handleTypeChange} type=\"radio\" value=\"Signes de lutte\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Signes de lutte</Text></div>\n          <div>   <input onChange={handleTypeChange} type=\"radio\" value=\"FC\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>FC </Text></div>\n          <div>   <input onChange={handleTypeChange} type=\"radio\" value=\"Froideur\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Froideur</Text></div>\n          <div>   <input onChange={handleTypeChange} type=\"radio\" value=\"Marbrures\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Marbrures</Text></div>\n          <div>   <input onChange={handleTypeChange} type=\"radio\" value=\"Angoisse/Agitation\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Angoisse/Agitation</Text></div>\n          <div>   <input onChange={handleTypeChange} type=\"radio\" value=\"Score de glasgow\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Score de glasgow</Text></div>\n          </div>\n            <Text style={tailwind(\"text-red-500 font-bold pt-4 text-center\")}>{validation}</Text>\n            {(type === \"Température\" || type === \"SaO2\" || type === \"Besoin en O2\" || type === \"TA\" || type === \"FR\" || type === \"FC\" || type === \"Score de glasgow\") &&\n              <FormInput placeholder={type} type=\"decimal-pad\" onChangeText={setValue} />\n            }\n            {\n              (type === \"Signes de lutte\" || type === \"Froideur\" || type === \"Marbrures\" || type === \"Angoisse/Agitation\") &&\n              <View style={styles.row}>\n                <Text style={tailwind(\"py-1 pr-4\")}>{type + \"?\"}</Text>\n                <div  >\n                <div>  <input onChange={handleValueCb} type=\"radio\" value=\"oui\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text></div>\n                <div>  <input onChange={handleValueCb} type=\"radio\" value=\"non\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text></div>\n                <div>  <input onChange={handleValueCb} type=\"radio\" value=\"row\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>row</Text></div>\n                </div>\n              </View>\n            }\n\n\n\n\n\n            <FormButton title=\"Enregistrer\" onPress={handleSubmit} />\n          </View>\n\n        }\n        <FormButton title=\"Transfert en USI\" onPress={() => { setCategory(\"USI\"); setValidation(); setType(\"IRA grave (3)\"); }}/>\n        {\n          category === \"USI\" && <View >\n            <Text style={tailwind(\"text-red-500 font-bold p-4 text-center\")}>Choisir la méthode de transfert ?</Text>\n            <div  >\n            <div>  <input onChange={handleTypeChange} type=\"radio\" value=\"IRA grave (3)\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>IRA grave (3)</Text></div>\n            <div>  <input onChange={handleTypeChange} type=\"radio\" value=\"Sepsis/Choc septique\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Sepsis/Choc septique</Text></div>\n            </div>\n            <View style={tailwind(\"items-center\")}>\n            <DatePicker\n            color=\"primary\"\n            placeholder=\"YYYY-MM-DD\"\n            value={dateD}\n            clearable\n            minDate=\"1920-05-01\"\n            maxDate={new Date()}\n            onDate={(dateD) => {\n            setDateD(dateD)\n            }}\n            onClear={() => setDateD('')}\n            width={250}\n            onChange={(value) => setDateD(value)}/>\n              <DatePicker\n              color=\"primary\"\n              placeholder=\"YYYY-MM-DD\"\n              value={dateF}\n              clearable\n              minDate=\"1920-05-01\"\n              maxDate={new Date()}\n              onDate={(dateF) => {\n              setDateF(dateF)\n              }}\n              onClear={() => setDateF('')}\n              width={250}\n              onChange={(value) => setDateF(value)}/>\n              <FormInput placeholder={\"SAPS 2\"} onChangeText={setSaps2} type=\"decimal-pad\" maxLength={Number(\"8\")} />\n              <FormInput placeholder={\"APACHE 2\"} onChangeText={setApache2} type=\"decimal-pad\" maxLength={Number(\"8\")} />\n              <FormInput placeholder={\"SOFA\"} onChangeText={setSofa} type=\"decimal-pad\" maxLength={Number(\"8\")} />\n              <FormButton title=\"Enregistrer\" onPress={handleSubmit} />\n            </View>\n\n\n          </View>\n\n        }\n        <FormButton title=\"Assistance respiratoire\" onPress={() => { setCategory(\"AssResp\"); setValidation() }}/>\n        {\n          category === \"AssResp\" && <View >\n            <Text style={tailwind(\"text-red-500 font-bold p-4 text-center\")}>{validation}</Text>\n            <Text style={tailwind(\"text-center text-gray-700 p-2 text-center\")}>Choisir la méthode de transfert ?</Text>\n\n\n            <View style={styles.row}>\n        <div>\n          <div><input  onChange={handleTypeChange} type=\"radio\" value=\"HFNC / CPAP min 12h\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>HFNC / CPAP min 12h</Text></div>\n          <div><input  onChange={handleTypeChange} type=\"radio\" value=\"VNI min 12h\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>VNI min 12h</Text></div>\n          <div><input  onChange={handleTypeChange} type=\"radio\" value=\"VMI\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>VMI</Text></div>\n          <div><input  onChange={handleTypeChange} type=\"radio\" value=\"DV\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>DV</Text></div>\n          <div><input  onChange={handleTypeChange} type=\"radio\" value=\"Protective ventilation\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Protective ventilation</Text></div>\n          <div><input  onChange={handleTypeChange} type=\"radio\" value=\"Ventilation free days\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Ventilation free days</Text></div>\n          <div><input  onChange={handleTypeChange} type=\"radio\" value=\"Device free days\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Device free days</Text></div>\n        </div>\n      </View>\n\n\n            <View style={tailwind(\"items-center\")}>\n            <DatePicker\n            color=\"primary\"\n            placeholder=\"YYYY-MM-DD\"\n            value={dateD}\n            clearable\n            minDate=\"1920-05-01\"\n            maxDate={new Date()}\n            onDate={(dateD) => {\n            setDateD(dateD)\n            }}\n            onClear={() => setDateD('')}\n            width={250}\n            onChange={(value) => setDateD(value)}/>\n              <DatePicker\n              color=\"primary\"\n              placeholder=\"YYYY-MM-DD\"\n              value={dateF}\n              clearable\n              minDate=\"1920-05-01\"\n              maxDate={new Date()}\n              onDate={(dateF) => {\n              setDateF(dateF)\n              }}\n              onClear={() => setDateF('')}\n              width={250}\n              onChange={(value) => setDateF(value)}/>\n              <FormButton title=\"Enregistrer\" onPress={handleSubmit} />\n            </View>\n          </View>\n        }\n        <FormButton title=\"Evolution de l'isolement/hospitalisation\" onPress={() => { setCategory(\"Evolution\"); setValidation(); setType(\"IHH\"); setHospi(true) }}/>\n\n        {\n          category === \"Evolution\" && <View >\n                 <Text style={tailwind(\"text-red-500 font-bold p-4 text-center\")}>{validation}</Text>\n                 <View style={styles.row}>\n                 <div>\n                 <div><input  onChange={handleEvolutionType} type=\"radio\" value=\"0\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Evolution de l'isolement hors hopital</Text></div>\n                 <div><input  onChange={handleEvolutionType} type=\"radio\" value=\"1\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Evolution de l'hospitalisation</Text></div>\n                 </div>\n                 </View>\n\n            {\n              type === \"IHH\" && <View style={tailwind(\"\")}>\n                <View style={tailwind(\"items-center\")}>\n                <DatePicker\n                color=\"primary\"\n                placeholder=\"YYYY-MM-DD\"\n                value={dateS}\n                clearable\n                minDate=\"1920-05-01\"\n                maxDate={new Date()}\n                onDate={(dateS) => {\n                setDateS(dateS)\n                }}\n                onClear={() => setDateS('')}\n                width={250}\n                onChange={(value) => setDateS(value)}/>\n                </View>\n                <View style={styles.row}>\n                  <Text style={tailwind(\"text-gray-700 py-2 \")}>Hospitalisé ?</Text>\n                  <View style={styles.row}>\n                  <div>\n                  <div><input  onChange={handleHospiChange} type=\"radio\" value=\"0\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text></div>\n                  <div><input  onChange={handleHospiChange} type=\"radio\" value=\"1\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text></div>\n                  </div>\n                  </View>\n                </View>\n                {\n                  hospi === true && <View style={tailwind(\"items-center\")}>\n                  <DatePicker\n                  color=\"primary\"\n                  placeholder=\"YYYY-MM-DD\"\n                  value={dateH}\n                  clearable\n                  minDate=\"1920-05-01\"\n                  maxDate={new Date()}\n                  onDate={(dateH) => {\n                  setDateH(dateH)\n                  }}\n                  onClear={() => setDateH('')}\n                  width={250}\n                  onChange={(value) => setDateH(value)}/>\n\n                    <FormInput placeholder=\"Hopital\" onChangeText={setHopital} />\n                    <FormInput placeholder=\"Service\" onChangeText={setService} />\n                    <FormInput placeholder=\"Ville\" onChangeText={setVille} />\n                  </View>\n                }\n                {\n                  hospi === false && <View >\n                  <div>\n                  <div>  <input  onChange={handleTypeSChange} type=\"radio\" value=\"Evolution de l'isolement hors hopital\" name=\"gender6\" /> <Text style={tailwind('text-gray-700 py-2')}>Evolution de l'isolement hors hopital</Text></div>\n                  <div>  <input  onChange={handleTypeSChange} type=\"radio\" value=\"Evolution de l'hospitalisation\" name=\"gender6\" /> <Text style={tailwind('text-gray-700 py-2')}>Evolution de l'hospitalisation</Text></div>\n                  <div>  <input  onChange={handleTypeSChange} type=\"radio\" value=\"Deccés\" name=\"gender6\" /> <Text style={tailwind('text-gray-700 py-2')}>Deccés</Text></div>\n                  </div>\n                  </View>\n                }\n                <View style={tailwind(\"items-center\")}>\n                  <FormButton title=\"Enregistrer\" onPress={handleSubmit} />\n                </View>\n\n              </View>\n            }\n\n            {\n              type === \"Ho\" && <View style={tailwind(\"items-center\")}>\n              <DatePicker\n              color=\"primary\"\n              placeholder=\"YYYY-MM-DD\"\n              value={dateS}\n              clearable\n              minDate=\"1920-05-01\"\n              maxDate={new Date()}\n              onDate={(dateS) => {\n              setDateS(dateS)\n              }}\n              onClear={() => setDateS('')}\n              width={250}\n              onChange={(value) => setDateS(value)}/>\n                <div>\n                <div>  <input  onChange={handleTypeSChange} type=\"radio\" value=\"Transfert inter-hopital\" name=\"gender7\" /> <Text style={tailwind('text-gray-700 py-2')}>Transfert inter-hopital</Text></div>\n                <div>  <input  onChange={handleTypeSChange} type=\"radio\" value=\"Transfert inter-service\" name=\"gender7\" /> <Text style={tailwind('text-gray-700 py-2')}>Transfert inter-service</Text></div>\n                <div>  <input  onChange={handleTypeSChange} type=\"radio\" value=\"Retour à domicile en quarantine\" name=\"gender7\" /> <Text style={tailwind('text-gray-700 py-2')}>Retour à domicile en quarantine</Text></div>\n                <div>  <input  onChange={handleTypeSChange} type=\"radio\" value=\"Transfert à domicile sans quarantine\" name=\"gender7\" /> <Text style={tailwind('text-gray-700 py-2')}>Transfert à domicile sans quarantine</Text></div>\n                <div>  <input  onChange={handleTypeSChange} type=\"radio\" value=\"Deccés\" name=\"gender7\" /> <Text style={tailwind('text-gray-700 py-2')}>Deccés</Text></div>\n                </div>\n                {\n                  (typeS === \"Transfert inter-hopital\" || typeS === \"Transfert inter-service\") && <FormInput placeholder=\"Lieu\" onChangeText={setLieu} />\n                }\n\n                <View style={tailwind(\"items-center\")}>\n                  <FormButton title=\"Enregistrer\" onPress={handleSubmit} />\n                </View>\n              </View>\n            }\n\n          </View>\n\n        }\n\n      </View>\n\n\n      <View style={tailwind(\"items-center py-8\")}>\n        <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"Traitement1\") }} />\n        <FormButton title=\"Pass\" onPress={() => { props.navigation.navigate(\"EvaluationFinale1\") }} />\n      </View>\n      </View>\n      </Container>\n      <Steps current={11} /> \n</View>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\n\nconst mapStateToProps = (state) => ({\n\n  patientList: state.medicalService.patientList,\n  evolutionList: state.medicalService.evolutionList\n});\nconst mapActionToProps = {\n\n  addEvolution: actions.addEvolution,\n  getEvolution: actions.getEvolution,\n};\nexport default connect(mapStateToProps, mapActionToProps)(Evolution);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Reducers/medicalService.js",[],"/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/index.js",[],"/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/insRenaleChro.js",["442"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\nconst InsRenaleChro = (props) => {\n\n  const [anciennete, setAnciennete] = useState(0.0);\n  const [traitement, setTraitement] = useState(0);\n  const [hemodialyse, setHemodialyse] = useState(true);\n\n  var handleAnciennteChange = (text) => {\n    setAnciennete(text)\n  }\n  var handleTraitementChange = (text) => {\n    setTraitement(text)\n  }\n  var handleHemodialyseChange = (data) => {\n      setHemodialyse(data.target.value)\n  }\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"InsRenaleChro\",\n      anciennete: anciennete,\n      traitement: traitement,\n      hemodialyse: hemodialyse\n    }\n    e.preventDefault();\n    //console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux\")\n  }\n\n\n\n\n  return (\n\n    <div>\n    <div class=\"big\">\n    <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Insuffisance rénale chronique</Text>\n\n        <FormInput title=\"Ancienneté\" placeholder=\"Ancienneté\" onChangeText={handleAnciennteChange} type=\"decimal-pad\" />\n        <FormInput title=\"Traitement\" placeholder=\"Traitement\" onChangeText={handleTraitementChange} />\n\n        <View style={styles.row}>\n        <div  onChange={handleHemodialyseChange}>\n        <Text style={tailwind('text-gray-700 py-2')}>Hémodialyse?</Text>\n          <input type=\"radio\" value={true} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n          <input type=\"radio\" value={false} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n        </div>\n        </View>\n\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n\n        </View>\n\n\n\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(InsRenaleChro);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/immunosuppreseur.js",["443"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport { DatePicker } from '@assenti/rui-components';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\nconst Immunosuppreseur = (props) => {\n\n  const [dose, setDose] = useState(0.0)\n  const [duree, setDuree] = useState(0)\n  const [molecule, setMolecule] = useState(\"\")\n  const [date, setDate] = useState()\n\n  var handleDoseChange = (text) => {\n    setDose(text)\n  }\n  var handleDureeChange = (text) => {\n    setDuree(text)\n  }\n  var handleMoleculeChange = (text) => {\n    setMolecule(text)\n  }\n\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"Immunosuppreseur\",\n      dose: dose,\n      molecule: molecule,\n      duree: duree,\n      datePrise: date\n    }\n    e.preventDefault();\n    console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux\")\n  }\n\n\n\n\n  return (\n\n    <div>\n    <div class=\"big\">\n    <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise</Text>\n\n        <FormInput placeholder=\"Dose \" type=\"decimal-pad\" onChangeText={handleDoseChange} />\n        <FormInput placeholder=\"Molecule\" onChangeText={handleMoleculeChange} />\n        <FormInput placeholder=\"Duree\" type=\"decimal-pad\" onChangeText={handleDureeChange} />\n        <Text style={tailwind('text-gray-700 py-2')}>Traitement Immunosuppreseur</Text>\n        <DatePicker\n         color=\"primary\"\n         placeholder=\"YYYY-MM-DD\"\n         value={date}\n         clearable\n         minDate=\"1920-05-01\"\n         maxDate={new Date()}\n         onDate={(date) => {\n           setDate(date)\n         }}\n         onClear={() => setDate('')}\n         width={250}\n         onChange={(value) => setDate(value)}/>\n\n\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Immunosuppreseur);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/hta1.js",["444"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\nconst HTA1 = (props) => {\n  const [anciennete, setAnciennete] = useState(0.0);\n  const [traitement, setTraitement] = useState(0);\n  const [equilibre, setEquilibre] = useState(true);\n  var handleAnciennteChange = (text) => {\n    setAnciennete(text)\n  }\n  var handleTraitementChange = (text) => {\n    setTraitement(text)\n  }\n  var handleEquilibreChange = (data) => {\n      setEquilibre(data.target.value)\n  }\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"HTA\",\n      anciennete: anciennete,\n      traitement: traitement,\n      equilibre: equilibre\n    }\n    e.preventDefault();\n    //console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux1\")\n  }\n\n\n\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>HTA1</Text>\n\n        <FormInput title=\"Ancienneté\" placeholder=\"Ancienneté\" onChangeText={handleAnciennteChange} type=\"decimal-pad\" />\n        <FormInput title=\"Traitement\" placeholder=\"Traitement\" onChangeText={handleTraitementChange} />\n        <View style={styles.row}>\n        <div  onChange={handleEquilibreChange}>\n        <Text style={tailwind('text-gray-700 py-2')}>Equilibré?</Text>\n          <input type=\"radio\" value={true} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n          <input type=\"radio\" value={false} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n        </div>\n        </View>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux1\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(HTA1);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/grossesse1.js",["445","446"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\n\nconst Grossesse1 = (props) => {\n  const [simple, setSimple] = useState(true)\n  const [gpa, setGPA] = useState(true)\n  const [sa, setSa] = useState(true)\n  const [path, setPath] = useState(true)\n  const [pathologie, setPathologie] = useState(null)\n\n\n  var handleSimpleChange = (data) => {\n      setSimple(data.target.value)\n  }\n  var handleGpaChange = (data) => {\n      setGPA(data.target.value)\n  }\n\n  var handleSaChange = (data) => {\n      setSa(data.target.value)\n  }\n  var handlePathChange = (data) => {\n      setPath(data.target.value)\n  }\n  var handlePathologieChange = (text) => {\n    setPathologie(text)\n  }\n\n\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"grossesse\",\n      simple: simple,\n      gpa: gpa,\n      sa: sa,\n      pathologie: pathologie\n    }\n    e.preventDefault();\n    console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux1\")\n  }\n\n\n\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Grossesse en cours</Text>\n        <View style={styles.row}>\n                <div>\n        \t  <Text style={tailwind('text-gray-700 py-2')}>Grossesse?</Text>\n                  <input  onChange={handleSimpleChange} type=\"radio\" value={true} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Grossesse simple</Text>\n                  <input  onChange={handleSimpleChange} type=\"radio\" value={false} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Grossesse compliqué</Text>\n                </div>\n              </View>\n              <View style={styles.row}>\n              <div>\n          <Text style={tailwind('text-gray-700 py-2')}>SA?</Text>\n                <input  onChange={handleSaChange} type=\"radio\" value={true} name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n                <input  onChange={handleSaChange} type=\"radio\" value={false} name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n              </div>\n            </View>\n            <View style={styles.row}>\n            <div>\n        <Text style={tailwind('text-gray-700 py-2')}>Pathologies liées à la grossesse?</Text>\n              <input  onChange={handlePathChange} type=\"radio\" value={true} name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n              <input  onChange={handlePathChange} type=\"radio\" value={false} name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n            </div>\n          </View>\n        <View>\n          {(path === true) && <FormInput placeholder=\"Précisier les pathologies\" onChangeText={handlePathologieChange} />}\n        </View>\n\n\n\n\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux1\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Grossesse1);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/Dashbord/dash1.js",["447","448"],"import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport UploadFiles from \"./upload-files.component\";\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\nfunction Dash1(props) {\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xx\" >\n\n    <div className=\"container\" style={{ width: \"600px\" }}>\n      <div style={{ margin: \"20px\" }}>\n        <h3>upload</h3>\n        <h4>React upload Files</h4>\n      </div>\n      <UploadFiles />\n      <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"SearchPatient\") }} />\n    </div>\n    </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n}\n\nexport default Dash1;\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/admission1.js",["449","450"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport FormInput from '../../Form/FormInput';\nimport { DatePicker } from '@assenti/rui-components';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nimport Steps from \"../../Form/Steps\";\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\nconst Admission = (props) => {\n  const [type, setType] = useState(\"hhop\")\n  const [lieu, setLieu] = useState(\"chez lui\")\n  const [lieuCB, setLieuCB] = useState(\"lui\")\n  const [dateEnt, setDateEnt] = useState()\n  const [mode, setMode] = useState(\"transfert inter-hopital\")\n  const [modeCB, setModeCB] = useState(\"transfert\")\n  const [hopital, setHopital] = useState()\n  const [service, setService] = useState()\n\n  var handleTypeSdate = (data) => {\n    setDateEnt(data.target.value)\n       }\n  var handleModeCB = (data) => {\n    if (data.target.value===\"0\") {\n      setMode(\"Transfert inter-hopital\")\n      setModeCB(\"Transfert inter-hopital\")\n    }\n    if (data.target.value===\"1\") {\n      setMode(\"Transfert inter-service\")\n      setModeCB(\"Transfert inter-service\")\n    }\n    if (data.target.value===\"2\") {\n      setMode(\"Urgences\")\n      setModeCB(\"Urgences\")\n    }\n    if (data.target.value===\"3\") {\n      setMode(\"SAMU\")\n      setModeCB(\"SAMU\")\n    }\n    if (data.target.value===\"4\") {\n      setMode(\"D'un lieu d'isolement(Chez lui ou centre)\")\n      setModeCB(\"D'un lieu d'isolement(Chez lui ou centre)\")\n    }\n    if (data.target.value===\"5\") {\n      //setMode(data[5].label)\n      setModeCB(\"Autre\")\n    }\n  }\n  var handleTypeChange = (data) => {\n      setType(data.target.value)\n  }\n  var handleLieuCB = (data) => {\n    if (data.target.value===\"0\") {\n      setLieu(\"chez lui\")\n        setLieuCB(\"lui\")\n    }\n    if (data.target.value===\"1\") {\n      setLieuCB(\"centre\")\n    }\n    if (data.target.value===\"2\")\n      setLieuCB(\"autre\")\n\n  }\n  var handleLieuChange = (text) => {\n    setLieu(text)\n  }\n  var handleHopitalChange = (text) => {\n    setHopital(text)\n  }\n  var handleServiceChange = (text) => {\n    setService(text)\n  }\n  var handleModeChange = (text) => {\n    setMode(text)\n  }\n\n  var handleSubmit = (e) => {\n    e.preventDefault();\n    var values = {\n      type: type,\n      lieu: lieu,\n      hopital: hopital,\n      service: service,\n      dateEnt: dateEnt,\n      mode: mode,\n\n    }\n    console.log(values)\n    console.log(props.patientList[\"cin\"])\n    props.addAdmission(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"CaracCliniques1\")\n\n  }\n\n  return (\n    <div>\n<div class=\"big\">\n<View style={styles.row}>\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n<View style={tailwind(\"items-center\")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Admission d'un cas confirmé COVID-19</Text>\n      <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n      <View style={styles.row}>\n        <div  >\n\t  <Text style={tailwind('text-gray-700 py-2')}>Admission?</Text>\n          <input onChange={handleTypeChange} type=\"radio\" value=\"hhop\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>En dehors de l'hopital</Text>\n          <input onChange={handleTypeChange} type=\"radio\" value=\"hop\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>A l'hopital</Text>\n        </div>\n      </View>\n      {\n        type === \"hhop\" && <View style={tailwind(\"items-center\")}>\n        <View style={styles.row}>\n          <div  >\n        <Text style={tailwind('text-gray-700 py-2')}>Précisier le lieu?</Text>\n            <input onChange={handleLieuCB} type=\"radio\" value=\"0\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Chez lui</Text>\n            <input onChange={handleLieuCB} type=\"radio\" value=\"1\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Dans un centre d'isolement</Text>\n            <input onChange={handleLieuCB} type=\"radio\" value=\"2\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Autre</Text>\n          </div>\n\n        </View>\n          {lieuCB === \"autre\" && <FormInput placeholder=\"...\" onChangeText={handleLieuChange} />}\n          {lieuCB === \"centre\" && <FormInput placeholder=\"Préciser le quel\" onChangeText={handleLieuChange} />}\n            <View style={styles.row}>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date d'entée?</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n          </View>\n        </View>\n      }\n      {\n        type === \"hop\" && <View style={tailwind(\"items-center\")}>\n          <FormInput placeholder=\"Hopital\" onChangeText={handleHopitalChange} />\n          <FormInput placeholder=\"Service\" onChangeText={handleServiceChange} />\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date d'entée?</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n          <View style={styles.row}>\n        <div  >\n\t  <Text style={tailwind('text-gray-700 py-2')}>Mode d'entrée?</Text>\n          <input onChange={handleModeCB} type=\"radio\" value=\"0\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Transfert inter-hopital</Text>\n          <input onChange={handleModeCB} type=\"radio\" value=\"1\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Transfert inter-service</Text>\n          <input onChange={handleModeCB} type=\"radio\" value=\"2\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Urgences</Text>\n          <input onChange={handleModeCB} type=\"radio\" value=\"3\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>SAMU</Text>\n          <input onChange={handleModeCB} type=\"radio\" value=\"4\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>D'un lieu d'isolement(Chez lui ou centre)</Text>\n          <input onChange={handleModeCB} type=\"radio\" value=\"5\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Autre</Text>\n        </div>\n      </View>\n          {modeCB === \"Autre\" && <FormInput placeholder=\"Précisier\" onChangeText={handleModeChange} />}\n\n\n        </View>\n      }\n<View style={tailwind(\"items-center\")}>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"ConfirmationDiag1\") }} />\n          <FormButton title=\"suivant\" onPress={handleSubmit} />\n        </View>\n        <FormButton title=\"Pass\" onPress={() => { props.navigation.navigate(\"CaracCliniques1\") }} />\n      </View>\n      </View>\n      </Container>\n      <Steps current={5} /> \n</View>\n      \n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  loggedUser: state.medicalService.loggedUser,\n  patientList: state.medicalService.patientList,\n\n});\nconst mapActionToProps = {\n  addAdmission: actions.addAdmission\n};\nexport default connect(mapStateToProps, mapActionToProps)(Admission);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/traitement1.js",["451","452","453","454","455"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from '../../Form/FormInput';\nimport FormButton from '../../Form/FormButton';\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nimport Steps from \"../../Form/Steps\";\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\n\nconst Traitement = (props) => {\n  var handleTypeSdate = (data) => {\n    setDateD(data.target.value)     \n       }\n       var handleTypeSdate1 = (data) => {\n        setDateF(data.target.value)     \n           }\n  useEffect(() => {\n    props.getTraitment(props.patientList[\"cin\"], {\n      trai: trai\n    })\n   if ( props.traitmentList !=null &&typeof(props.traitmentList)!==\"string\"&& props.traitmentList[\"dateD\"] !== null &&   props.traitmentList[\"dateD\"] !== undefined &&oper === \"M\") setDateD(props.traitmentList[\"dateD\"].slice(0, 10))\n    //else setDateD()\n    //if (typeof(props.traitmentList)!==\"string\"&& props.traitmentList[\"dateF\"] !== null && oper === \"M\") setDateF(props.traitmentList[\"dateF\"].slice(0, 10))\n    //else setDateF()\n  })\n\n  const [oldPactt, setOldPactt] = useState(true)\n  const [pactt, setPactt] =  useState(\"Bras 1\")\n  const [type, setType] = useState(\"M\")\n  const [trai, setTrai] = useState(\"Lopinavir/ritonavir\")\n  const [oper, setOper] = useState(\"A\")\n  const [dateD, setDateD] = useState()\n  const [dateF, setDateF] = useState()\n  const [autreBox, setAutreBox] = useState(trai === \"Autre\")\n  const [dosage, setDosage] =  useState()\n\n  //formValidation\n  const [validation, setValidation] = useState()\n\n\n\n  var handlePacttChange = (data) => {\n   setPactt(data.target.value)\n  }\n\n\n  var handleOperChange = (data) => {\n    var i;\n    for (i = 0; i < data.length; i++) {\n      if (data[i].selected) { setOper(data[i].label[0]); setDateF(); setDateD(); }\n\n      if (data[i].label[0]===\"M\" && typeof(props.traitmentList)!==\"string\"&& props.traitmentList[\"dosage\"] !== null  && props.traitmentList[\"dosage\"] !== undefined)\n       {setDosage(props.traitmentList[\"dosage\"])}\n\n    }\n  }\n  var handleTypeChange = (data) => {\n    /* var i;\n    for (i = 0; i < data.length; i++) {\n      if (data[i].selected) { setType(data[i].label.charAt(0)) ;  }\n\n    }*/\n    if (data.target.value===\"1\") {\n      setType(\"M\"); setTrai(\"Lopinavir/ritonavir\"); setDateD(); setDateF()\n    }\n    if (data.target.value===\"2\") {\n      setType(\"P\"); setTrai(\"O2\"); setDateD(); setDateF()\n    }\n    if (data.target.value===\"3\") {\n      setType(\"A\"); setTrai(\"Amoxicilline/Acide clavunique\"); setDateD(); setDateF()\n    }\n  }\n\n  var handlePacttChange = (data) => {\n     setPactt(data.target.value)\n  }\n  var handleTraiChange = (data) => {\n      setDateF()\n      setDateD()\n      setTrai(data.target.value);\n\n        if (data.target.value === \"Autre\") { setAutreBox(true); setTrai() }\n        else setAutreBox(false)\n        props.getTraitment(props.patientList[\"cin\"], {\n          trai: trai\n        })\n      }\n\n\n\n  //SubmitFunction\n  var handleSUbmit = () => {\n    var values = {\n      dosage: dosage,\n      dateD: dateD,\n      dateF: dateF,\n      trai: trai,\n      pactt:pactt\n    }\n    console.log(values)\n     if(trai ===undefined)\n     { setValidation(\"Veuillez choisir un traitment\") ;return;}\n      if(dosage ===undefined)\n      {setValidation(\"Veuillez precisier un dosage\");return}\n      if(dateD ===undefined)\n     { setValidation(\"La date de debut de traitement est obligatoire\");return}\n     setValidation()\n\n    props.addTraitment(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"Evolution1\")\n\n  }\n\n  return (\n<div>\n<div class=\"big\">\n<View style={styles.row}>\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n    <View>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Traitement</Text>\n      <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n      {validation !== undefined && <Text style={tailwind(\"text-center font-bold text-red-500\")}>{validation}</Text>}\n      <Text style={tailwind('text-gray-700 pt-8  pl-4 text-center pb-4')}>Participation au projet PACTT ?</Text>\n      {props.patientList[\"traitement\"][\"pactt\"] !== null && props.patientList[\"traitement\"][\"pactt\"] !== undefined&& oldPactt === true && <View style={tailwind(' items-center ')}>\n        <Text style={tailwind(\"text-gray-700 font-bold\")}> {props.patientList[\"traitement\"][\"pactt\"]}</Text>\n        <FormButton title=\"Modifier ?\" onPress={() => setOldPactt(false)}/>\n      </View>\n\n      }\n      {(props.patientList[\"traitement\"][\"pactt\"] == null && props.patientList[\"traitement\"][\"pactt\"] == undefined  || oldPactt === false) &&\n      <View style={tailwind(' items-center ')} >\n      <div>\n    <div>  <input  onChange={handlePacttChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Bras 1</Text></div>\n    <div>  <input  onChange={handlePacttChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Bras 2</Text></div>\n    <div>  <input  onChange={handlePacttChange} type=\"radio\" value=\"TrRythCardiaque\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text></div>\n    </div>\n    </View>\n  }\n\n      <Text style={tailwind('text-gray-700  text-center pb-4')}>Modifier ajouter les traitements</Text>\n      <View style={tailwind(' items-center ')} >\n      <div>\n    <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"1\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Molécules</Text></div>\n    <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"2\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Prise en charge standard</Text></div>\n    <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"3\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Antibiothérapie</Text></div>\n    </div>\n        <Text style={tailwind('text-gray-700  text-center p-4')}> Lequel/Laquelle ?</Text>\n        {\n          type === \"M\" &&\n          <div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Lopinavir/ritonavir</Text></div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Chloroquine phosphate</Text></div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Antibiothérapie\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Hydroxy-Chloroquine</Text></div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Azithromycine</Text></div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Remdesivir</Text></div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Antibiothérapie\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Autre</Text></div>\n        </div>\n\n        }\n\n        {\n          type === \"P\" &&\n          <div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>O2</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>HFNC</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Antibiothérapie\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>CPAP</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>VNI</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>VMI</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Antibiothérapie\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Paracétamol</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Antibiothérapie\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Anti coaguant</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>H2O</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>ADO</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Antibiothérapie\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Insulinothérapie</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Nébulisation corticoides</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Nébulisation bronchodilateurs</Text></div>\n          </div>\n        }\n        {\n          type === \"A\" &&\n          <div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Amoxicilline/Acide clavunique</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Cefotaxime</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Antibiothérapie\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Ceftriaxone</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Autre</Text></div>\n          </div>\n        }\n        {autreBox === true && <View style={tailwind(\"items-center\")}>\n          <FormInput placeholder=\"Autre traitement ...\" onChangeText={setTrai} />\n        </View>}\n        <Text style={tailwind('text-gray-700  text-center p-4')}> Choisir l'opération ?</Text>\n        <div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>Amoxicilline/Acide clavunique</Text></div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>Cefotaxime</Text></div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Antibiothérapie\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>Ceftriaxone</Text></div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>Autre</Text></div>\n        </div>\n        <div>\n        <div>  <input  onChange={handleOperChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender6\" /> <Text style={tailwind('text-gray-700 py-2')}>Ajouter Autre</Text></div>\n        <div>  <input  onChange={handleOperChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender6\" /> <Text style={tailwind('text-gray-700 py-2')}>Modifier date fin</Text></div>\n        </div>\n        {\n          (oper === \"A\") && <View style={tailwind(\"items-center \")}>\n            <FormInput placeholder={\"Dosage\"} onChangeText={setDosage}  />\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de debut</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de fin</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate1}/>\n            \n          </View>\n        }\n        {\n          oper === \"M\" && typeof (props.traitmentList) === \"string\" && <Text style={tailwind(\"text-center py-4 font-bold  text-red-500\")}>{\"Aucun traitement \" + trai + \" trouvé , Veuillez ajouter autre !\"}</Text>\n        }\n        {\n          oper === \"M\" && typeof (props.traitmentList) !== \"string\" && props.traitmentList !== null && <View style={tailwind(\"items-center\")}>\n            <FormInput placeholder={\"Doage/Debit:\" + props.traitmentList[\"dosage\"]} editable=\"false\" />\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de debut</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date fin</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate1}/>\n            \n          </View>\n        }\n      </View>\n      <View style={tailwind(\"items-center\")}>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => props.navigation.navigate(\"examBio1\")} />\n          <FormButton title=\"Enregistrer\" onPress={handleSUbmit} />\n        </View>\n        <FormButton title=\"Pass\" onPress={() => props.navigation.navigate(\"Evolution1\")} />\n\n      </View>\n    </View>\n    </Container>\n      <Steps current={10} /> \n</View>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\n\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList,\n  traitmentList: state.medicalService.traitmentList\n});\nconst mapActionToProps = {\n  getTraitment: actions.getTraitment,\n  addTraitment: actions.addTraitment\n\n};\nexport default connect(mapStateToProps, mapActionToProps)(Traitement);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/login.js",["456"],"/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/addPatient.js",["457","458"],"import React, { useState, useEffect } from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport FormInput from \"../Form/FormInput\";\nimport tailwind from 'tailwind-rn';\nimport Steps from \"../Form/Steps\";\nimport FormButton from '../Form/FormButton';\nimport * as actions from \"../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { enGB } from 'date-fns/locale'\nimport { DatePicker } from 'react-nice-dates'\nimport 'react-nice-dates/build/style.css'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './addPatient.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport './home.css';\nconst AddPatient = (props) => {\n  let config = {\n        num: [4, 7],\n        rps: 0.1,\n        radius: [5, 40],\n        life: [1.5, 3],\n        v: [2, 3],\n        tha: [-50, 50],\n        alpha: [0.6, 0],\n        scale: [.1, 0.9],\n        position: \"all\",\n        color: [ \"#ff0000\"],\n        cross: \"dead\",\n        random: 10\n      };\n\n\n  useEffect(() => {\n\n\n  }, [localStorage.getItem(\"addPatientMessage\")])\n\n  const [cin, setCin] = useState(0)\n  const [matricule, setMatricule] = useState(0)\n  const [identifiant, setIdentifiant] = useState(\"\")\n  const [nom, setNom] = useState(\"\")\n  const [prenom, setPrenom] = useState(\"\")\n  const [date, setDate] = useState(\"\")\n  const [sexe, setSexe] = useState(\"Male\")\n  const [adresse, setAdresse] = useState(\"\")\n  const [nationnalite, setNationnalite] = useState(\"\")\n  const [telDomicile, setTelDomicile] = useState(\"\")\n  const [telProtable, setTelPortable] = useState(\"\")\n  const [profession, setProfession] = useState(\"\")\n  const [marie, setMarie] = useState(\"\")\n  const [vitSeul, setVitSeul] = useState(false)\n  const [nbIndiv, setNbIndiv] = useState(0)\n  const [nbEnf, setNbEnf] = useState(0)\n  const [nbCham, setNbCham] = useState(0)\n  const [nivEtude, setNivEtude] = useState(\"\")\n\n  var handleNivEtude = (data) => {\n    console.log(data.target.value)\n      setNivEtude(data.target.value)\n  }\n\n  var handleNbCham = (text) => {\n    setNbCham(text)\n  }\n\n  var handleNbEnf = (text) => {\n    setNbEnf(text)\n  }\n  var handleNbIndivChange = (text) => {\n    setNbIndiv(text)\n  }\n\n  var handleProfessionChange = (text) => {\n    setProfession(text)\n  }\n  var handleTelPortable = (text) => {\n    setTelPortable(text)\n  }\n  var handleTelDomicile = (text) => {\n    setTelDomicile(text)\n  }\n  var handleNationnaliteChange = (text) => {\n    setNationnalite(text)\n  }\n  var handleCinChange = (text) => {\n    setCin(text)\n  }\n\n  var handleMatriculeChange = (text) => {\n    setMatricule(text)\n  }\n  var handleNomChange = (text) => {\n    setNom(text)\n  }\n  var handleIdentifiantChange = (text) => {\n    setIdentifiant(text)\n  }\n  var handlePrenomChange = (text) => {\n\n    setPrenom(text)\n  }\n  var handleAddresseChange = (text) => {\n    setAdresse(text)\n  }\n\n  var handleSexeChange = (data) => {\n    console.log(data.target.value)\n      setSexe(data.target.value)\n  }\n  var handleMarieChange = (data) => {\n      setMarie(data.target.value)\n  }\n\n  var handleVitSeul = (data) => {\n    setVitSeul(data.target.value)\n  }\n\n\n  var handleSubmit = (e) => {\n    var values = {\n      cin: cin,\n      matricule: matricule,\n      identifiant:identifiant,\n      nom: nom,\n      prenom: prenom,\n      sexe: sexe,\n      birthDate: date,\n      nationnalite: nationnalite,\n      adresse: adresse,\n      telPort: telProtable,\n      telDomicile: telDomicile,\n      profession: profession,\n      niveauEtude: nivEtude,\n      vitSeul: vitSeul,\n      individu: nbIndiv,\n      enfant: nbEnf,\n      chambres: nbCham,\n      mariee: marie\n\n    }\n    e.preventDefault()\n       props.cc(values)\n         props.navigation.navigate(\"SearchPatient1\")\n     }\n  var handleExit = (e) => {\n    localStorage.setItem(\"addPatientMessage\", JSON.stringify(null))\n    props.navigation.navigate(\"SearchPatient1\")\n  }\n  return (\n    <div>\n<div class=\"big\">\n<View style={styles.row}>\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n    <div >\n    <div >\n    <View  >\n      <Text style={tailwind('text-gray-700 font-bold text-xl text-center')}>Dossier Patient</Text>\n      <Text style={tailwind('text-gray-700 font-bold text-xl text-center')}>Informations générales</Text>\n      <Text style={tailwind('text-red-500 font-bold text-center py-2')} > {(localStorage.getItem(\"addPatientMessage\") !== JSON.stringify(null)) && (props.message)}</Text>\n      <View style={tailwind(' items-center ')}>\n        <FormInput\n          placeholder=\"CIN\"\n          type=\"number-pad\"\n          maxLength={Number(\"8\")}\n          onChangeText={handleCinChange}\n        />\n        <FormInput\n          placeholder=\"Matricule\"\n          type=\"number-pad\"\n          onChangeText={handleMatriculeChange}\n          maxLength={Number(\"10\")}\n        />\n        <FormInput\n          placeholder=\"Identifiant\"\n          onChangeText={handleIdentifiantChange}\n        />\n        <FormInput\n          placeholder=\"Nom\"\n          onChangeText={handleNomChange}\n        />\n        <FormInput\n          placeholder=\"Prenom\"\n          onChangeText={handlePrenomChange}\n        />\n        <View style={styles.row}>\n          <div >\n\n            <Text style={tailwind('text-gray-700 py-2')}>Sexe ?</Text>\n            <input  onChange={handleSexeChange} type=\"radio\" value=\"Male\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Male</Text>\n            <input  onChange={handleSexeChange} type=\"radio\" value=\"Female\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Female</Text>\n          </div>\n        </View>\n        <Text style={tailwind('text-gray-700 py-2')}> Date De Naissance ?</Text>\n        <div style={tailwind(' items-center ')}>\n        <DatePicker date={date} onDateChange={setDate} locale={enGB}>\n      {({ inputProps, focused }) => (\n        <input\n          className={'input' + (focused ? ' -focused' : '')}\n          {...inputProps}\n        />\n      )}\n    </DatePicker>\n        </div>\n        <FormInput\n          placeholder=\"Adresse\"\n          onChangeText={handleAddresseChange}\n        />\n        <FormInput\n          placeholder=\"Nationalité\"\n          onChangeText={handleNationnaliteChange}\n        />\n        <FormInput\n          placeholder=\"Telephone Domicile\"\n          onChangeText={handleTelDomicile}\n          type=\"number-pad\"\n          maxLength={Number(\"8\")}\n        />\n        <FormInput\n          placeholder=\"Telephone portable\"\n          type=\"number-pad\"\n          onChangeText={handleTelPortable}\n          maxLength={Number(\"8\")}\n        />\n        <FormInput\n          placeholder=\"Profession\"\n          onChangeText={handleProfessionChange}\n        />\n\n\n        <View style={styles.row}>\n\n          <Text style={tailwind('text-gray-700 py-2 pb-2')}>\n            Niveau d'étude{nivEtude}\n        </Text>\n      </View>\n      <View style={styles.row}>\n\n        <div  >\n\n        <div  >  <input  onChange={handleNivEtude} type=\"radio\" value=\"Non Scolarisé\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Non Scolarisé</Text>\n                 <input  onChange={handleNivEtude} type=\"radio\" value=\"Primaire\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Primaire</Text>\n\n                <input  onChange={handleNivEtude} type=\"radio\" value=\"Collège\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Collège</Text>\n        </div>\n          <div  ><input  onChange={handleNivEtude} type=\"radio\" value=\"Secondaire\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Secondaire</Text>\n                <input  onChange={handleNivEtude} type=\"radio\" value=\"Universiatire\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Universiatire</Text>\n          </div>\n        </div>\n\n      </View>\n        <View style={styles.row}>\n\n          <Text style={tailwind('text-gray-700 py-2')}>\n            Marié ?\n    </Text>\n      </View>\n        <View style={styles.row}>\n\n          <div  onChange={handleMarieChange}>\n            <input type=\"radio\" value=\"Oui\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n            <input type=\"radio\" value=\"Non\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n            <input type=\"radio\" value=\"Autre\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Autre</Text>\n          </div>\n\n        </View>\n        <View style={styles.row}>\n\n          <Text style={tailwind('text-gray-700 py-2')}>\n            Vit seul ?\n    </Text>\n      </View>\n        <View style={styles.row}>\n          <div  onChange={handleMarieChange}>\n            <input type=\"radio\" value={true} name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n            <input type=\"radio\" value={false} name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n          </div>\n        </View>\n        <FormInput\n          placeholder=\"Nbre d'individus par famille\"\n          type=\"number-pad\"\n          onChangeText={handleNbIndivChange}\n          maxLength={Number(\"2\")}\n        />\n\n        <FormInput\n          placeholder=\"Nbre d'enfants à cahrge\"\n          type=\"number-pad\"\n          onChangeText={handleNbEnf}\n          maxLength={Number(\"2\")}\n        />\n\n        <FormInput\n          placeholder=\"Nbre de chambres dans la maison\"\n          type=\"number-pad\"\n          onChangeText={handleNbCham}\n          maxLength={Number(\"2\")}\n        />\n        <View style={styles.row}>\n          <FormButton title=\"Annuler\" onPress={handleExit} />\n          <FormButton title=\"Ajouter\" onPress={handleSubmit} />\n        </View>\n      </View>\n    </View>\n</div></div>\n</Container>\n<Steps  /> \n</View>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\n\nconst mapStateToProps = (state) => ({\n  message: state.medicalService.message\n});\nconst mapActionToProps = {\n  cc: actions.addPatient\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(AddPatient);","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/infosGenerales.js",["459"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport * as actions from \"../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\n//import 'localstorage-polyfill';\nimport FormInput from \"../Form/FormInput\";\nimport { DatePicker } from '@assenti/rui-components';\nimport '@assenti/rui-components/css/index.css';\nimport FormButton from '../Form/FormButton';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport './home.css';\n\nconst InfosGenerales = (props) => {\n  let config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n  const [nom, setNom] = useState(\"\")\n  const [prenom, setPrenom] = useState(\"\")\n  const [date, setDate] = useState(\"\")\n  const [sexe, setSexe] = useState(\"Male\")\n  const [adresse, setAdresse] = useState(\"\")\n  const [nationnalite, setNationnalite] = useState(\"\")\n  const [telDomicile, setTelDomicile] = useState(\"\")\n  const [telProtable, setTelPortable] = useState(\"\")\n  const [profession, setProfession] = useState(\"\")\n  const [marie, setMarie] = useState(\"\")\n  const [vitSeul, setVitSeul] = useState(false)\n  const [nbIndiv, setNbIndiv] = useState(0)\n  const [nbEnf, setNbEnf] = useState(0)\n  const [nbCham, setNbCham] = useState(0)\n  const [nivEtude, setNivEtude] = useState(\"\")\n\n\n  var handleNivEtude = (data) => {\n\n      setNivEtude(data.target.value)\n  }\n\n  var handleNbCham = (text) => {\n    setNbCham(text)\n  }\n\n  var handleNbEnf = (text) => {\n    setNbEnf(text)\n  }\n  var handleNbIndivChange = (text) => {\n    setNbIndiv(text)\n  }\n\n  var handleProfessionChange = (text) => {\n    setProfession(text)\n  }\n  var handleTelPortable = (text) => {\n    setTelPortable(text)\n  }\n  var handleTelDomicile = (text) => {\n    setTelDomicile(text)\n  }\n  var handleNationnaliteChange = (text) => {\n    setNationnalite(text)\n  }\n  var handleNomChange = (text) => {\n    setNom(text)\n  }\n  var handlePrenomChange = (text) => {\n\n    setPrenom(text)\n  }\n  var handleAddresseChange = (text) => {\n    setAdresse(text)\n  }\n\n  var handleSexeChange = (data) => {\n    setSexe(data.target.value)\n  }\n  var handleMarieChange = (data) => {\n    setMarie(data.target.value)\n    }\n\n\n  var handleVitSeul = (data) => {\n    if (data.target.value === \"Oui\") { setVitSeul(true) }\n    else setVitSeul(false)\n\n  }\n\n  var handleSubmit = (e) => {\n    var values = {\n\n      nom: nom,\n      prenom: prenom,\n      sexe: sexe,\n      birthDate: date,\n      nationnalite: nationnalite,\n      adresse: adresse,\n      telPort: telProtable,\n      telDomicile: telDomicile,\n      profession: profession,\n      niveauEtude: nivEtude,\n      vitSeul: vitSeul,\n      individu: nbIndiv,\n      enfant: nbEnf,\n      chambres: nbCham,\n      mariee: marie\n\n    }\n    console.log(values)\n    e.preventDefault()\n    props.infosGenerales(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"PatientDetails\")\n\n  }\n\n\n\n  return (\n\n\n\n<View>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n<Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Informations génerales:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n  <View style={tailwind(' items-center ')}>\n  <FormInput\n  placeholder=\"Nom\"\n  onChangeText={handleNomChange}\n  />\n  <FormInput\n  placeholder=\"Prenom\"\n  onChangeText={handlePrenomChange}\n  />\n    <View style={styles.row}>\n      <View style={styles.row}>\n      <div  >\n      <Text style={tailwind('text-gray-700 py-2')}>Sexe ?</Text>\n      <input onChange={handleSexeChange} type=\"radio\" value=\"Male\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Male</Text>\n      <input onChange={handleSexeChange} type=\"radio\" value=\"Female\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Female</Text>\n      </div>\n    </View>\n  </View>\n  <Text style={tailwind('text-gray-700 py-2')}>  Date De Naissance ?</Text>\n  <div>\n  <DatePicker\n        color=\"primary\"\n        placeholder=\"YYYY-MM-DD\"\n        value={date}\n        clearable\n        minDate=\"1920-05-01\"\n        maxDate={new Date()}\n        onDate={(date) => {\n          setDate(date)\n        }}\n        onClear={() => setDate('')}\n        width={250}\n        onChange={(value) => setDate(value)}/>\n  </div>\n  <FormInput\n  placeholder=\"Adresse\"\n  onChangeText={handleAddresseChange}\n        />\n        <FormInput\n          placeholder=\"Nationalité\"\n          onChangeText={handleNationnaliteChange}\n        />\n        <FormInput\n          placeholder=\"Telephone Domicile\"\n          onChangeText={handleTelDomicile}\n          type=\"number-pad\"\n          maxLength={Number(\"8\")}\n        />\n        <FormInput\n          placeholder=\"Telephone portable\"\n          type=\"number-pad\"\n          onChangeText={handleTelPortable}\n          maxLength={Number(\"8\")}\n        />\n        <FormInput\n          placeholder=\"Profession\"\n          onChangeText={handleProfessionChange}\n        />\n\n\n        <View style={tailwind(\"items-center py-2\")}>\n\n          <Text style={tailwind('text-gray-700 py-2 pb-2')}>Niveau d'étude ?</Text>\n    <View style={styles.row}>\n      <div>\n      <div>  <input onChange={handleNivEtude} type=\"radio\" value=\"Non Scolarisé\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Non Scolarisé</Text>\n        <input onChange={handleNivEtude} type=\"radio\" value=\"Primaire\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Primaire</Text>\n        <input onChange={handleNivEtude} type=\"radio\" value=\"Collège\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Collège</Text>\n        </div><input onChange={handleNivEtude} type=\"radio\" value=\"Secondaire\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Secondaire</Text>\n        <input onChange={handleNivEtude} type=\"radio\" value=\"Universiatire\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Universiatire</Text>\n      </div>\n    </View>\n        </View>\n        <View style={styles.row}>\n\n          <Text style={tailwind('text-gray-700 py-2')}>\n            Marié ?\n    </Text>\n    </View>\n      <View style={styles.row}>\n        <div  >\n          <input onChange={handleMarieChange} type=\"radio\" value=\"Oui\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n          <input onChange={handleMarieChange} type=\"radio\" value=\"Non\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n          <input onChange={handleMarieChange} type=\"radio\" value=\"Autre\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Autre</Text>\n        </div>\n      </View>\n\n\n\n\n\n        <View style={styles.row}>\n\n          <Text style={tailwind('text-gray-700 py-2')}>\n            Vit seul ?\n            </Text>\n            </View>\n            <View style={styles.row}>\n            <div  >\n            <input onChange={handleVitSeul} type=\"radio\" value=\"Oui\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n            <input onChange={handleVitSeul} type=\"radio\" value=\"Non\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n            </div>\n\n\n            </View>\n        <FormInput\n          placeholder=\"Nbre d'individus par famille\"\n          type=\"number-pad\"\n          onChangeText={handleNbIndivChange}\n          maxLength={Number(\"2\")}\n        />\n\n        <FormInput\n          placeholder=\"Nbre d'enfants à cahrge\"\n          type=\"number-pad\"\n          onChangeText={handleNbEnf}\n          maxLength={Number(\"2\")}\n        />\n\n        <FormInput\n          placeholder=\"Nbre de chambres dans la maison\"\n          type=\"number-pad\"\n          onChangeText={handleNbCham}\n          maxLength={Number(\"2\")}\n\n        />\n        <View style={styles.row}>\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n          <FormButton title=\"Annuler\" onPress={() => { props.navigation.navigate(\"PatientDetails\") }} />\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</View>\n\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\n\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n\n});\nconst mapActionToProps = {\n  infosGenerales: actions.infosGenerales\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(InfosGenerales);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/habitudesDeVie.js",["460","461"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../Form/FormButton\";\nimport * as actions from \"../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\n//import 'localstorage-polyfill';\nimport FormInput from '../Form/FormInput';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport './home.css';\n\n\nconst HabitudesDeVie = (props) => {\n  let config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n    useEffect(() => {\n    })\n    const [tabagisme, setTabagisme] = useState(false)\n    const [nbCigarettes, setNbCigarettes] = useState(0)\n    const [freqChicha, setFreqChicha] = useState(0)\n    const [drogue, setDrogue] = useState(false)\n    const [alcool, setAlcool] = useState(false)\n    const [gs, setGs] = useState(0)\n    const [poids, setPoids] = useState(0)\n    const [taille, setTaille] = useState(0)\n\n\n    var handleAlcoolChange = (data) => {\n      if (data.target.value===\"Oui\")\n        setAlcool(true)\n      if (data.target.value===\"Non\")\n        setAlcool(false)\n    }\n    var handleDrogueChange = (data) => {\n      if (data.target.value===\"Oui\")\n        setDrogue(true)\n      if (data.target.value===\"Non\")\n        setDrogue(false)\n    }\n    var handleTabagismeChange = (data) => {\n      if (data.target.value===\"Oui\")\n        setTabagisme(true)\n      if (data.target.value===\"Non\")\n        setTabagisme(false)\n    }\n    var handleNbCigarettesChange = (data) => {\n        setNbCigarettes(data)\n    }\n    var handleFreqChichaChange = (data) => {\n        setFreqChicha(data)\n    }\n    var handleGsChange = (data) => {\n        setGs(data)\n    }\n    var handlePoidsChange = (data) => {\n        setPoids(data)\n    }\n    var handleTailleChange = (data) => {\n        setTaille(data)\n    }\n    var handleSubmit = (e) => {\n        var values = {\n            poids: poids,\n            taille: taille,\n            gs: gs,\n            alcool: alcool,\n            drogue: drogue,\n            nbCigarettes: nbCigarettes,\n            freqChicha: freqChicha\n        }\n        console.log(values)\n        e.preventDefault();\n        props.habitudesDeViePatient(props.patientList[\"cin\"], values)\n        props.navigation.navigate(\"PatientDetails\")\n    }\n\n    return (\n\n\n            <View  >\n            <div style={tailwind(' items-center mt-10')} class=\"big\">\n            <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n                <View style={tailwind(' items-center mt-10')}>\n\n                   <View style={tailwind(' items-center mt-3')}>\n        <div>\n        <Text style={tailwind('text-gray-700 py-2')}>Tabagisme ?</Text>\n          <input onChange={handleTabagismeChange} type=\"radio\" value=\"Non\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n          <input onChange={handleTabagismeChange} type=\"radio\" value=\"Oui\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n        </div>\n      </View>\n\n\n\n\n\n                </View>\n\n                <View>\n                    {tabagisme == true && (\n                        <View style={tailwind(' items-center mt-3')}>\n\n                            <FormInput placeholder=\"Nombre de cigarettes/jour\"\n                                type=\"number-pad\"\n                                onChangeText={handleNbCigarettesChange}\n                            />\n\n\n                            <FormInput placeholder=\"Frequence de Chicha/semaine\"\n                                type=\"number-pad\"\n                                onChangeText={handleFreqChichaChange}\n                            />\n                        </View>\n\n                    )}\n\n                </View>\n                <View style={tailwind(' items-center mt-3')}>\n                    <div  >\n                    <Text style={tailwind('text-gray-700 py-2')}>Drogues/cannabis ?</Text>\n                      <input onChange={handleDrogueChange} type=\"radio\" value=\"Non\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n                      <input onChange={handleDrogueChange} type=\"radio\" value=\"Oui\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n                    </div>\n                </View>\n                <View style={tailwind('items-center mt-3 ')}>\n                    <div  >\n                    <Text style={tailwind('text-gray-700 py-2')}>Alcool ?</Text>\n                      <input onChange={handleAlcoolChange} type=\"radio\" value=\"Non\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n                      <input onChange={handleAlcoolChange} type=\"radio\" value=\"Oui\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n                    </div>\n\n                </View>\n                <View style={tailwind(' items-center mt-10')}>\n                <FormInput placeholder=\"Poids\"\n                    onChangeText={handlePoidsChange} />\n                <FormInput placeholder=\"Taille\"\n                    onChangeText={handleTailleChange} />\n                <FormInput placeholder=\"GS\"\n                    onChangeText={handleGsChange} />\n                    </View>\n                <View style={tailwind(' items-center mt-10')}>\n                    <FormButton title=\"Enregister\" onPress={handleSubmit} />\n                    <FormButton title=\"Annuler\" onPress={() => { props.navigation.navigate(\"PatientDetails\") }} />\n                </View>\n                </Container>\n                </div>\n                <ParticlesBg type=\"cobweb\" config={config} bg={true} />\n            </View>\n\n    );\n};\n\nconst styles = StyleSheet.create({\n    row: {\n        flex: 1,\n        flexDirection: \"row\",\n        padding: 10\n    },\n    body: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#2193b0',\n    },\n});\n\nconst mapStateToProps = (state) => ({\n    patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n    habitudesDeViePatient: actions.habitudesDeViePatient\n\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(HabitudesDeVie);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnosticDetails.js",["462","463","464"],"import React from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../Form/FormButton\";\nimport * as actions from \"../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { StyleSheet,View, Text } from 'react-native';\n//import 'localstorage-polyfill';\nimport { medicalService } from '../../Reducers/medicalService';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport './home.css';\n\nconst DiagnosticDetails = (props) => {\n  let config = {\n        num: [4, 7],\n        rps: 0.1,\n        radius: [5, 40],\n        life: [1.5, 3],\n        v: [2, 3],\n        tha: [-50, 50],\n        alpha: [0.6, 0],\n        scale: [.1, 0.9],\n        position: \"all\",\n        color: [ \"#ff0000\"],\n        cross: \"dead\",\n        random: 10\n      };\n\n    return (\n<div >\n      <div class=\"big\">\n      <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n            <View style={tailwind(' items-center ')} >\n                <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n                <View style={tailwind('py-8')}>\n                    <FormButton title=\"Confirmation diagnostique\" onPress={() => { props.navigation.navigate(\"ConfirmationDiag\") }} />\n                    <FormButton title=\"Admission\" onPress={() => { props.navigation.navigate(\"Admission\") }} />\n                    <FormButton title=\"Caractéristiques cliniques\" onPress={() => { props.navigation.navigate(\"CaracCliniques\") }} />\n                    <FormButton title=\"Examens cliniques\" onPress={() => { props.navigation.navigate(\"ExamenCliniques\") }} />\n                    <FormButton title=\"Examens radiologiques et para-cliniques\" onPress={() => props.navigation.navigate(\"ExamenRadioParaCli\")} />\n                    <FormButton title=\"Examens biologiques\" onPress={() => props.navigation.navigate(\"ExamBio\")} />\n                    <FormButton title=\"Traitement\" onPress={()=>props.navigation.navigate(\"Traitement\")}/>\n                    <FormButton title=\"Exposition\" onPress={()=>props.navigation.navigate(\"Exposition\")}/>\n                    <FormButton title=\"Evolution\"  onPress={()=>props.navigation.navigate(\"Evolution\")}/>\n                    <FormButton title=\"Evaluation finale\" onPress={() => props.navigation.navigate(\"EvaluationFinale\")} />\n                </View>\n\n\n\n\n\n            <View style={tailwind('items-center py-8')}>\n                <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"PatientDetails\") }} />\n\n            </View>\n            </View>\n            </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    patientList: state.medicalService.patientList,\n    diagnosticList: state.medicalService.diagnosticList,\n});\nconst mapActionToProps = {\n};\nconst styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nexport default connect(mapStateToProps, mapActionToProps)(DiagnosticDetails);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/dashbord.js",["465","466"],"import React from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../Form/FormButton\";\nimport * as actions from \"../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport './home.css';\n\n\nconst Dashbord = (props) => {\n  let config = {\n        num: [4, 7],\n        rps: 0.1,\n        radius: [5, 40],\n        life: [1.5, 3],\n        v: [2, 3],\n        tha: [-50, 50],\n        alpha: [0.6, 0],\n        scale: [.1, 0.9],\n        position: \"all\",\n        color: [ \"#ff0000\"],\n        cross: \"dead\",\n        random: 10\n      };\n\n    return (\n\n\n      <div>\n      <div class=\"big\">\n      <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n            <View style={tailwind(' items-center ')} >\n                <View style={tailwind('py-24')}>\n                    <FormButton title=\"Save File\" onPress={() => { props.navigation.navigate(\"Dash1\") }} />\n                    <FormButton title=\"Dash2\" onPress={() => { props.navigation.navigate(\"Dash2\") }} />\n                    <FormButton title=\"Dash3\" onPress={() => { props.navigation.navigate(\"Dash3\") }} />\n                    <FormButton title=\"Dash4\" onPress={() => { props.navigation.navigate(\"Dash4\") }} />\n                </View>\n\n                <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"SearchPatient\") }} />\n\n            </View>\n            </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Dashbord);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux.js",["467","468","469"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../Form/FormButton\";\nimport * as actions from \"../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\n//import 'localstorage-polyfill';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport './home.css';\nconst AntecendentsMedicaux = (props) => {\n  let config = {\n        num: [4, 7],\n        rps: 0.1,\n        radius: [5, 40],\n        life: [1.5, 3],\n        v: [2, 3],\n        tha: [-50, 50],\n        alpha: [0.6, 0],\n        scale: [.1, 0.9],\n        position: \"all\",\n        color: [ \"#ff0000\"],\n        cross: \"dead\",\n        random: 10\n      };\n\n\n  return (\n    <div>\n    <div class=\"big\">\n    <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Antécédents medicaux:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n        <View style={tailwind('py-24')}>\n          <FormButton title=\"Ajouter un antécédent medical\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux\") }} />\n          <FormButton title=\"Liste des antécédents medicaux\" onPress={() => props.navigation.navigate(\"AntecedentsList\")} />\n        </View>\n        <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"PatientDetails\") }} />\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\n\nconst mapStateToProps = (state) => ({\n\n  patientList: state.medicalService.patientList,\n});\nconst mapActionToProps = {\n  getAllAntecedentsMedicaux: actions.getAllAntecedentsMedicaux,\n  removeAntecedentMedical: actions.removeAntecedentMedical\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(AntecendentsMedicaux);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/addAntecedentsMedicaux.js",["470","471"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../Form/FormButton\";\nimport * as actions from \"../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\n//import 'localstorage-polyfill';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport './home.css';\n\n\nconst AddAntecendentsMedicaux = (props) => {\n  let config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n  const [nextPath, setNextPath] = useState(\"PathRespChronique\")\n\n  var handleAntecedentChange = (data) => {\n      setNextPath(data.target.value)\n  }\n  return (\n    <div>\n    <div class=\"big\">\n    <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n\n\n        <View style={tailwind(\"py-8\")} >\n        <div  onChange={handleAntecedentChange}>\n\n      <div>  <input type=\"radio\" value=\"PathRespChronique\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Pathologie respiratoire chronique ?</Text></div>\n      <div>  <input type=\"radio\" value=\"Cardiopathies\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Cardiopathies ?</Text></div>\n      <div>  <input type=\"radio\" value=\"TrRythCardiaque\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Trouble du rythme cardiaque ?</Text></div>\n      <div>  <input type=\"radio\" value=\"HTA\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>HTA ?</Text></div>\n      <div>  <input type=\"radio\" value=\"Diabete\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Diabète ?</Text> </div>\n      <div>   <input type=\"radio\" value=\"InsRenaleChro\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Insuffisance rénale chronique ?</Text></div>\n      <div>   <input type=\"radio\" value=\"AVC\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>AVC ? </Text></div>\n      <div>   <input type=\"radio\" value=\"Retinopathie\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Rétinopathie ?</Text></div>\n      <div>   <input type=\"radio\" value=\"ATCDchir\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>ATCD chirugicaux ?</Text></div>\n      <div>   <input type=\"radio\" value=\"Grossesse\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Grossesse en cours ?</Text></div>\n      <div>   <input type=\"radio\" value=\"PriseAINS\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Prise récente d'AINS ?</Text></div>\n      <div>   <input type=\"radio\" value=\"Immunosuppreseur\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Traitement immunosuppresseur ?</Text></div>\n      <div>   <input type=\"radio\" value=\"AutresATCD\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Autres ATCD ?</Text></div>\n\n      </div>\n        </View>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AntecendentsMedicaux\") }} />\n          <FormButton title=\"Suivant\" onPress={() => { props.navigation.navigate(nextPath) }} />\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n\n});\nconst mapStateToProps = (state) => ({\n\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(AddAntecendentsMedicaux);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/info/infosGenerales2.js",["472","473","474","475","476","477"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\n\nimport JSONTree from 'react-json-tree'\nimport Heading from './Heading';\n// If you're using Immutable.js: `npm i --save immutable`\nimport { Map } from 'immutable'\nconst json = {\narray: [1, 2, 3],\nbool: true,\nobject: {\n  foo: 'bar',\n},\nimmutable: Map({ key: 'value' })\n}\n\nconst theme = {\n  scheme: 'monokai',\n  base00: '#272822',\n  base01: '#383830',\n  base02: '#49483e',\n  base03: '#75715e',\n  base04: '#a59f85',\n  base05: '#f8f8f2',\n  base06: '#f5f4f1',\n  base07: '#f9f8f5',\n  base08: '#f92672',\n  base09: '#fd971f',\n  base0A: '#f4bf75',\n  base0B: '#a6e22e',\n  base0C: '#a1efe4',\n  base0D: '#66d9ef',\n  base0E: '#ae81ff',\n  base0F: '#cc6633'\n};\nconst InfosGenerales2 = (props) => {\n  let config = {\n        num: [4, 7],\n        rps: 0.1,\n        radius: [5, 40],\n        life: [1.5, 3],\n        v: [2, 3],\n        tha: [-50, 50],\n        alpha: [0.6, 0],\n        scale: [.1, 0.9],\n        position: \"all\",\n        color: [ \"#ff0000\"],\n        cross: \"dead\",\n        random: 10\n      };\n      return (\n\n        <div>\n        <div class=\"big\">\n        <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n              <View style={tailwind(' items-center ')} >\n              <Heading>react-native-json-tree</Heading>\n<JSONTree  data={props.patientList} theme={theme} invertTheme={false}   />\n\n              </View>\n              </Container>\n              </div>\n              <ParticlesBg type=\"cobweb\" config={config} bg={true} />\n              </div>\n      );\n};\n\n  const mapStateToProps = (state) => ({\n      patientList: state.medicalService.patientList\n  });\n  const mapActionToProps = {\n  };\n  const styles = StyleSheet.create({\n    body: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#2193b0',\n    },\n  });\n  export default connect(mapStateToProps, mapActionToProps)(InfosGenerales2);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/CaracCliniques1.js",["478"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from '../../Form/FormInput';\nimport FormButton from '../../Form/FormButton';\nimport CaracCls from \"../../Form/CaracCls\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nimport Steps from \"../../Form/Steps\";\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\nconst CaracCliniques = (props) => {\n\n    const [sym, setSym] = useState(true)\n    const [dateD, setDateD] = useState()\n    const [dateF, setDateF] = useState()\n    const [temperature, setTemperature] = useState()\n    const [typeT, settypeT] = useState(\"Séche\")\n    const [selle, setSelle] = useState()\n    const [autre, setAutre] = useState()\n    const [nbEpisodes, setNbEpisodes] = useState()\n\n    //carac\n    const [fievre, setFievre] = useState(false)\n    const [toux, setToux] = useState(false)\n    const [cepah, setCeph] = useState(false)\n    const [asth, setAsth] = useState(false)\n    const [mya, setMya] = useState(false)\n    const [ody, setOdy] = useState(false)\n    const [rhi, setRhi] = useState(false)\n    const [ano, setAno] = useState(false)\n    const [agu, setAgu] = useState(false)\n    const [dia, setDia] = useState(false)\n    const [nau, setNau] = useState(false)\n    const [eru, setEru] = useState(false)\n    const [eng, setEng] = useState(false)\n    const [dou, setDou] = useState(false)\n    const [gen, setGen] = useState(false)\n    const [ess, setEss] = useState(false)\n    const [aut, setAut] = useState(false)\n\n\n    const [test, setTest] = useState(false)\n\n    var handleTemperatureChange = (text) => {\n        if (text < 32 || text > 43)\n            setTest(false)\n        else setTest(true)\n        setTemperature(text)\n    }\n    var handletypeT = (data) => {\n            settypeT(data.target.value)\n    }\n    var handleSelle = (text) => {\n        setSelle(text)\n    }\n    var handleAutre = (text) => {\n        setAutre(text)\n    }\n    var handleNbEpisodes = (text) => {\n        setNbEpisodes(text)\n    }\n    var handleSymChange = (data) => {\n    if (data.target.value===\"Oui\")\n        setSym(true)\n    else setSym(false)\n}\n    var handleSubmitCarac = (item) => {\n        if (test === false && item === \"Fievre\")\n            return;\n        var values = {\n            type: item,\n            typeT: typeT,\n            temperature: temperature,\n            selle: selle,\n            nbEpisodes: nbEpisodes,\n            autre: autre,\n            dateD: dateD,\n            dateF: dateF,\n            sym: sym\n\n        }\n        console.log(values)\n        props.addCaracCliniques(props.patientList[\"cin\"], values)\n\n    }\n\n\n\n    //functions\n\n\n\n\n    return (\n    <div>\n<div class=\"big\">\n<View style={styles.row}>\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n            <View style={tailwind(\"items-center\")}>\n            <View>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Caractéristiques cliniques du cas</Text>\n            <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n            <View style={tailwind(\"items-center\")}>\n            <div  >\n            <Text style={tailwind('text-gray-700 py-2')}>Symptomatique ?</Text>\n              <input onChange={handleSymChange} type=\"radio\" value=\"Oui\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n              <input onChange={handleSymChange} type=\"radio\" value=\"Non\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n            </div>\n            </View>\n            {\n                sym === true &&\n                <View style={tailwind(\"items-center\")}>\n\n                    <FormButton title=\"Toux\" onPress={() => setFievre(!fievre)}>\n                        <Text >Fièvre</Text>\n                    </FormButton>\n                    {\n                        fievre === true && <View style={tailwind(\"items-center\")}>\n                            <Text style={tailwind(\"text-red-500\")}>{test === false && \"La temperature doit etre entre 36 et 43 °C\"}</Text>\n                            <FormInput placeholder=\"Si mesuré\" type=\"decimal-pad\" onChangeText={handleTemperatureChange} />\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Fievre\"); setFievre(!fievre) }} />\n                        </View>\n                    }\n                    <FormButton  title=\"Toux\" onPress={() => setToux(!toux)} />\n                    {\n                        toux === true && <View style={tailwind(\"items-center\")}>\n                        <View style={styles.row}>\n                                <div  >\n                        \t  <Text style={tailwind('text-gray-700 py-2')}>Equilibré?</Text>\n                                  <input onChange={handletypeT} type=\"radio\" value=\"Séche\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Séche</Text>\n                                  <input onChange={handletypeT} type=\"radio\" value=\"Productive\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Productive</Text>\n                                </div>\n                              </View>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Toux\"); setToux(!toux) }} />\n                        </View>\n                    }\n                    <FormButton  title=\"Cépahlées\" onPress={() => setCeph(!cepah)}/>\n                    {\n                        cepah === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Cephalees\"); setCeph(!cepah) }} />\n                        </View>\n                    }\n                    <FormButton  title=\"Asthénie/fatigue\" onPress={() => setAsth(!asth)}/>\n                    {\n                        asth === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"AshthFat\"); setAsth(!asth) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Myalgies/courabatures\" onPress={() => setMya(!mya)}/>\n                    {\n                        mya === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"MyalCourba\"); setMya(!mya) }} />\n                        </View>\n                    }\n                    <FormButton  title=\"Odynophagie\" onPress={() => setOdy(!ody)}/>\n                    {\n                        ody === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Odynophagie\"); setOdy(!ody) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Rhinorrhée/Congestion nasale\" onPress={() => setRhi(!rhi)}/>\n                    {\n                        rhi === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"RhinoCongNas\"); setRhi(!rhi) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Anosmie\" onPress={() => setAno(!ano)}/>\n                    {\n                        ano === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Anosmie\"); setAno(!ano) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Agueusie\" onPress={() => setAgu(!agu)}/>\n                    {\n                        agu === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Agueusie\"); setAgu(!agu) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Diarrhée\" onPress={() => setDia(!dia)}/>\n                    {\n                        dia === true && <View style={tailwind(\"items-center\")}>\n                            <FormInput placeholder=\"Nb selles/jour\" onChangeText={handleSelle} maxLength={Number(\"2\")} type=\"number-pad\" />\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Diarrhee\"); setDia(!dia) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Nausée/voumissement\" onPress={() => setNau(!nau)}/>\n                    {\n                        nau === true && <View style={tailwind(\"items-center\")}>\n                            <FormInput placeholder=\"Nb episodes/jour\" onChangeText={handleNbEpisodes}  maxLength={Number(\"2\")} type=\"number-pad\"/>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"NauVoumi\"); setNau(!nau) }} />\n                        </View>\n                    }\n\n                    <FormButton title=\"ERuption cutanée\" onPress={() => setEru(!eru)}/>\n                    {\n                        eru === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"ErruptionCu\"); setEru(!eru) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Engelure\" onPress={() => setEng(!eng)}/>\n                    {\n                        eng === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Engelure\"); setEng(!eng) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Douleur thoracique\" onPress={() => setDou(!dou)}/>\n                    {\n                        dou === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"DouleurThora\"); setDou(!dou) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Génie respiratoire<\" onPress={() => setGen(!gen)}/>\n                    {\n                        gen === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"GeneRespi\"); setGen(!gen) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Essoufflement\" onPress={() => setEss(!ess)}/>\n                    {\n                        ess === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Essouflement\"); setEss(!ess) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Autres signes cliniques\" onPress={() => setAut(!aut)}/>\n                    {\n                        aut === true && <View style={tailwind(\"items-center\")}>\n                            <FormInput placeholder=\"Préciser\" onChangeText={handleAutre} />\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Autre\"); setAut(!aut) }} />\n                        </View>\n                    }\n\n                </View>\n\n            }\n            <View style={tailwind(\"items-center pb-8\")}>\n                <View style={styles.row}>\n                    <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"Admission1\") }} />\n                    {sym === false && <FormButton title=\"Enregistrer\" onPress={() => { handleSubmitCarac(\"\"); props.navigation.navigate(\"ExamenCliniques1\") }} />}\n                </View>\n                <FormButton title=\"Pass\" onPress={() => { props.navigation.navigate(\"ExamenCliniques1\") }} />\n\n            </View>\n            </View>\n            </View>\n            </Container>\n      <Steps current={6} /> \n</View>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n\n    );\n};\n\nconst styles = StyleSheet.create({\n    row: {\n        flex: 1,\n        flexDirection: \"row\",\n        padding: 10\n    },\n    body: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#2193b0',\n    },\n});\nconst mapStateToProps = (state) => ({\n    loggedUser: state.medicalService.loggedUser,\n    patientList: state.medicalService.patientList,\n});\nconst mapActionToProps = {\n    login: actions.login,\n    logout: actions.logout,\n    addCaracCliniques: actions.addCaracCliniques\n};\nexport default connect(mapStateToProps, mapActionToProps)(CaracCliniques);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/evaluationFinale1.js",["479","480","481"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport FormInput from '../../Form/FormInput';\nimport FormInput2 from '../../Form/FormInput2';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nimport Steps from \"../../Form/Steps\";\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\nconst EvaluationFinale = (props) => {\n  const [dateSor, setDateSor] = useState()\n  const [deces, setDeces] = useState(false)\n  const [dateDispSig, setDateDispSig] = useState()\n  const [causesDir, setCausesDir] = useState()\n  const [causesIndir, setCausesIndir] = useState()\n  var handleTypeSdate = (data) => {\n    setDateSor(data.target.value)\n       }\n       var handleTypeSdate = (data) => {\n        setDateDispSig(data.target.value)\n           }\n  var handleDecesChange = (data) => {\n    if (data.target.value===\"non\")\n      setDeces(false)\n    else setDeces(true)\n  }\n  var handleSubmit = (e) => {\n    e.preventDefault()\n    var values = {\n      dateSor: dateSor,\n      dateDispSig: dateDispSig,\n      deces: deces,\n      causesDir: causesDir,\n      causesIndir: causesIndir,\n    }\n    //console.log(values)\n    props.addEvaluationFinale(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"SearchPatient\")\n  }\n\n\n  return (\n    <div>\n<div class=\"big\">\n<View style={styles.row}>\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n    <View style={tailwind(\"items-center py-8\")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Evaluation finale</Text>\n      <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n      <View style={tailwind(\"items-center py-8\")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de sortie?</Text>\n      <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n      </View>\n      <View style={tailwind(\"items-center\")}>\n        <View style={styles.row}>\n        <Text style={tailwind(\"text-gray-700\")}>Décès</Text>\n        <div  onChange={handleDecesChange}>\n          <input type=\"radio\" value=\"non\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n          <input type=\"radio\" value=\"oui\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n        </div>\n        </View>\n        {\n          deces === false &&<View style={tailwind(\"items-center py-8\")}>\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de disparition des signes</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n          </View>\n        }\n        {\n          deces === true && <View style={tailwind(\"items-center\")}>\n            <FormInput placeholder=\"Causes directes\" onChangeText={setCausesDir} />\n            <FormInput placeholder=\"Causes indirectes\" onChangeText={setCausesIndir} />\n          </View>\n        }\n\n      </View>\n\n      <View style={tailwind(\"items-center py-8\")}>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"evolution1\") }} />\n          <FormButton title=\"Suivant\" onPress={handleSubmit} />\n        </View>\n        <FormButton title=\"Pass\" onPress={() => { props.navigation.navigate(\"SearchPatient\") }} />\n      </View>\n      </View>\n      </Container>\n      <Steps current={12} /> \n</View>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\n\nconst mapStateToProps = (state) => ({\n  loggedUser: state.medicalService.loggedUser,\n  patientList: state.medicalService.patientList,\n});\nconst mapActionToProps = {\n  login: actions.login,\n  logout: actions.logout,\n  addEvaluationFinale: actions.addEvaluationFinale\n};\nexport default connect(mapStateToProps, mapActionToProps)(EvaluationFinale);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/examBio1.js",["482","483","484","485","486","487","488"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../../Form/FormButton\";\nimport FormInput from \"../../Form/FormInput\";\n\n\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport { DatePicker } from '@assenti/rui-components';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nimport Steps from \"../../Form/Steps\";\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\nconst ExamBio1 = (props) => {\n  const [type, setType] = useState(\"NFS\")\n  const [datePr, setDatePr] = useState();\n  //NFS\n  const [gb, setGb] = useState()\n  const [lym, setLym] = useState()\n  const [pla, setPla] = useState()\n  const [hb, setHb] = useState()\n  const [ht, setHt] = useState()\n  //BIlan renal\n  const [creat, setCreat] = useState()\n  const [clairCreat, setClairCreat] = useState()\n  const [uree, setUree] = useState()\n\n  //Bilan hepatique\n  const [biliru, setBiliru] = useState()\n  const [biliru1, setBiliru1] = useState()\n  const [alat, setAlat] = useState()\n  const [asat, setAsat] = useState()\n  const [tp, setTp] = useState()\n  const [facteurV, setFacteurV] = useState()\n  const [fibrinogene, setFibrinogene] = useState()\n  const [cpk_mb, setCpk_mb] = useState()\n  const [troponine, setTroponine] = useState()\n  const [pro_bnp, setPro_bnp] = useState()\n  const [albumi, setAlbumi] = useState()\n  const [d_dimère, setD_dimère] = useState()\n  const [ldh, setLdh] = useState()\n  const [crp, setCrp] = useState()\n  const [procal, setProcal] = useState()\n  const [ferri, setFerri] = useState()\n  //GDSA\n  const [ph, setPh] = useState()\n  const [pao2, setPao2] = useState()\n  const [paco2, setPaco2] = useState()\n  const [hco3_, setHco3_] = useState()\n  const [sao2, setSao2] = useState()\n\n  //ionogramme\n  const [nak, setNak] = useState()\n  const [nak1, setNak1] = useState()\n  const [nakUr, setNakUr] = useState()\n  const [nakUr1, setNakUr1] = useState()\n  //Autre\n  const [fileName, setFileName] = useState()\n  const [file, setFile] = useState()\n  // controle de saisie\n  const [test, setTest] = useState()\n\n\n  var handleTypeSdate = (data) => {\n    setDatePr(data.target.value)     \n       }\n       var handleTypeSdate1 = (data) => {\n        setDatePr(data.target.value)     \n           }\n           var handleTypeSdate2 = (data) => {\n            setDatePr(data.target.value)     \n               }\n               var handleTypeSdate3 = (data) => {\n                setDatePr(data.target.value)     \n                   }\n                   var handleTypeSdate4 = (data) => {\n                    setDatePr(data.target.value)     \n                       }\n  var handleSubmit = () => {\n    \n    var values = {\n      datePr: datePr,\n      type: type,\n      gb: gb,\n      lym: lym,\n      pla: pla,\n      hb: hb,\n      ht: ht,\n      creat: creat,\n      clairCreat: clairCreat,\n      uree: uree,\n      ph: ph,\n      paco2: paco2,\n      pao2: pao2,\n      hco3_: hco3_,\n      sao2: sao2,\n      nak: nak,\n      nak1: nak1,\n      nakUr: nakUr,\n      nakUr1: nakUr1,\n      biliru: biliru,\n      biliru1: biliru1,\n      alat: alat,\n      asat: asat,\n      tp: tp,\n      facteurV: facteurV,\n      fibrinogene: fibrinogene,\n      cpk_mb: cpk_mb,\n      troponine: troponine,\n      pro_bnp: pro_bnp,\n      albumi: albumi,\n      d_dimère: d_dimère,\n      ldh: ldh,\n      crp: crp,\n      procal: procal,\n      ferri: ferri\n\n\n    }\n    //console.log(values)\n    props.addExamBio(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"Traitement1\")\n\n  }\n\n\n\n  var handleTypeChange = (data) => {\n      setType(data.target.value)\n    setDatePr()\n\n  }\n\n  return (\n<div>\n<div class=\"big\">\n<View style={styles.row}>\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(\"items-center\")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Examens Biologiques</Text>\n      <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n      <View style={tailwind(\"items-center\")}>\n      <div>\n      <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"NFS\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>NFS</Text></div>\n      <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"BilanRenal\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Bilan renal</Text></div>\n      <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"BilanHepa\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Bilan hepatique</Text></div>\n      <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"GDSA\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>GDSA</Text></div>\n      <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"Ionogra\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Ionogramme</Text></div>\n      <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"Autre\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Autres</Text></div>\n      </div>\n      </View>\n\n      <Text style={tailwind(\"text-center text-red-500 py-4\")}>{test !== undefined && test}</Text>\n\n\n      {\n        type === \"NFS\" && <View style={tailwind(\"items-center py-12\")}>\n          <FormInput placeholder=\"GB\" onChangeText={setGb} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Lymphocyte\" onChangeText={setLym} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Plaquette\" onChangeText={setPla} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Hb\" onChangeText={setHb} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Ht\" onChangeText={setHt} type=\"decimal-pad\" />\n          <FormButton title=\"Enregitrer\" onPress={handleSubmit} type=\"decimal-pad\" />\n\n        </View>\n      }\n      {\n        type === \"BilanRenal\" && <View style={tailwind(\"items-center py-12\")}>\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise de l'examen</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n          <FormInput placeholder=\"Creat\" onChangeText={setCreat} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Clairance de la creat\" onChangeText={setClairCreat} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Urée\" onChangeText={setUree} type=\"decimal-pad\" />\n          <FormButton title=\"Enregitrer\" onPress={handleSubmit} />\n        </View>\n      }\n      {\n        type === \"GDSA\" && <View style={tailwind(\"items-center py-12\")}>\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise de l'examen</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate1}/>\n        \n          <FormInput placeholder=\"pH\" onChangeText={setPh} type=\"decimal-pad\" />\n          <FormInput placeholder=\"PaO2\" onChangeText={setPao2} type=\"decimal-pad\" />\n          <FormInput placeholder=\"PaCO2\" onChangeText={setPaco2} type=\"decimal-pad\" />\n          <FormInput placeholder=\"HCO3-\" onChangeText={setHco3_} type=\"decimal-pad\" />\n          <FormInput placeholder=\"SaO2\" onChangeText={setSao2} type=\"decimal-pad\" />\n          <FormButton title=\"Enregitrer\" onPress={handleSubmit} />\n\n        </View>\n      }\n      {\n        type === \"BilanHepa\" && <View style={tailwind(\"items-center py-12\")}>\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise de l'examen</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate2}/>\n        \n          <FormInput placeholder=\"Bilirubine (T)\" onChangeText={setBiliru} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Bilirubine (D)\" onChangeText={setBiliru1} type=\"decimal-pad\" />\n          <FormInput placeholder=\"ALAT\" onChangeText={setAlat} type=\"decimal-pad\" />\n          <FormInput placeholder=\"ASAT\" onChangeText={setAsat} type=\"decimal-pad\" />\n          <FormInput placeholder=\"TP\" onChangeText={setTp} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Facteur V\" onChangeText={setFacteurV} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Fibrinogene\" onChangeText={setFibrinogene} type=\"decimal-pad\" />\n          <FormInput placeholder=\"CPK-MB\" onChangeText={setCpk_mb} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Troponine\" onChangeText={setTroponine} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Pro BNP\" onChangeText={setPro_bnp} type=\"decimal-pad\" />\n          <FormInput placeholder=\"ALbuminémie\" onChangeText={setAlbumi} type=\"decimal-pad\" />\n          <FormInput placeholder=\"D-Dimère\" onChangeText={setD_dimère} type=\"decimal-pad\" />\n          <FormInput placeholder=\"LDH\" onChangeText={setLdh} type=\"decimal-pad\" />\n          <FormInput placeholder=\"CRP\" onChangeText={setCrp} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Procalcitonine\" onChangeText={setProcal} type=\"decimal-pad\" />\n          <FormInput placeholder=\"FErritinemie\" onChangeText={setFerri} type=\"decimal-pad\" />\n          <FormButton title=\"Enregitrer\" onPress={handleSubmit} />\n\n\n        </View>\n      }\n      {\n        type === \"Ionogra\" && <View style={tailwind(\"items-center py-12\")}>\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise de l'examen</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate3}/>\n        \n          <FormInput placeholder=\"Na+\" onChangeText={setNak} type=\"decimal-pad\" />\n          <FormInput placeholder=\"K+\" onChangeText={setNak1} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Na+ urinaire\" onChangeText={setNakUr} type=\"decimal-pad\" />\n          <FormInput placeholder=\"K+ urinaire\" onChangeText={setNakUr1} type=\"decimal-pad\" />\n          <FormButton title=\"Enregitrer\" onPress={handleSubmit} />\n\n        </View>\n      }\n      {\n        type === \"Autre\" && <View style={tailwind(\"items-center py-12\")}>\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise de l'examen</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate4}/>\n        \n        </View>\n      }\n      <View style={tailwind(\"items-center py-12\")}>\n      <FormButton title=\"Retour\" onPress={() => props.navigation.navigate(\"ExamenRadioParaCli1\")} />\n        <FormButton title=\"Pass\" onPress={() => props.navigation.navigate(\"Traitement1\")} />\n      </View>\n      </View>\n      </Container>\n      <Steps current={10} /> \n</View>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList,\n});\nconst mapActionToProps = {\n  login: actions.login,\n  logout: actions.logout,\n  addExamBio: actions.addExamBio\n};\nexport default connect(mapStateToProps, mapActionToProps)(ExamBio1);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/examenCliniques1.js",["489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../../Form/FormButton\";\nimport FormInput from \"../../Form/FormInput\";\nimport FormInput2 from \"../../Form/FormInput2\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport FormCheckBox from \"../../Form/CheckBox\";\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nimport Steps from \"../../Form/Steps\";\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\nconst ExamenCliniques = (props) => {\n\n    var handleExamOroChange = (newValue, text) => {\n        if (newValue == true) setExamOro(examOro + \" \" + text)\n        else setExamOro(examOro.replace(text + \" \", \"\"))\n        if (text === \" Autre\" && newValue == true) setAutreOro(true)\n        if (text === \" Autre\" && newValue == false) setAutreOro(false)\n    }\n\n    var handleExamenOphtaChange = (newValue, text) => {\n        if (newValue == true) setExamOphta(examOphta + \" \" + text)\n        else setExamOphta(examOphta.replace(text + \" \", \"\"))\n        if (text === \"Autre\" && newValue == true) setAutreOphta(true)\n        if (text === \"Autre\" && newValue == false) setAutreOphta(false)\n    }\n\n\n    var handleExamPulChange = (newValue, text) => {\n        if (newValue == true) setExamPulmo(examPulmo + \" \" + text)\n        else setExamPulmo(examPulmo.replace(text + \" \", \"\"))\n        if (text === \"Autre\" && newValue == true) setAutrePul(true)\n        if (text === \"Autre\" && newValue == false) setAutrePul(false)\n    }\n\n    var handleExamCutChange = (newValue, text) => {\n        if (newValue == true) setExamCut(examCut + \" \" + text)\n        else setExamCut(examCut.replace(text + \" \", \"\"))\n        if (text === \"Autre\" && newValue == true) setAutreCut(true)\n        if (text === \"Autre\" && newValue == false) setAutreCut(false)\n    }\n\n    var handleExamNeuroChange = (newValue, text) => {\n        if (newValue == true) setExamNeuro(examNeuro + \" \" + text)\n        else setExamNeuro(examNeuro.replace(text + \" \", \"\"))\n        if (text === \"Autre\" && newValue == true) setAutreNeuro(true)\n        if (text === \"Autre\" && newValue == false) setAutreNeuro(false)\n    }\n    var handleExamenCarChange = (newValue, text) => {\n        if (newValue == true) setExamCardio(examCardio + \" \" + text)\n        else setExamCardio(examCardio.replace(text + \" \", \"\"))\n        if (text === \"Autre\" && newValue == true) setAutreCar(true)\n        if (text === \"Autre\" && newValue == false) setAutreCar(false)\n    }\n\n\n    //component\n    const [oro, setOro] = useState(false)\n    const [pul, setPul] = useState(false)\n    const [oph, setOph] = useState(false)\n    const [cut, setCut] = useState(false)\n    const [neu, setNeu] = useState(false)\n    const [card, setCard] = useState(false)\n    const [aut, setAut] = useState(false)\n    //values\n    const [temperature, setTemperature] = useState()\n    const [fr, setFr] = useState()\n    const [fc, setFc] = useState()\n    const [sao2, setSao2] = useState()\n    const [pa_sys, setPa_sys] = useState()\n    const [pa_dya, setPa_dya] = useState()\n\n    const [scoreGlas, setScoreGlas] = useState()\n    const [scoreGlas1, setScoreGlas1] = useState()\n    const [poids, setPoids] = useState()\n    const [taille, setTaille] = useState()\n    const [examOro, setExamOro] = useState(\"\")\n    const [examPulmo, setExamPulmo] = useState(\"Tirage intercostal\")\n    const [examOphta, setExamOphta] = useState(\"hyperhèmie conjonctivale unilatérale\")\n    const [examCut, setExamCut] = useState(\"Erruption maculo-papuleuse géneralisée\")\n    const [examNeuro, setExamNeuro] = useState(\"Désorientation temporo-spatiale\")\n    const [examCardio, setExamCardio] = useState(\"Assourdissement des bruits du coeur\")\n    const [autre, setAutre] = useState()\n    //autre cb values values\n    const [autreOro, setAutreOro] = useState(false)\n    const [autrePul, setAutrePul] = useState(false)\n    const [autreOphta, setAutreOphta] = useState(false)\n    const [autreCut, setAutreCut] = useState(false)\n    const [autreNeuro, setAutreNeuro] = useState(false)\n    const [autreCar, setAutreCar] = useState(false)\n    // autre inputVlaues\n    const [autreInputOro, setAutreInputOro] = useState(false)\n    const [autreInputPul, setAutreInputPul] = useState(false)\n    const [autreInputOphta, setAutreInputOphta] = useState(false)\n    const [autreInputCut, setAutreInputCut] = useState(false)\n    const [autreInputNeuro, setAutreInputNeuro] = useState(false)\n    const [autreInputCar, setAutreInputCar] = useState(false)\n\n\n    // form validation\n    const [validation, setValidation] = useState()\n\n    var handleAutreChange = (text) => {\n        setAutre(text)\n    }\n    //autrecb handle change functions\n    var handleChangeAutreOro = (text) => {\n        setAutreInputOro(text)\n    }\n\n    var handleChangeAutrePul = (text) => {\n        setAutreInputPul(text)\n\n    }\n    var handleChangeAutreOpht = (text) => {\n        setAutreInputOphta(text)\n    }\n    var handleChangeAutreCut = (text) => {\n        setAutreInputCut(text)\n    }\n    var handleChangeAUtreNeu = (text) => {\n        setAutreInputNeuro(text)\n    }\n    var handleChangeAutreCar = (text) => {\n        setAutreInputCar(text)\n    }\n    //submit function\n    var handleSubmit = () => {\n\n\n        if (temperature > 43 || temperature < 30 || temperature === undefined) { setValidation(\"La temperature doit etre comprise entre 30et 43 °C\"); return; }\n        if (fr > 250 || fr < 0 || fr === undefined) { setValidation(\"La valuer du FR doit etre comprise entre 0 et 250 C/min !\"); return }\n        if (fc > 150 || fc < 0 || fc == undefined) { setValidation(\"La valeur du FC doit etre comprise entre 0 et 150 bpm\"); return }\n        if (sao2 > 100 || sao2 < 0 || sao2 === undefined) { setValidation(\"Le pourcentage de SaO2  doit etre compris entre 0 % et 100 % !\"); return }\n        if (pa_sys > 200 || pa_sys < 80 || pa_sys === undefined) { setValidation(\"La pression arterielle systolique doit ete comprise entre 80 et 200 !\"); return }\n        if (pa_dya > 200 || pa_dya < 80 || pa_dya === undefined) { setValidation(\"La pression arterielle systolique doit ete comprise entre 40 et 150!\"); return }\n        if (scoreGlas > 15 || scoreGlas < 0 || scoreGlas === undefined) { setValidation(\"Le score de Glasgow doit etre entre 0 et 15 !\") }\n        if (scoreGlas1 > 15 || scoreGlas1 < 0 || scoreGlas1 === undefined) { setValidation(\"Le score de Glasgow doit etre entre 0 et 15 !\") }\n        var x = examOro.replace(\"Autre\", \"Autre:\" + autreInputOro)\n        var values = {\n            fr: fr,\n            fc: fc,\n            pa_sys: pa_sys,\n            pa_dya: pa_dya,\n            sao2: sao2,\n            scoreGlas: scoreGlas,\n            scoreGlas1: scoreGlas1,\n            poids: poids,\n            taille: taille,\n            examOro: examOro.replace(\"Autre\", \"Autre:\" + autreInputOro),\n            examPulmo: examPulmo.replace(\"Autre\", \"Autre:\" + autreInputPul),\n            examOphta: examOphta.replace(\"Autre\", \"Autre:\" + autreInputOphta),\n            examCut: examCut.replace(\"Autre\", \"Autre:\" + autreInputCut),\n            examNeuro: examNeuro.replace(\"Autre\", \"Autre:\" + autreInputNeuro),\n            examCardio: examCardio.replace(\"Autre\", \"Autre:\" + autreInputCar),\n            autre: autre,\n            temperature: temperature,\n        }\n        //console.log(values)\n        props.addExamCli(props.patientList[\"cin\"], values)\n        props.navigation.navigate(\"ExamenRadioParaCli1\")\n    }\n\n\n\n    return (\n    <div>\n<div class=\"big\">\n<View style={styles.row}>\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n            <View style={tailwind(\"items-center\")}>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Examen clinique a l'admission</Text>\n            <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n            <View style={tailwind(\"items-center\")}>\n                <Text style={tailwind('text-red-500 py-2')}>{validation}</Text>\n                <FormInput placeholder=\"Température en °C\" type=\"decimal-pad\" onChangeText={setTemperature} />\n                <FormInput placeholder=\"FR  C/min\" type=\"decimal-pad\" onChangeText={setFr} />\n                <FormInput placeholder=\"FC bpm\" type=\"decimal-pad\" onChangeText={setFc} />\n                <FormInput placeholder=\"SaO2 %\" type=\"decimal-pad\" onChangeText={setSao2} />\n                <FormInput2 placeholder1=\"PA systolique\" placeholder2=\"PA diastolique\" onChangeText1={setPa_sys} onChangeText2={setPa_dya} />\n                <FormInput2 placeholder1=\"Score de Glasgow\" placeholder2=\"15\" onChangeText1={setScoreGlas} onChangeText2={setScoreGlas1} />\n                <FormInput placeholder=\"Poids kg\" type=\"decimal-pad\" maxLength={Number(\"3\")} onChangeText={setPoids} />\n                <FormInput placeholder=\"Taille m\" type=\"number-pad\" onChangeText={setTaille}  maxLength={Number(\"3\")}/>\n            </View>\n            <View style={tailwind(\"px-8 py-2 \")}>\n                <FormButton title=\"Examen oro-pharyngé\" onPress={() => setOro(!oro)}/>\n                {\n                    oro === true &&\n                    <View>\n                        <FormCheckBox text='Gorge Rouge' value={false} onPress={handleExamOroChange} />\n                        <FormCheckBox text=\"Hypertrophie des amygdales\" value={false} onPress={handleExamOroChange} />\n                        <FormCheckBox text=\"Anosmie\" value={false}  onPress={handleExamOroChange} />\n                        <FormCheckBox text=\" Agueusie\" value={false}  onPress={handleExamOroChange} />\n                        <FormCheckBox text=\" Autre\" value={false}  onPress={handleExamOroChange} />\n\n\n                    </View>\n\n\n                }\n                {autreOro === true && oro === true && <View style={tailwind(\"items-center\")}><FormInput placeholder=\"Autre\" onChangeText={handleChangeAutreOro} /></View>}\n                <FormButton title=\"Examen pulmonaire\" onPress={() => setPul(!pul)}/>\n                {\n                    pul === true &&\n                    <View>\n                        <FormCheckBox text=\"Tirage intercostal\" value={false} onPress={handleExamPulChange} />\n                        <FormCheckBox text=\"Tirage sus-sternal\" value={false} onPress={handleExamPulChange} />\n                        <FormCheckBox text=\"Silence auscultoire\" value={false} onPress={handleExamPulChange} />\n                        <FormCheckBox text=\"Hyper-sonorité\" value={false} onPress={handleExamPulChange} />\n                        <FormCheckBox text=\"Autre\" value={false} onPress={handleExamPulChange} />\n                    </View>\n\n                }\n                {autrePul === true && pul === true && <View style={tailwind(\"items-center\")}><FormInput placeholder=\"Autre\" onChangeText={handleChangeAutrePul} /></View>}\n                <FormButton title=\"Examen ophtalmologique\" onPress={() => setOph(!oph)}/>\n                {\n                    oph === true &&\n                    <View>\n                        <FormCheckBox text=\"Hyperhèmie conjonctivale unilatérale\" value={false} onPress={handleExamenOphtaChange} />\n                        <FormCheckBox text=\"Hyperhèmie conjonctivale bilatérale\" value={false} onPress={handleExamenOphtaChange} />\n                        <FormCheckBox text=\"Autre\" value={false} onPress={handleExamenOphtaChange} />\n                    </View>\n                }\n                {autreOphta === true && oph === true && <View style={tailwind(\"items-center\")}><FormInput placeholder=\"Autre\" onChangeText={handleChangeAutreOpht} /></View>}\n                <FormButton title=\"Examen cutané\" onPress={() => setCut(!cut)}/>\n                {\n                    cut === true && <View>\n                        <FormCheckBox text=\"Erruption maculo-papuleuse géneralisée\" value={false} onPress={handleExamCutChange} />\n                        <FormCheckBox text=\"Erruption purpurique\" value={false} onPress={handleExamCutChange} />\n                        <FormCheckBox text=\"Engelure\" value={false} onPress={handleExamCutChange} />\n                        <FormCheckBox text=\"Autre\" value={false} onPress={handleExamCutChange} />\n                    </View>\n                }\n                {autreCut === true && cut === true && <View style={tailwind(\"items-center\")}><FormInput placeholder=\"Autre\" onChangeText={handleChangeAutreCut} /></View>}\n                <FormButton title=\"Examen neurologique\" onPress={() => setNeu(!neu)}/>\n                {\n                    neu === true && <View>\n                        <FormCheckBox text=\"Désorientation temporo-spatiale\" value={false} onPress={handleExamNeuroChange} />\n                        <FormCheckBox text=\"Agitation\" value={false} onPress={handleExamNeuroChange} />\n                        <FormCheckBox text=\"Trouble de comportement\" value={false} onPress={handleExamNeuroChange} />\n                        <FormCheckBox text=\"Autre\" value={false} onPress={handleExamNeuroChange} />\n                    </View>\n                }\n                {autreNeuro === true && neu === true && <View style={tailwind(\"items-center\")}><FormInput placeholder=\"Autre\" onChangeText={handleChangeAUtreNeu} /></View>}\n                <FormButton title=\"Examen cardiovasculaire\" onPress={() => setCard(!card)}/>\n                {\n                    card === true &&\n                    <View>\n                        <FormCheckBox text=\"Assourdissement des bruits du coeur\" value={false} onPress={handleExamenCarChange} />\n                        <FormCheckBox text=\"Rythme cardiaque irrégulier\" value={false} onPress={handleExamenCarChange} />\n                        <FormCheckBox text=\"Souffre cardiaque si oui\" value={false} onPress={handleExamenCarChange} />\n                        <FormCheckBox text=\"Froideur des extrémités\" value={false} onPress={handleExamenCarChange} />\n                        <FormCheckBox text=\"Marbures aux genoux /generalisées\" value={false} onPress={handleExamenCarChange} />\n                        <FormCheckBox text=\"Autre\" value={false} onPress={handleExamenCarChange} />\n                    </View>\n\n                }\n                {autreCar === true && card === true && <View style={tailwind(\"items-center\")}><FormInput placeholder=\"Autre\" onChangeText={handleChangeAutreCar} /></View>}\n                <FormButton title=\"Autres éléments de l'examen physique\" onPress={() => setAut(!aut)}/>\n                {aut && <View style={tailwind(\"items-center\")}><FormInput placeholder=\"Précisier\" onChangeText={handleAutreChange} /></View>}\n\n            </View>\n            <View style={tailwind(\"items-center\")}>\n                <View style={styles.row}>\n                <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"CaracCliniques1\") }} />\n                <FormButton title=\"Suivant\" onPress={handleSubmit} />\n                </View>\n                <FormButton title=\"Pass\" onPress={() => { props.navigation.navigate(\"ExamenRadioParaCli1\") }} />\n\n            </View>\n        </View>\n        </Container>\n      <Steps current={7} /> \n</View>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n    );\n    \n};\nconst styles = StyleSheet.create({\n    row: {\n        flex: 1,\n        flexDirection: \"row\",\n        padding: 10\n    },\n    body: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#2193b0',\n    },\n});\nconst mapStateToProps = (state) => ({\n    patientList: state.medicalService.patientList,\n});\nconst mapActionToProps = {\n    login: actions.login,\n    logout: actions.logout,\n    addExamCli: actions.addExamCli\n};\nexport default connect(mapStateToProps, mapActionToProps)(ExamenCliniques);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic1/exposition1.js",["510","511","512","513","514","515","516","517","518","519","520","521"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport FormInput from '../../Form/FormInput';\nimport FormButton from '../../Form/FormButton';\nimport { medicalService } from '../../../Reducers/medicalService';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nimport Steps from \"../../Form/Steps\";\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\nconst Exposition = (props) => {\n\n  var handleTypeSdate = (data) => {\n    setDateD(data.target.value)     \n       }\n           var handleTypeSdate1 = (data) => {\n            setDateF(data.target.value)     \n               }\n               var handleTypeSdate2 = (data) => {\n                setDateEnt(data.target.value)     \n                   }\n                   var handleTypeSdate3 = (data) => {\n                    setDateV1(data.target.value)     \n                       }\n                       var handleTypeSdate4 = (data) => {\n                        setDateV2(data.target.value)     \n                           }\n                           var handleTypeSdate5 = (data) => {\n                            setDateDebutC(data.target.value)     \n                               }\n                               var handleTypeSdate6 = (data) => {\n                                setDateFinC(data.target.value)     \n                                   }\n                                   var handleTypeSdate7 = (data) => {\n                                    setDateDQu(data.target.value)     \n                                       }\n                                       var handleTypeSdate8 = (data) => {\n                                        setDateFQu(data.target.value)     \n                                           }\n\n  //component test variable\n  const [sejour, setSejour] = useState(false)\n  const [arivee, setArivee] = useState(false)\n  const [parcours, setParcours] = useState(false)\n  const [etroit, setEtoit] = useState(false)\n  const [autres, setAutres] = useState(false)\n  const [quarantine, setQurarantine] = useState(false)\n  //checkbox variable\n  const [contactC, setContactC] = useState(\"Oui\")\n  const [autreBox, setAutreBox] = useState(\"Oui\")\n  const [miseQuarantine, setMiseQuarantine] = useState(\"Oui\")\n\n  //values\n  //Sejour /Transit component\n  const [habite, setHabite] = useState(true)\n  const [dateD, setDateD] = useState()\n  const [dateF, setDateF] = useState()\n  const [villes, setVilles] = useState()\n  //arivee en tunisie\n  const [dateEnt, setDateEnt] = useState()\n  const [lieuEnt, setLieuEnt] = useState()\n  const [moyensTran, setMoyensTran] = useState()\n  //parcours en Tunise\n  const [villesPar, setVillesPar] = useState()\n  const [dateV1, setDateV1] = useState()\n  const [moyenTranV1, setMoyenTranV1] = useState()\n  const [dateV2, setDateV2] = useState()\n  const [moyenTranV2, setMoyenTranV2] = useState()\n  const [moyenTranQu, setMoyenTranQu] = useState()\n  //contact etroit\n  const [idTun, setIdTun] = useState(0)\n  const [dateDebutC, setDateDebutC] = useState()\n  const [dateFinC, setDateFinC] = useState()\n  //Autres criteres ayant conduit\n\n  const [details, setDetails] = useState()\n  //mise en quarantine\n  const [dateDQu, setDateDQu] = useState()\n  const [dateFDQu, setDateFQu] = useState()\n  const [respect, setRespect] = useState(true)\n\n  //values handleChange functions\n  //sejour/transit values\n  var habiteHandleChange = (data) => {\n    if (data.target.value===\"Oui\")\n      setHabite(true)\n    if (data.target.value===\"Non\")\n      setHabite(false)\n  }\n  var handleVillesChange = (text) => {\n    setVilles(text)\n  }\n  //arrivee values\n  var handleLieuEnt = (text) => {\n    setLieuEnt(text)\n  }\n  var handletMoyensTran = (text) => {\n    setMoyensTran(text)\n  }\n  //parcours en Tunisie\n  var handleVillesPar = (text) => {\n    setVillesPar(text)\n  }\n  var handleMoyenTranV1 = (text) => {\n    setMoyenTranV1(text)\n  }\n  var handleMoyenTranV2 = (text) => {\n    setMoyenTranV2(text)\n  }\n  var handleMoyenTranQu = (text) => {\n    setMoyenTranQu(text)\n  }\n  //contact etroit\n  var handleIdTun = (text) => {\n    setIdTun(text)\n  }\n  //AUtres criteres\n\n  var handleDetailsChange = (text) => {\n    setDetails(text)\n  }\n  //Mise en quarantine\n  var handleRespectChange = (data) => {\n    if (data.target.value==\"Oui\")\n      setRespect(true)\n    else setRespect(false)\n  }\n\n  var handleSejourChange = () => {\n    setSejour(!sejour)\n  }\n  var handleAriveeChange = () => {\n    setArivee(!arivee)\n  }\n  var handleParousChange = () => {\n    setParcours(!parcours)\n  }\n  var handleEtroitChange = () => {\n    setEtoit(!etroit)\n  }\n  var handleAutresChange = () => {\n    setAutres(!autres)\n  }\n  var handleQuarantineChange = () => {\n    setQurarantine(!quarantine)\n  }\n  var handleContactCChange = (data) => {\n      setContactC(data.target.value)\n  }\n  var handleAutreBoxChange = (data) => {\n      setAutreBox(data.target.value)\n  }\n  var handleMiseQuarantineChange = (data) => {\n    if (data.target.value===\"Oui\")\n      setMiseQuarantine(\"Oui\")\n    else setMiseQuarantine(\"Non\")\n  }\n\n  //submit function\n  var handleSubmit = (e) => {\n    e.preventDefault()\n    var values = {\n      //Sejour /transit\n      habite: habite,\n      dateD: dateD,\n      dateF: dateF,\n      villes: villes,\n      // Arivee\n      dateEnt: dateEnt,\n      lieuEnt: lieuEnt,\n      moyensTran: moyensTran,\n      // parcours en tunisie\n      villesPar: villesPar,\n      dateV1: dateV1,\n      dateV2: dateV2,\n      moyenTranV1: moyenTranV1,\n      moyenTranV2: moyenTranV2,\n      moyenTranQu: moyenTranQu,\n\n      //contact etroit\n      contact: contactC,\n      idTun: idTun,\n      dateDebutC: dateDebutC,\n      dateFinC: dateFinC,\n\n      //autre critere\n      autre: autreBox,\n      details: details,\n\n      //mise en quarantine\n      dateDQu: dateDQu,\n      dateFDQu: dateFDQu,\n      respect: respect\n\n\n    }\n    console.log(values)\n\n    props.addExposition(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux1\")\n  }\n  return (\n    <div>\n<div class=\"big\">\n<View style={styles.row}>s\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n\n\n\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl ')}>Expositions à Risque </Text>\n        <Text style={tailwind('text-gray-700 font-bold py-2 ')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n\n\n        <View style={tailwind(' items-center ')}>\n          <FormButton title=\"Séjour ou transit dans une zone a risque\" onPress={handleSejourChange}/>\n          {sejour == true && <View style={tailwind('items-center ')}>\n          <Text style={tailwind('text-gray-700 py-2')}>Réside habituellement dans la zone a risque  ?</Text>\n          <div>\n          <input  onChange={habiteHandleChange} type=\"radio\" value=\"Oui\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n          <input  onChange={habiteHandleChange} type=\"radio\" value=\"Non\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n          <input  onChange={habiteHandleChange} type=\"radio\" value=\"row\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>row</Text>\n        </div>\n            <Text>Séjour ou transit dans zone risque ?</Text>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Du ?</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Au ?</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate1}/>\n            \n          </View>\n          }\n          <FormButton title=\"Arivée sur le territoire tunisien\" onPress={handleAriveeChange}/>\n          {arivee == true && <View style={tailwind(\"items-center\")}>\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date d'arrivée en Tunisie?</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate2}/>\n          \n            <FormInput placeholder=\"Lieu d'entrée\" onChangeText={handleLieuEnt} />\n            <FormInput placeholder=\"Moyen de transport\" onChangeText={handletMoyensTran} />\n          </View>}\n          <FormButton title=\"Parcours en Tunisie\" onPress={handleParousChange}/>\n          {(parcours == true) && <View style={tailwind(\"items-center\")}>\n            <FormInput placeholder=\"Villes visités en Tunisie\" onChangeText={handleVillesPar} />\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date d'arrivée ville 1</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate3}/>\n            \n            <FormInput placeholder=\"Moyens de transport\" onChangeText={handleMoyenTranV1} />\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date d'arrivée ville 2</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate4}/>\n            \n            <FormInput placeholder=\"Moyens de transport\" onChangeText={handleMoyenTranV2} />\n            <FormInput placeholder=\"Moyen de transport quotidien\" onChangeText={handleMoyenTranQu} />\n\n          </View>}\n          <FormButton title=\"Contact étroit\" onPress={handleEtroitChange}/>\n          {\n            (etroit == true) && (<View style={tailwind(\"items-center\")}>\n        <div>\n\t         <Text style={tailwind('text-gray-700 py-2')}>Contact avec un cas confirmé ou suspect ?</Text>\n          <input  onChange={handleContactCChange} type=\"radio\" value=\"Oui\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n          <input  onChange={handleContactCChange} type=\"radio\" value=\"Non\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n          <input  onChange={handleContactCChange} type=\"radio\" value=\"Ne sait pas\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Ne sait pas</Text>\n          <input  onChange={handleContactCChange} type=\"radio\" value=\"row\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>row</Text>\n        </div>\n            </View>\n            )}\n          {(contactC === \"Oui\" && etroit == true) && (<View style={tailwind(\"items-center\")}>\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Du ?</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate5}/>\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Au ?</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate6}/>\n\n            <FormInput placeholder=\"Identifiant en Tunisie\" type=\"number-pad\" onChangeText={handleIdTun} />\n          </View>)}\n\n          <FormButton title=\"Autres critères ayant conduit au classement en cas possible\" onPress={handleAutresChange}/>\n          {(autres == true) && <View style={tailwind(\"items-center\")}>\n          <div>\n             <Text style={tailwind('text-gray-700 py-2')}>Contact avec un cas confirmé ou suspect ?</Text>\n            <input  onChange={handleAutreBoxChange} type=\"radio\" value=\"Oui\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n            <input  onChange={handleAutreBoxChange} type=\"radio\" value=\"Non\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n            <input  onChange={handleAutreBoxChange} type=\"radio\" value=\"NSP\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>NSP</Text>\n            <input  onChange={handleAutreBoxChange} type=\"radio\" value=\"row\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>row</Text>\n          </div>\n            {autreBox === \"Oui\" && <FormInput placeholder=\"Précisier\" onChangeText={handleDetailsChange} />}\n\n\n          </View>}\n          <FormButton title=\"Mise en quarantine\" onPress={handleQuarantineChange}/>\n          {(quarantine == true) && <View style={tailwind(\"items-center\")}>\n          <div>\n             <Text style={tailwind('text-gray-700 py-2')}>Mise en quarantine ?</Text>\n            <input  onChange={handleMiseQuarantineChange} type=\"radio\" value=\"Oui\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n            <input  onChange={handleMiseQuarantineChange} type=\"radio\" value=\"Non\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n            <input  onChange={handleMiseQuarantineChange} type=\"radio\" value=\"row\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>row</Text>\n          </div>\n            <Text style={tailwind('text-gray-700 py-2')}>  Mise en quarantine ?</Text>\n          </View>}\n          {(quarantine == true && miseQuarantine === \"Oui\") && <View style={tailwind('items-center')}>\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}></Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate7}/>\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}></Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate8}/>\n          \n          <div>\n             <Text style={tailwind('text-gray-700 py-2')}>Respect de la quarantine ?</Text>\n            <input  onChange={handleRespectChange} type=\"radio\" value=\"Oui\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n            <input  onChange={handleRespectChange} type=\"radio\" value=\"Non\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n            <input  onChange={handleRespectChange} type=\"radio\" value=\"row\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>row</Text>\n          </div>\n          </View>}\n\n\n\n\n          <View style={tailwind(\"items-center\")}>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddPatient\") }} />\n          <FormButton title=\"Suivant\" onPress={handleSubmit} />\n        </View>\n        <FormButton title=\"Pass\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux1\") }} />\n\n      </View>\n</View>\n      </View>\n      </Container>\n      <Steps current={2} /> \n</View>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  //loggedUser: state.medicalService.loggedUser,\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n  //login: actions.login,\n  addExposition: actions.addExposition\n};\nexport default connect(mapStateToProps, mapActionToProps)(Exposition);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/ATCDchir1.js",["522"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\nconst ATCDchir1 = (props) => {\n\n  const [ATCD, setATCD] = useState(\"\");\n\n\n  var handleATCDChange = (text) => {\n    setATCD(text)\n  }\n\n\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"ATCDchir\",\n      atcd: ATCD\n    }\n    e.preventDefault();\n    console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux1\")\n  }\n\n\n\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>ATCD chirurgicaux</Text>\n\n        <FormInput placeholder=\"ATCD chirurgicaux\" onChangeText={handleATCDChange} />\n\n\n\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux1\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n\n        </View>\n      </View>\n      </Container>\n      </div>\n      <ParticlesBg type=\"cobweb\" config={config} bg={true} />\n      </div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(ATCDchir1);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/avc1.js",["523"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\nconst AVC1 = (props) => {\n\n  const [anciennete, setAnciennete] = useState(0.0);\n  const [traitement, setTraitement] = useState(0);\n  const [episode_1, setEpisode_1] = useState(true)\n  const [episode_x, setEpisode_x] = useState(false)\n  const [handicap, setHandicap] = useState(\"mineur\")\n\n  var handleHandicapChange = (data) => {\n      setHandicap(data.target.value)\n  }\n\n  var handleAnciennteChange = (text) => {\n    setAnciennete(text)\n  }\n  var handleTraitementChange = (text) => {\n    setTraitement(text)\n  }\n  var handleAvcChange = (data) => {\n    if (data.target.value===\"1\") {\n      setEpisode_1(true);\n      setEpisode_x(false);\n    }\n    else if (data.target.value===\"2\") {\n      setEpisode_1(false);\n      setEpisode_x(true)\n    }\n  }\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"AVC\",\n      anciennete: anciennete,\n      traitement: traitement,\n      episode_1: episode_1,\n      getEpisode_x: episode_x,\n      handicap: handicap\n    }\n    e.preventDefault();\n    console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux1\")\n  }\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>AVC</Text>\n        <View style={styles.row}>\n                <div>\n                <Text style={tailwind('text-gray-700 py-2')}>  AVC?</Text>\n                  <input  onChange={handleAvcChange} type=\"radio\" value=\"1\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Un seul episode</Text>\n                  <input  onChange={handleAvcChange} type=\"radio\" value=\"2\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Plusieurs episodes</Text>\n                </div>\n        </View>\n        <FormInput title=\"Ancienneté\" placeholder=\"Ancienneté\" onChangeText={handleAnciennteChange} type=\"decimal-pad\" />\n        <FormInput title=\"Traitement\" placeholder=\"Traitement\" onChangeText={handleTraitementChange} />\n        <View style={styles.row}>\n                <div>\n                <Text style={tailwind('text-gray-700 py-2')}>Handicap?</Text>\n                  <input  onChange={handleHandicapChange} type=\"radio\" value=\"mineur\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Mineur</Text>\n                  <input  onChange={handleHandicapChange} type=\"radio\" value=\"moyen\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Moyen</Text>\n                  <input  onChange={handleHandicapChange} type=\"radio\" value=\"majeur\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Majeur</Text>\n                </div>\n              </View>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux1\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(AVC1);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/cardiopathies1.js",["524"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport {View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\nconst Cardiopathies1 = (props) => {\n\n  const [anciennete, setAnciennete] = useState(0.0);\n  const [traitement, setTraitement] = useState(0);\n  const [equilibre, setEquilibre] = useState(true);\n\n  var handleAnciennteChange = (text) => {\n    setAnciennete(text)\n  }\n  var handleTraitementChange = (text) => {\n    setTraitement(text)\n  }\n  var handleEquilibreChange = (data) => {\n      setEquilibre(data.target.value)\n  }\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"Cardiopathies\",\n      anciennete: anciennete,\n      traitement: traitement,\n      equilibre: equilibre\n    }\n    e.preventDefault();\n    //console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux1\")\n  }\n\n\n\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Cardiopathies</Text>\n\n        <FormInput title=\"Ancienneté\" placeholder=\"Ancienneté\" onChangeText={handleAnciennteChange} type=\"decimal-pad\" />\n        <FormInput title=\"Traitement\" placeholder=\"Traitement\" onChangeText={handleTraitementChange} />\n\n        <View style={styles.row}>\n        <div  onChange={handleEquilibreChange}>\n        <Text style={tailwind('text-gray-700 py-2')}>Equilibré?</Text>\n        <input type=\"radio\" value=\"true\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n        <input type=\"radio\" value=\"false\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n      </div>\n\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux1\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n\n        </View>\n\n\n</View>\n      </View>\n      </Container>\n      </div>\n      <ParticlesBg type=\"cobweb\" config={config} bg={true} />\n      </div>\n  );\n};\n\nconst styles = StyleSheet.create({\n\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Cardiopathies1);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/insRenaleChro1.js",["525"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\nconst InsRenaleChro1 = (props) => {\n\n  const [anciennete, setAnciennete] = useState(0.0);\n  const [traitement, setTraitement] = useState(0);\n  const [hemodialyse, setHemodialyse] = useState(true);\n\n  var handleAnciennteChange = (text) => {\n    setAnciennete(text)\n  }\n  var handleTraitementChange = (text) => {\n    setTraitement(text)\n  }\n  var handleHemodialyseChange = (data) => {\n      setHemodialyse(data.target.value)\n  }\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"InsRenaleChro\",\n      anciennete: anciennete,\n      traitement: traitement,\n      hemodialyse: hemodialyse\n    }\n    e.preventDefault();\n    //console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux1\")\n  }\n\n\n\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Insuffisance rénale chronique</Text>\n\n        <FormInput title=\"Ancienneté\" placeholder=\"Ancienneté\" onChangeText={handleAnciennteChange} type=\"decimal-pad\" />\n        <FormInput title=\"Traitement\" placeholder=\"Traitement\" onChangeText={handleTraitementChange} />\n        <View style={styles.row}>\n        <div  onChange={handleHemodialyseChange}>\n        <Text style={tailwind('text-gray-700 py-2')}>Hémodialyse?</Text>\n          <input type=\"radio\" value={true} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n          <input type=\"radio\" value={false} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n        </div>\n        </View>\n\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux1\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(InsRenaleChro1);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/pathRespChronique1.js",["526"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport {View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\nconst PathRespChronique1 = (props) => {\n  const [anciennete, setAnciennete] = useState(0.0);\n  const [traitement, setTraitement] = useState(0);\n  const [equilibre, setEquilibre] = useState(true);\n  var handleAnciennteChange = (text) => {\n    setAnciennete(text)\n  }\n  var handleTraitementChange = (text) => {\n    setTraitement(text)\n  }\n  var handleEquilibreChange = (data) => {\n      setEquilibre(data.target.value)\n  }\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"PathResChronique\",\n      anciennete: anciennete,\n      traitement: traitement,\n      equilibre: equilibre\n    }\n    e.preventDefault();\n    //console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux1\")\n  }\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Pathologie Respiratoire chroniques</Text>\n\n        <FormInput title=\"Ancienneté\" placeholder=\"Ancienneté\" onChangeText={handleAnciennteChange} type=\"decimal-pad\" />\n        <FormInput title=\"Traitement\" placeholder=\"Traitement\" onChangeText={handleTraitementChange} />\n        <View style={styles.row}>\n        <div  onChange={handleEquilibreChange}>\n        <Text style={tailwind('text-gray-700 py-2')}>Equilibré?</Text>\n          <input type=\"radio\" value={true} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n          <input type=\"radio\" value={false} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n        </div>\n        </View>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux1\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\nconst styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n});\nexport default connect(mapStateToProps, mapActionToProps)(PathRespChronique1);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/retinopathie1.js",["527"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n//import 'localstorage-polyfill';\n\n\n\n\nconst Retinopathie1 = (props) => {\n\n  const [anciennete, setAnciennete] = useState(0.0);\n  const [traitement, setTraitement] = useState(0);\n\n\n  var handleAnciennteChange = (text) => {\n    setAnciennete(text)\n  }\n  var handleTraitementChange = (text) => {\n    setTraitement(text)\n  }\n\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"Retinopathie\",\n      anciennete: anciennete,\n      traitement: traitement,\n\n    }\n    e.preventDefault();\n    //console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux1\")\n  }\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Retinopathie</Text>\n        <FormInput title=\"Ancienneté\" placeholder=\"Ancienneté\" onChangeText={handleAnciennteChange} type=\"decimal-pad\" />\n        <FormInput title=\"Traitement\" placeholder=\"Traitement\" onChangeText={handleTraitementChange} />\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux1\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\nconst styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n});\nexport default connect(mapStateToProps, mapActionToProps)(Retinopathie1);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux1/trRythCardiaque1.js",["528"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\nconst TrRythCardiaque1 = (props) => {\n\n  const [anciennete, setAnciennete] = useState(0.0);\n  const [traitement, setTraitement] = useState(0);\n  const [equilibre, setEquilibre] = useState(true);\n\n  var handleAnciennteChange = (text) => {\n    setAnciennete(text)\n  }\n  var handleTraitementChange = (text) => {\n    setTraitement(text)\n  }\n  var handleEquilibreChange = (data) => {\n      setEquilibre(data.target.value)\n  }\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"TrRythCardiaque\",\n      anciennete: anciennete,\n      traitement: traitement,\n      equilibre: equilibre\n    }\n    e.preventDefault();\n    //console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux1\")\n  }\n\n\n\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Trouble du rythme cardiaque</Text>\n\n        <FormInput title=\"Ancienneté\" placeholder=\"Ancienneté\" onChangeText={handleAnciennteChange} type=\"decimal-pad\" />\n        <FormInput title=\"Traitement\" placeholder=\"Traitement\" onChangeText={handleTraitementChange} />\n        <View style={styles.row}>\n        <div  onChange={handleEquilibreChange}>\n        <Text style={tailwind('text-gray-700 py-2')}>Equilibré?</Text>\n          <input type=\"radio\" value={true} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n          <input type=\"radio\" value={false} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n        </div>\n        </View>\n\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux1\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\nconst styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n});\nexport default connect(mapStateToProps, mapActionToProps)(TrRythCardiaque1);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/save/searchPatient1.js",["529","530"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nimport Steps from \"../../Form/Steps\";\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\nconst SearchPatient1 = (props) => {\n  useEffect(() => {\n    props.search(search)\n  }, [])\n\n\n  const [search, setSearch] = useState(0)\n  const [search2, setSearch2] = useState(0)\n\n  const handleSearchChange = (text) => {\n    setSearch(text)\n    //console.log(search)\n  }\n  const handleSearch = () => {\n    setSearch2(search)\n    console.log(search)\n    props.search(search)\n\n\n  }\n  return (\n    <div>\n    <div class=\"big\">\n    <View style={styles.row}>\n    <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Rechercher un patient</Text>\n        <View style={tailwind('py-8 items-center')}>\n\n          <FormInput\n            placeholder=\"Search...Type CIN\"\n            type=\"number-pad\"\n            onChangeText={handleSearchChange}\n            maxLength={Number(\"8\")}\n          />\n\n\n          <FormButton title=\"Rechercher\" onPress={handleSearch} />\n          <View style={tailwind('py-8 items-center')}>\n            <Text style={tailwind(\"text-red-500\")}>\n              {(search2 != 0) && ((typeof (props.patientList) === 'string' && props.patientList) ||\n                (\n                  <View style={tailwind('items-center')}>\n                  <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>identifiant:{props.patientList[\"generalInformation\"][\"identifiant\"]}</Text>\n                  <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>patient:{props.patientList[\"generalInformation\"][\"patient\"]}</Text>\n                  <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Nom:{props.patientList[\"generalInformation\"][\"nom\"]}</Text>\n                  <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>prenom:{props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n                    <FormButton title=\"Suivant\" onPress={() => { props.navigation.navigate(\"Exposition1\") }} />\n                  </View>\n\n\n\n                ))}\n\n            </Text>\n\n          </View>\n\n\n\n\n        </View>\n\n        <View style={styles.row}>\n          <FormButton title=\"Ajouter un patient\" onPress={() => { props.navigation.navigate(\"AddPatient\"); }} />\n          <FormButton title=\"Annuler\" onPress={() => { props.navigation.navigate(\"Home\"); }} />\n        </View>\n      </View>\n      </Container>\n      <Steps current={1} /> \n</View>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  search: actions.searchPatient\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\n\nexport default connect(mapStateToProps, mapActionToProps)(SearchPatient1);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/save/habitudesDeVie1.js",["531"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\n//import 'localstorage-polyfill';\nimport FormInput from '../../Form/FormInput';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nimport Steps from \"../../Form/Steps\";\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\nconst HabitudesDeVie1 = (props) => {\n    useEffect(() => {\n    })\n    const [tabagisme, setTabagisme] = useState(false)\n    const [nbCigarettes, setNbCigarettes] = useState(0)\n    const [freqChicha, setFreqChicha] = useState(0)\n    const [drogue, setDrogue] = useState(false)\n    const [alcool, setAlcool] = useState(false)\n    const [gs, setGs] = useState(0)\n    const [poids, setPoids] = useState(0)\n    const [taille, setTaille] = useState(0)\n\n\n    var handleAlcoolChange = (data) => {\n      if (data.target.value===\"Oui\")\n        setAlcool(true)\n      if (data.target.value===\"Non\")\n        setAlcool(false)\n    }\n    var handleDrogueChange = (data) => {\n      if (data.target.value===\"Oui\")\n        setDrogue(true)\n      if (data.target.value===\"Non\")\n        setDrogue(false)\n    }\n    var handleTabagismeChange = (data) => {\n      if (data.target.value===\"Oui\")\n        setTabagisme(true)\n      if (data.target.value===\"Non\")\n        setTabagisme(false)\n    }\n    var handleNbCigarettesChange = (data) => {\n        setNbCigarettes(data)\n    }\n    var handleFreqChichaChange = (data) => {\n        setFreqChicha(data)\n    }\n    var handleGsChange = (data) => {\n        setGs(data)\n    }\n    var handlePoidsChange = (data) => {\n        setPoids(data)\n    }\n    var handleTailleChange = (data) => {\n        setTaille(data)\n    }\n    var handleSubmit = (e) => {\n        var values = {\n            poids: poids,\n            taille: taille,\n            gs: gs,\n            alcool: alcool,\n            drogue: drogue,\n            nbCigarettes: nbCigarettes,\n            freqChicha: freqChicha\n        }\n        console.log(values)\n        e.preventDefault();\n        props.habitudesDeViePatient(props.patientList[\"cin\"], values)\n        props.navigation.navigate(\"ConfirmationDiag1\")\n    }\n\n    return (\n      <div>\n      <div class=\"big\">\n      <View style={styles.row}>\n      <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n            <View style={tailwind(' items-center ')} >\n\n                <View style={styles.row}>\n                   <View style={styles.row}>\n                   <div  >\n                    <Text style={tailwind('text-gray-700 py-2')}>Tabagisme ?</Text>\n                    <input onChange={handleTabagismeChange} type=\"radio\" value=\"Non\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n                    <input onChange={handleTabagismeChange} type=\"radio\" value=\"Oui\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n                   </div>\n                </View>\n                </View>\n\n                <View>{tabagisme == true && (\n                  <View style={tailwind(\"items-center\")}>\n\n                            <FormInput placeholder=\"Nombre de cigarettes/jour\"\n                                type=\"number-pad\"\n                                onChangeText={handleNbCigarettesChange}\n                            />\n\n\n                            <FormInput placeholder=\"Frequence de Chicha/semaine\"\n                                type=\"number-pad\"\n                                onChangeText={handleFreqChichaChange}\n                            />\n                        </View>\n\n                    )}\n\n                </View>\n                <View style={styles.row}>\n                    <div  >\n                    <Text style={tailwind('text-gray-700 py-2')}>Drogues/cannabis ?</Text>\n                      <input onChange={handleDrogueChange} type=\"radio\" value=\"Non\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n                      <input onChange={handleDrogueChange} type=\"radio\" value=\"Oui\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n                    </div>\n\n\n                </View>\n                <View style={styles.row}>\n\n\n                    <div  >\n                    <Text style={tailwind('text-gray-700 py-2')}>Alcool ?</Text>\n                      <input onChange={handleAlcoolChange} type=\"radio\" value=\"Non\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n                      <input onChange={handleAlcoolChange} type=\"radio\" value=\"Oui\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n                    </div>\n\n\n                </View>\n                <FormInput placeholder=\"Poids\"\n                    onChangeText={handlePoidsChange} />\n                <FormInput placeholder=\"Taille\"\n                    onChangeText={handleTailleChange} />\n                <FormInput placeholder=\"GS\"\n                    onChangeText={handleGsChange} />\n                <View style={styles.row}>\n                    <FormButton title=\"Annuler\" onPress={() => { props.navigation.navigate(\"HabitudesDeVie1\") }} />\n                    <FormButton title=\"Suivant\" onPress={handleSubmit} />\n                </View>\n                <FormButton title=\"Pass\" onPress={() => { props.navigation.navigate(\"ConfirmationDiag1\") }} />\n            </View>\n            </Container>\n            <Steps current={3} /> \n</View>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n    );\n};\n\nconst styles = StyleSheet.create({\n    row: {\n        flex: 1,\n        flexDirection: \"row\",\n        padding: 10\n    },\n    body: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#2193b0',\n    },\n});\n\nconst mapStateToProps = (state) => ({\n    patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n    habitudesDeViePatient: actions.habitudesDeViePatient\n\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(HabitudesDeVie1);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/save/addAntecedentsMedicaux1.js",["532","533"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nimport Steps from \"../../Form/Steps\";\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\nconst AddAntecendentsMedicaux1 = (props) => {\n  const [nextPath, setNextPath] = useState(\"PathRespChronique\")\n\n  var handleAntecedentChange = (data) => {\n      setNextPath(data.target.value)\n  }\n  return (\n    <div>\n<div class=\"big\">\n<View style={styles.row}>\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Antécédents medicaux</Text>\n\n\n        <View style={tailwind(\"py-8\")} >\n        <div  onChange={handleAntecedentChange}>\n      <div>  <input type=\"radio\" value=\"PathRespChronique1\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Pathologie respiratoire chronique ?</Text></div>\n      <div>  <input type=\"radio\" value=\"Cardiopathies1\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Cardiopathies ?</Text></div>\n      <div>  <input type=\"radio\" value=\"TrRythCardiaque1\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Trouble du rythme cardiaque ?</Text></div>\n      <div>  <input type=\"radio\" value=\"HTA1\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>HTA ?</Text></div>\n      <div>  <input type=\"radio\" value=\"Diabete1\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Diabète ?</Text> </div>\n      <div>   <input type=\"radio\" value=\"InsRenaleChro1\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Insuffisance rénale chronique ?</Text></div>\n      <div>   <input type=\"radio\" value=\"AVC1\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>AVC ? </Text></div>\n      <div>   <input type=\"radio\" value=\"Retinopathie1\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Rétinopathie ?</Text></div>\n      <div>   <input type=\"radio\" value=\"ATCDchir1\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>ATCD chirugicaux ?</Text></div>\n      <div>   <input type=\"radio\" value=\"Grossesse1\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Grossesse en cours ?</Text></div>\n      <div>   <input type=\"radio\" value=\"PriseAINS1\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Prise récente d'AINS ?</Text></div>\n      <div>   <input type=\"radio\" value=\"Immunosuppreseur1\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Traitement immunosuppresseur ?</Text></div>\n      <div>   <input type=\"radio\" value=\"AutresATCD1\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Autres ATCD ?</Text></div>\n      </div>\n        </View>\n\n\n        <View style={styles.row}>\n          <FormButton title=\"Retour1\" onPress={() => { props.navigation.navigate(\"Exposition1\") }} />\n          <FormButton title=\"Suivant\" onPress={() => { props.navigation.navigate(nextPath) }} />\n        </View>\n        <FormButton title=\"Pass\" onPress={() => { props.navigation.navigate(\"HabitudesDeVie1\") }} />\n      </View>\n      </Container>\n      <Steps current={2} /> \n</View>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(AddAntecendentsMedicaux1);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/App.js",[],"/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/reportWebVitals.js",[],"/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/admission.js",["534","535","536"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport FormInput from '../../Form/FormInput';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\nconst Admission = (props) => {\n  const [type, setType] = useState(\"hhop\")\n  const [lieu, setLieu] = useState(\"chez lui\")\n  const [lieuCB, setLieuCB] = useState(\"lui\")\n  const [dateEnt, setDateEnt] = useState()\n  const [mode, setMode] = useState(\"transfert inter-hopital\")\n  const [modeCB, setModeCB] = useState(\"transfert\")\n  const [hopital, setHopital] = useState()\n  const [service, setService] = useState()\n\n  var handleTypeSdate = (data) => {\n    setDateEnt(data.target.value)\n       }\n  var handleModeCB = (data) => {\n    \n         \n    if (data.target.value===\"0\") {\n      setMode(\"Transfert inter-hopital\")\n      setModeCB(\"Transfert inter-hopital\")\n    }\n    if (data.target.value===\"1\") {\n      setMode(\"Transfert inter-service\")\n      setModeCB(\"Transfert inter-service\")\n    }\n    if (data.target.value===\"2\") {\n      setMode(\"Urgences\")\n      setModeCB(\"Urgences\")\n    }\n    if (data.target.value===\"3\") {\n      setMode(\"SAMU\")\n      setModeCB(\"SAMU\")\n    }\n    if (data.target.value===\"4\") {\n      setMode(\"D'un lieu d'isolement(Chez lui ou centre)\")\n      setModeCB(\"D'un lieu d'isolement(Chez lui ou centre)\")\n    }\n    if (data.target.value===\"5\") {\n      //setMode(data[5].label)\n      setModeCB(\"Autre\")\n    }\n  }\n  var handleTypeChange = (data) => {\n      setType(data.target.value)\n  }\n  var handleLieuCB = (data) => {\n    if (data.target.value===\"0\") {\n      setLieu(\"chez lui\")\n        setLieuCB(\"lui\")\n    }\n    if (data.target.value===\"1\") {\n      setLieuCB(\"centre\")\n    }\n    if (data.target.value===\"2\")\n      setLieuCB(\"autre\")\n\n  }\n  var handleLieuChange = (text) => {\n    setLieu(text)\n  }\n  var handleHopitalChange = (text) => {\n    setHopital(text)\n  }\n  var handleServiceChange = (text) => {\n    setService(text)\n  }\n  var handleModeChange = (text) => {\n    setMode(text)\n  }\n\n  var handleSubmit = (e) => {\n    e.preventDefault();\n    var values = {\n      type: type,\n      lieu: lieu,\n      hopital: hopital,\n      service: service,\n      dateEnt: dateEnt,\n      mode: mode,\n\n    }\n    console.log(values)\n    console.log(props.patientList[\"cin\"])\n    props.addAdmission(props.patientList[\"cin\"], values)\n    //props.navigation.navigate(\"DiagnosticDetails\")\n\n  }\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n<View style={tailwind(\"items-center\")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Admission d'un cas confirmé COVID-19</Text>\n      <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n      <View style={styles.row}>\n        <div>\n\t  <Text style={tailwind('text-gray-700 py-2')}>Admission?</Text>\n          <input  onChange={handleTypeChange} type=\"radio\" value=\"hhop\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>En dehors de l'hopital</Text>\n          <input  onChange={handleTypeChange} type=\"radio\" value=\"hop\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>A l'hopital</Text>\n        </div>\n      </View>\n      {\n        type === \"hhop\" && <View style={tailwind(\"items-center\")}>\n        <View style={styles.row}>\n          <div>\n        <Text style={tailwind('text-gray-700 py-2')}>Précisier le lieu?</Text>\n            <input  onChange={handleLieuCB} type=\"radio\" value=\"0\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Chez lui</Text>\n            <input  onChange={handleLieuCB} type=\"radio\" value=\"1\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Dans un centre d'isolement</Text>\n            <input  onChange={handleLieuCB} type=\"radio\" value=\"2\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Autre</Text>\n          </div>\n\n        </View>\n          {lieuCB === \"autre\" && <FormInput placeholder=\"...\" onChangeText={handleLieuChange} />}\n          {lieuCB === \"centre\" && <FormInput placeholder=\"Préciser le quel\" onChangeText={handleLieuChange} />}\n            <View style={styles.row}>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date d'entée?</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n          </View>\n        </View>\n      }\n      {\n        type === \"hop\" && <View style={tailwind(\"items-center\")}>\n          <FormInput placeholder=\"Hopital\" onChangeText={handleHopitalChange} />\n          <FormInput placeholder=\"Service\" onChangeText={handleServiceChange} />\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date d'entée?</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n          <View style={styles.row}>\n        <div>\n\t  <Text style={tailwind('text-gray-700 py-2')}>Mode d'entrée?</Text>\n          <input  onChange={handleModeCB} type=\"radio\" value=\"0\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Transfert inter-hopital</Text>\n          <input  onChange={handleModeCB} type=\"radio\" value=\"1\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Transfert inter-service</Text>\n          <input  onChange={handleModeCB} type=\"radio\" value=\"2\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Urgences</Text>\n          <input  onChange={handleModeCB} type=\"radio\" value=\"3\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>SAMU</Text>\n          <input  onChange={handleModeCB} type=\"radio\" value=\"4\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>D'un lieu d'isolement(Chez lui ou centre)</Text>\n          <input  onChange={handleModeCB} type=\"radio\" value=\"5\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Autre</Text>\n        </div>\n      </View>\n          {modeCB === \"Autre\" && <FormInput placeholder=\"Précisier\" onChangeText={handleModeChange} />}\n\n\n        </View>\n      }\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  loggedUser: state.medicalService.loggedUser,\n  patientList: state.medicalService.patientList,\n\n});\nconst mapActionToProps = {\n  addAdmission: actions.addAdmission\n};\nexport default connect(mapStateToProps, mapActionToProps)(Admission);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Reducers/index.js",[],"/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Form/CheckBox.js",[],"/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Form/FormButton.js",["537"],"/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow strict-local\n */\n\nimport React from 'react';\n\n\nimport tailwind from 'tailwind-rn';\nimport { Button, TouchableOpacity, Text } from 'react-native';\n\n\nconst FormButton = (prpos) => {\n  return (\n\n    < >\n      <TouchableOpacity style={tailwind('bg-gray-900 px-3 py-3 mx-3 my-3  w-32 rounded-md')} onPress={prpos.onPress}>\n        <Text style={tailwind('text-white font-bold text-center')}>\n          {prpos.title}\n        </Text>\n      </TouchableOpacity>\n    </>\n  );\n};\n\n\n\n\nexport default FormButton;\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Form/FormInput.js",["538","539","540","541"],"import React from 'react';\n//import { TextInput } from 'react-native-paper';\n\nimport tailwind from 'tailwind-rn';\nimport { Button, TouchableOpacity, Text, View, TextInput, ShadowPropTypesIOS } from 'react-native';\n\n\nconst FormInput = (props) => {\n  return (\n\n    <>\n      <View style={tailwind('w-1/2 items-center')}>\n        <TextInput style={tailwind('border  border-gray-900 my-3  rounded-md w-64')}\n          selectTextOnFocus\n          placeholder={props.placeholder}\n          secureTextEntry={Boolean(props.isPassword)}\n          keyboardType={props.type}\n          editable={props.editable!==null}\n          maxLength={props.maxLength}\n          onChangeText={(text) => props.onChangeText(text)} />\n      </View>\n\n\n    </>\n  );\n};\n\nexport default FormInput;\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Form/FormInput2.js",[],"/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/CaracCliniques.js",["542"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from '../../Form/FormInput';\nimport FormButton from '../../Form/FormButton';\nimport CaracCls from \"../../Form/CaracCls\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\nconst CaracCliniques = (props) => {\n\n    const [sym, setSym] = useState(true)\n    const [dateD, setDateD] = useState()\n    const [dateF, setDateF] = useState()\n    const [temperature, setTemperature] = useState()\n    const [typeT, settypeT] = useState(\"Séche\")\n    const [selle, setSelle] = useState()\n    const [autre, setAutre] = useState()\n    const [nbEpisodes, setNbEpisodes] = useState()\n\n    //carac\n    const [fievre, setFievre] = useState(false)\n    const [toux, setToux] = useState(false)\n    const [cepah, setCeph] = useState(false)\n    const [asth, setAsth] = useState(false)\n    const [mya, setMya] = useState(false)\n    const [ody, setOdy] = useState(false)\n    const [rhi, setRhi] = useState(false)\n    const [ano, setAno] = useState(false)\n    const [agu, setAgu] = useState(false)\n    const [dia, setDia] = useState(false)\n    const [nau, setNau] = useState(false)\n    const [eru, setEru] = useState(false)\n    const [eng, setEng] = useState(false)\n    const [dou, setDou] = useState(false)\n    const [gen, setGen] = useState(false)\n    const [ess, setEss] = useState(false)\n    const [aut, setAut] = useState(false)\n\n\n    const [test, setTest] = useState(false)\n\n    var handleTemperatureChange = (text) => {\n        if (text < 32 || text > 43)\n            setTest(false)\n        else setTest(true)\n        setTemperature(text)\n    }\n    var handletypeT = (data) => {\n            settypeT(data.target.value)\n    }\n    var handleSelle = (text) => {\n        setSelle(text)\n    }\n    var handleAutre = (text) => {\n        setAutre(text)\n    }\n    var handleNbEpisodes = (text) => {\n        setNbEpisodes(text)\n    }\n    var handleSymChange = (data) => {\n    if (data.target.value===\"Oui\")\n        setSym(true)\n    else setSym(false)\n}\n    var handleSubmitCarac = (item) => {\n        if (test === false && item === \"Fievre\")\n            return;\n        var values = {\n            type: item,\n            typeT: typeT,\n            temperature: temperature,\n            selle: selle,\n            nbEpisodes: nbEpisodes,\n            autre: autre,\n            dateD: dateD,\n            dateF: dateF,\n            sym: sym\n\n        }\n        console.log(values)\n        props.addCaracCliniques(props.patientList[\"cin\"], values)\n\n    }\n\n\n\n    //functions\n\n\n\n\n    return (\n        <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n            <View style={tailwind(\"items-center\")}>\n            <View>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Caractéristiques cliniques du cas</Text>\n            <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n            <View style={tailwind(\"items-center\")}>\n            <div>\n            <Text style={tailwind('text-gray-700 py-2')}>Symptomatique ?</Text>\n              <input  onChange={handleSymChange} type=\"radio\" value=\"Oui\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n              <input  onChange={handleSymChange} type=\"radio\" value=\"Non\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n            </div>\n            </View>\n            {\n                sym === true &&\n                <View style={tailwind(\"items-center\")}>\n\n                    <FormButton title=\"Toux\" onPress={() => setFievre(!fievre)}>\n                        <Text >Fièvre</Text>\n                    </FormButton>\n                    {\n                        fievre === true && <View style={tailwind(\"items-center\")}>\n                            <Text style={tailwind(\"text-red-500\")}>{test === false && \"La temperature doit etre entre 36 et 43 °C\"}</Text>\n                            <FormInput placeholder=\"Si mesuré\" type=\"decimal-pad\" onChangeText={handleTemperatureChange} />\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Fievre\"); setFievre(!fievre) }} />\n                        </View>\n                    }\n                    <FormButton  title=\"Toux\" onPress={() => setToux(!toux)} />\n                    {\n                        toux === true && <View style={tailwind(\"items-center\")}>\n                        <View style={styles.row}>\n                                <div>\n                        \t  <Text style={tailwind('text-gray-700 py-2')}>Equilibré?</Text>\n                                  <input  onChange={handletypeT} type=\"radio\" value=\"Séche\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Séche</Text>\n                                  <input  onChange={handletypeT} type=\"radio\" value=\"Productive\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Productive</Text>\n                                </div>\n                              </View>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Toux\"); setToux(!toux) }} />\n                        </View>\n                    }\n                    <FormButton  title=\"Cépahlées\" onPress={() => setCeph(!cepah)}/>\n                    {\n                        cepah === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Cephalees\"); setCeph(!cepah) }} />\n                        </View>\n                    }\n                    <FormButton  title=\"Asthénie/fatigue\" onPress={() => setAsth(!asth)}/>\n                    {\n                        asth === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"AshthFat\"); setAsth(!asth) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Myalgies/courabatures\" onPress={() => setMya(!mya)}/>\n                    {\n                        mya === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"MyalCourba\"); setMya(!mya) }} />\n                        </View>\n                    }\n                    <FormButton  title=\"Odynophagie\" onPress={() => setOdy(!ody)}/>\n                    {\n                        ody === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Odynophagie\"); setOdy(!ody) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Rhinorrhée/Congestion nasale\" onPress={() => setRhi(!rhi)}/>\n                    {\n                        rhi === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"RhinoCongNas\"); setRhi(!rhi) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Anosmie\" onPress={() => setAno(!ano)}/>\n                    {\n                        ano === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Anosmie\"); setAno(!ano) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Agueusie\" onPress={() => setAgu(!agu)}/>\n                    {\n                        agu === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Agueusie\"); setAgu(!agu) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Diarrhée\" onPress={() => setDia(!dia)}/>\n                    {\n                        dia === true && <View style={tailwind(\"items-center\")}>\n                            <FormInput placeholder=\"Nb selles/jour\" onChangeText={handleSelle} maxLength={Number(\"2\")} type=\"number-pad\" />\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Diarrhee\"); setDia(!dia) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Nausée/voumissement\" onPress={() => setNau(!nau)}/>\n                    {\n                        nau === true && <View style={tailwind(\"items-center\")}>\n                            <FormInput placeholder=\"Nb episodes/jour\" onChangeText={handleNbEpisodes}  maxLength={Number(\"2\")} type=\"number-pad\"/>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"NauVoumi\"); setNau(!nau) }} />\n                        </View>\n                    }\n\n                    <FormButton title=\"ERuption cutanée\" onPress={() => setEru(!eru)}/>\n                    {\n                        eru === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"ErruptionCu\"); setEru(!eru) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Engelure\" onPress={() => setEng(!eng)}/>\n                    {\n                        eng === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Engelure\"); setEng(!eng) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Douleur thoracique\" onPress={() => setDou(!dou)}/>\n                    {\n                        dou === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"DouleurThora\"); setDou(!dou) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Génie respiratoire<\" onPress={() => setGen(!gen)}/>\n                    {\n                        gen === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"GeneRespi\"); setGen(!gen) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Essoufflement\" onPress={() => setEss(!ess)}/>\n                    {\n                        ess === true && <View style={tailwind(\"items-center\")}>\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Essouflement\"); setEss(!ess) }} />\n                        </View>\n                    }\n                    <FormButton title=\"Autres signes cliniques\" onPress={() => setAut(!aut)}/>\n                    {\n                        aut === true && <View style={tailwind(\"items-center\")}>\n                            <FormInput placeholder=\"Préciser\" onChangeText={handleAutre} />\n                            <CaracCls dateD={dateD} dateF={dateF} setDateD={setDateD} setDateF={setDateF} onSubmit={() => { handleSubmitCarac(\"Autre\"); setAut(!aut) }} />\n                        </View>\n                    }\n\n                </View>\n\n            }\n            <View style={tailwind(\"items-center pb-8\")}>\n                <View style={styles.row}>\n                    <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"DiagnosticDetails\") }} />\n                    {sym === false && <FormButton title=\"Enregistrer\" onPress={() => { handleSubmitCarac(\"\"); props.navigation.navigate(\"DiagnosticDetails\") }} />}\n                </View>\n\n            </View>\n            </View>\n            </View>\n            </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n\n    );\n};\n\nconst styles = StyleSheet.create({\n    row: {\n        flex: 1,\n        flexDirection: \"row\",\n        padding: 10\n    },\n    body: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#2193b0',\n    },\n});\nconst mapStateToProps = (state) => ({\n    loggedUser: state.medicalService.loggedUser,\n    patientList: state.medicalService.patientList,\n});\nconst mapActionToProps = {\n    login: actions.login,\n    logout: actions.logout,\n    addCaracCliniques: actions.addCaracCliniques\n};\nexport default connect(mapStateToProps, mapActionToProps)(CaracCliniques);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/confirmationDiag.js",["543"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\n\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n    \nconst ConfirmationDiag = (props) => {\n  const [test, setTest] = useState(\"Pcr\")\n  const [datePr, setDatePr] = useState()\n  const [type, setType] = useState(\"Nasopharyngé\")\n  const [resultat, setResultat] = useState(\"Positif\")\n  var handleTypeSdate = (data) => {\n    setDatePr(data.target.value)\n     \n   \n       }\n       var handleTypeSdate1 = (data) => {\n        setDatePr(data.target.value)\n         \n       \n           }\n           var handleTypeSdate2 = (data) => {\n            setDatePr(data.target.value)\n            \n           \n               }\n               var handleTypeSdate3 = (data) => {\n                setDatePr(data.target.value)\n                \n               \n                   }\n\n  var handleSubmit = (e) => {\n    e.preventDefault();\n    var values = {\n      test: test,\n      datePr: datePr,\n      result: resultat,\n      type: type\n    }\n    //console.log(values)\n    props.addConfDiag(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"DiagnosticDetails\")\n  }\n\n  var handleTestChange = (data) => {\n      setTest(data.target.value)\n    setResultat(\"Positif\")\n    setDatePr()\n  }\n  var handleTypeChange = (data) => {\n      setType(data.target.value)\n  }\n\n  var handleResulat1Change = (data) => {\n      setResultat(data.target.value)\n  }\n  var handleResultatChange = (data) => {\n      setResultat(data.target.value)\n\n  }\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n<View>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Confirmation diagnostique</Text>\n      <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n\n      <View style={tailwind(' items-center ')} >\n      <div>\n      <Text style={tailwind(\" text-gray-700 text-center pt-8 pb-2\")}>Type de confirmation ?</Text>\n      <div>  <input  onChange={handleTestChange} type=\"radio\" value=\"Pcr\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>PCR</Text></div>\n      <div>  <input  onChange={handleTestChange} type=\"radio\" value=\"RapideAc\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Test rapide AC</Text></div>\n      <div>  <input  onChange={handleTestChange} type=\"radio\" value=\"RapideAg\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Test rapide AG</Text></div>\n      <div>  <input  onChange={handleTestChange} type=\"radio\" value=\"Serologie\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Sérologie</Text></div>\n      </div>\n      </View>\n      {test === \"Pcr\" && <View style={tailwind(\"items-center py-6\")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise ?</Text>\n      <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n        <View style={tailwind(' items-center ')} >\n        <div>\n        <Text style={tailwind(\" text-gray-700 text-center pt-8 pb-2\")}>Type ?</Text>\n        <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"Nasopharyngé\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Nasopharyngé</Text></div>\n        <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"Aspiration trachéale\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Aspiration trachéale</Text></div>\n        <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"Sanguin\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Sanguin</Text></div>\n        <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"Selle ou pvt rectal\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Selle ou pvt rectal</Text></div>\n        </div>\n        </View>\n        <View >\n        <div  onChange={handleResulat1Change}>\n        <Text style={tailwind(\" text-gray-700 text-center pt-8 pb-2\")}>Resultat ?</Text>\n        <div>  <input style={tailwind(' items-center ')} type=\"radio\" value=\"Positif\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Positif</Text></div>\n        <div>  <input style={tailwind(' items-center ')} type=\"radio\" value=\"Negatif\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Negatif</Text></div>\n        <div>  <input style={tailwind(' items-center ')} type=\"radio\" value=\"Douteux\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Douteux</Text></div>\n        </div>\n        </View>\n      </View> }\n      {test === \"RapideAc\" && <View style={tailwind(\"items-center py-6\")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise ?</Text>\n      <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate1}/>\n      \n        <View style={tailwind(' items-center ')} >\n        <div>\n        <Text style={tailwind(\" text-gray-700 text-center pt-8 pb-2\")}>Resultat ?</Text>\n        <div>  <input  onChange={handleResultatChange} type=\"radio\" value=\"Positif\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Positif</Text></div>\n        <div>  <input  onChange={handleResultatChange} type=\"radio\" value=\"Negatif\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Negatif</Text></div>\n        <div>  <input  onChange={handleResultatChange} type=\"radio\" value=\"row\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>row</Text></div>\n        </div>\n        </View>\n      </View>\n      }\n      {test === \"RapideAg\" && <View style={tailwind(\"items-center py-6\")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise ?</Text>\n      <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate2}/>\n      \n        <View style={tailwind(' items-center ')} >\n        <div>\n        <Text style={tailwind(\" text-gray-700 text-center pt-8 pb-2\")}>Resultat ?</Text>\n        <div>  <input  onChange={handleResultatChange} type=\"radio\" value=\"Positif\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Positif</Text></div>\n        <div>  <input  onChange={handleResultatChange} type=\"radio\" value=\"Negatif\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Negatif</Text></div>\n        <div>  <input  onChange={handleResultatChange} type=\"radio\" value=\"row\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>row</Text></div>\n        </div>\n        </View>\n      </View>\n      }\n      {test === \"Serologie\" && <View style={tailwind(\"items-center py-6\")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise ?</Text>\n      <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate3}/>\n      \n        <View style={tailwind(' items-center ')} >\n        <div>\n        <Text style={tailwind(\" text-gray-700 text-center pt-8 pb-2\")}>Resultat ?</Text>\n        <div>  <input  onChange={handleResultatChange} type=\"radio\" value=\"Positif\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>Positif</Text></div>\n        <div>  <input  onChange={handleResultatChange} type=\"radio\" value=\"Negatif\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>Negatif</Text></div>\n        <div>  <input  onChange={handleResultatChange} type=\"radio\" value=\"row\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>row</Text></div>\n        </div>\n        </View>\n      </View>\n      }\n      <View style={tailwind(\"items-center\")}>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"DiagnosticDetails\") }} />\n          <FormButton title=\"Ajouter\" onPress={handleSubmit} />\n        </View>\n      </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  loggedUser: state.medicalService.loggedUser,\n  patientList: state.medicalService.patientList,\n\n});\nconst mapActionToProps = {\n  //login: actions.login,\n  //logout:actions.logout\n  addConfDiag: actions.addConfDiag\n};\nexport default connect(mapStateToProps, mapActionToProps)(ConfirmationDiag);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/evolution.js",["544","545","546","547","548","549"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport FormInput from '../../Form/FormInput';\nimport FormInput2 from '../../Form/FormInput2';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nimport { Value } from 'react-native-reanimated';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n   \nconst Evolution = (props) => {\n  var handleTypeSdate1 = (data) => {\n    setDateD(data.target.value)\n    \n   \n       }\n       var handleTypeSdate2 = (data) => {\n        setDateF(data.target.value)\n        \n       \n           }\n           var handleTypeSdate3 = (data) => {\n            setDateS(data.target.value)\n             \n           \n               }\n               var handleTypeSdate4 = (data) => {\n                setDateH(data.target.value)\n                \n               \n                   }\n\n  //dateTime picker\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n\n  const showDatePicker = () => {\n    setDatePickerVisibility(true);\n  };\n\n  const hideDatePicker = () => {\n    setDatePickerVisibility(false);\n  };\n\n  const handleConfirm = (date) => {\n    //date.setTime(date.getTime()-date.getTimezoneOffset()*60*1000)\n    setTime(date)\n    hideDatePicker();\n  };\n\n  const [category, setCategory] = useState()\n  const [type, setType] = useState()\n  const [time, setTime] = useState()\n  const [value, setValue] = useState()\n  const [value1, setValue1] = useState()\n  const [value2, setValue2] = useState()\n  const [validation, setValidation] = useState()\n\n  const [dateD, setDateD] = useState()\n  const [dateF, setDateF] = useState()\n  const [saps2, setSaps2] = useState()\n  const [apache2, setApache2] = useState()\n  const [sofa, setSofa] = useState()\n  const [dateS, setDateS] = useState()\n  const [typeS, setTypeS] = useState()\n  const [dateH, setDateH] = useState()\n  const [hopital, setHopital] = useState()\n  const [service, setService] = useState()\n  const [ville, setVille] = useState()\n  const [lieu, setLieu] = useState()\n\n  const [hospi, setHospi] = useState()\n\n\n  var handleHospiChange = (data) => {\n    if (data.target.value===\"0\") setHospi(true)\n    if (data.target.value===\"1\") setHospi(false)\n  }\n\n  var handleTypeSChange = (data) => {\n setTypeS(data.target.value)\n\n    }\n    var handleTypeSChange1 = (data) => {\n      setValue(data.target.value)\n      console. log({Value}) \n     \n         }\n         var handleTypeSChange2 = (data) => {\n          setValue1(data.target.value)\n         \n             }\n             var handleTypeSChange3 = (data) => {\n              setValue2(data.target.value)\n             \n                 }\n  var handleEvolutionType = (data) => {\n    if (data.target.value===\"0\") {\n      setType(\"IHH\")\n      setTypeS(\"\")\n\n    }\n    if (data.target.value===\"1\") {\n      setType(\"Ho\")\n      setTypeS(\"Transfert inter-hopital\")\n    }\n\n  }\n\n\n\n\n\n\n  var handleTypeChange = (data) => {\n setType(data.target.value)\n    }\n\n  var handleSubmit = () => {\n    \n    var values = {\n      time: time,\n      type: type,\n      category: category,\n      value: value,\n      value1: value1,\n      value2: value2,\n      dateD: dateD,\n      dateF: dateF,\n      apache2: apache2,\n      saps2: saps2,\n      sofa: sofa,\n      dateS: dateS,\n      typeS: typeS,\n      dateH: dateH,\n      hopital: hopital,\n      service: service,\n      ville: ville,\n      lieu: lieu\n\n    }\n    console.log(values)\n    setCategory()\n    setTime()\n    setValue()\n    setValue1()\n    setValue2()\n    setDateF()\n    setDateD()\n    setSofa()\n    setApache2()\n    setSaps2()\n    props.addEvolution(props.patientList[\"cin\"], values)\n\n  }\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n    <View style={tailwind(\"px-8 py-8 \")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Evolution</Text>\n      <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n      <View style={tailwind(\"items-center py-8\")}>\n        <FormButton title=\"Evolution quotidienne\" onPress={() => { setCategory(\"evaluValues\"); setType(\"Température\"); setValidation() }}/>\n        {\n          category === \"evaluValues\" && <View style={tailwind(\"items-center\")}>\n          <div>\n\n          <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"Température\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Température</Text></div>\n          <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"SaO2\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>SaO2</Text></div>\n          <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"Besoin en O2\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Besoin en O2</Text></div>\n          <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"TA\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>TA</Text></div>\n          <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"FR\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>FR</Text> </div>\n          <div>   <input  onChange={handleTypeChange} type=\"radio\" value=\"Signes de lutte\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Signes de lutte</Text></div>\n          <div>   <input  onChange={handleTypeChange} type=\"radio\" value=\"FC\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>FC </Text></div>\n          <div>   <input  onChange={handleTypeChange} type=\"radio\" value=\"Froideur\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Froideur</Text></div>\n          <div>   <input  onChange={handleTypeChange} type=\"radio\" value=\"Marbrures\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Marbrures</Text></div>\n          <div>   <input  onChange={handleTypeChange} type=\"radio\" value=\"Angoisse/Agitation\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Angoisse/Agitation</Text></div>\n          <div>   <input  onChange={handleTypeChange} type=\"radio\" value=\"Score de glasgow\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Score de glasgow</Text></div>\n          </div>\n            <Text style={tailwind(\"text-red-500 font-bold pt-4 text-center\")}>{validation}</Text>\n            {(type === \"Signes de lutte\" || type === \"Froideur\" || type === \"Marbrures\" || type === \"Angoisse/Agitation\" || type === \"Température\" || type === \"SaO2\" || type === \"Besoin en O2\" || type === \"TA\" || type === \"FR\" || type === \"FC\" || type === \"Score de glasgow\") &&\n              <View style={tailwind(\"items-center\")}>\n                <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date d’amélioration</Text>\n              <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSChange1}/>\n              <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date d’aggravation</Text>\n              <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSChange2}/>\n              <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de réapparition</Text>\n              <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSChange3}/></View>\n            }\n            <FormButton title=\"Enregistrer\" onPress={handleSubmit} />\n          </View>\n\n        }\n        <FormButton title=\"Transfert en USI\" onPress={() => { setCategory(\"USI\"); setValidation(); setType(\"IRA grave (3)\"); }}/>\n        {\n          category === \"USI\" && <View >\n            <Text style={tailwind(\"text-red-500 font-bold p-4 text-center\")}>Choisir la méthode de transfert ?</Text>\n            <div>\n            <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"IRA grave (3)\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>IRA grave (3)</Text></div>\n            <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"Sepsis/Choc septique\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Sepsis/Choc septique</Text></div>\n            </div>\n            <View style={tailwind(\"items-center\")}>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date début</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate1}/>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date fin</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate2}/>\n              <FormInput placeholder={\"SAPS 2\"} onChangeText={setSaps2} type=\"decimal-pad\" maxLength={Number(\"8\")} />\n              <FormInput placeholder={\"APACHE 2\"} onChangeText={setApache2} type=\"decimal-pad\" maxLength={Number(\"8\")} />\n              <FormInput placeholder={\"SOFA\"} onChangeText={setSofa} type=\"decimal-pad\" maxLength={Number(\"8\")} />\n              <FormButton title=\"Enregistrer\" onPress={handleSubmit} />\n            </View>\n\n\n          </View>\n\n        }\n        <FormButton title=\"Assistance respiratoire\" onPress={() => { setCategory(\"AssResp\"); setValidation() }}/>\n        {\n          category === \"AssResp\" && <View >\n            <Text style={tailwind(\"text-red-500 font-bold p-4 text-center\")}>{validation}</Text>\n            <Text style={tailwind(\"text-center text-gray-700 p-2 text-center\")}>Choisir la méthode de transfert ?</Text>\n\n\n            <View style={styles.row}>\n        <div>\n          <div><input  onChange={handleTypeChange} type=\"radio\" value=\"HFNC / CPAP min 12h\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>HFNC / CPAP min 12h</Text></div>\n          <div><input  onChange={handleTypeChange} type=\"radio\" value=\"VNI min 12h\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>VNI min 12h</Text></div>\n          <div><input  onChange={handleTypeChange} type=\"radio\" value=\"VMI\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>VMI</Text></div>\n          <div><input  onChange={handleTypeChange} type=\"radio\" value=\"DV\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>DV</Text></div>\n          <div><input  onChange={handleTypeChange} type=\"radio\" value=\"Protective ventilation\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Protective ventilation</Text></div>\n          <div><input  onChange={handleTypeChange} type=\"radio\" value=\"Ventilation free days\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Ventilation free days</Text></div>\n          <div><input  onChange={handleTypeChange} type=\"radio\" value=\"Device free days\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Device free days</Text></div>\n        </div>\n      </View>\n\n\n            <View style={tailwind(\"items-center\")}>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date début</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate1}/>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date fin</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate2}/>\n              <FormButton title=\"Enregistrer\" onPress={handleSubmit} />\n            </View>\n          </View>\n        }\n        <FormButton title=\"Evolution de l'isolement/hospitalisation\" onPress={() => { setCategory(\"Evolution\"); setValidation(); setType(\"IHH\"); setHospi(true) }}/>\n\n        {\n          category === \"Evolution\" && <View >\n                 <Text style={tailwind(\"text-red-500 font-bold p-4 text-center\")}>{validation}</Text>\n                 <View style={styles.row}>\n                 <div>\n                 <div><input  onChange={handleEvolutionType} type=\"radio\" value=\"0\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Evolution de l'isolement hors hopital</Text></div>\n                 <div><input  onChange={handleEvolutionType} type=\"radio\" value=\"1\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Evolution de l'hospitalisation</Text></div>\n                 </div>\n                 </View>\n\n            {\n              type === \"IHH\" && <View style={tailwind(\"\")}>\n                <View style={tailwind(\"items-center\")}>\n                <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de sortie?</Text>\n                <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate3}/>\n                </View>\n                <View style={styles.row}>\n                  <Text style={tailwind(\"text-gray-700 py-2 \")}>Hospitalisé ?</Text>\n                  <View style={styles.row}>\n                  <div>\n                  <div><input  onChange={handleHospiChange} type=\"radio\" value=\"0\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text></div>\n                  <div><input  onChange={handleHospiChange} type=\"radio\" value=\"1\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text></div>\n                  </div>\n                  </View>\n                </View>\n                {\n                  hospi === true && <View style={tailwind(\"items-center\")}>\n                    <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date d'hospitalisation?</Text>\n                    <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate4}/>\n                  \n                  \n\n                    <FormInput placeholder=\"Hopital\" onChangeText={setHopital} />\n                    <FormInput placeholder=\"Service\" onChangeText={setService} />\n                    <FormInput placeholder=\"Ville\" onChangeText={setVille} />\n                  </View>\n                }\n                {\n                  hospi === false && <View >\n                  <div>\n                  <div>  <input  onChange={handleTypeSChange} type=\"radio\" value=\"Evolution de l'isolement hors hopital\" name=\"gender7\" /> <Text style={tailwind('text-gray-700 py-2')}>Evolution de l'isolement hors hopital</Text></div>\n                  <div>  <input  onChange={handleTypeSChange} type=\"radio\" value=\"Evolution de l'hospitalisation\" name=\"gender7\" /> <Text style={tailwind('text-gray-700 py-2')}>Evolution de l'hospitalisation</Text></div>\n                  <div>  <input  onChange={handleTypeSChange} type=\"radio\" value=\"Deccés\" name=\"gender7\" /> <Text style={tailwind('text-gray-700 py-2')}>Deccés</Text></div>\n                  </div>\n                  </View>\n                }\n                <View style={tailwind(\"items-center\")}>\n                  <FormButton title=\"Enregistrer\" onPress={handleSubmit} />\n                </View>\n\n              </View>\n            }\n\n            {\n              type === \"Ho\" && <View style={tailwind(\"items-center\")}>\n                <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de sortie?</Text>\n                <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate3}/>\n        \n\n                <div>\n                <div>  <input  onChange={handleTypeSChange} type=\"radio\" value=\"Transfert inter-hopital\" name=\"gender8\" /> <Text style={tailwind('text-gray-700 py-2')}>Transfert inter-hopital</Text></div>\n                <div>  <input  onChange={handleTypeSChange} type=\"radio\" value=\"Transfert inter-service\" name=\"gender8\" /> <Text style={tailwind('text-gray-700 py-2')}>Transfert inter-service</Text></div>\n                <div>  <input  onChange={handleTypeSChange} type=\"radio\" value=\"Retour à domicile en quarantine\" name=\"gender8\" /> <Text style={tailwind('text-gray-700 py-2')}>Retour à domicile en quarantine</Text></div>\n                <div>  <input  onChange={handleTypeSChange} type=\"radio\" value=\"Transfert à domicile sans quarantine\" name=\"gender8\" /> <Text style={tailwind('text-gray-700 py-2')}>Transfert à domicile sans quarantine</Text></div>\n                <div>  <input  onChange={handleTypeSChange} type=\"radio\" value=\"Deccés\" name=\"gender8\" /> <Text style={tailwind('text-gray-700 py-2')}>Deccés</Text></div>\n                </div>\n                {\n                  (typeS === \"Transfert inter-hopital\" || typeS === \"Transfert inter-service\") && <FormInput placeholder=\"Lieu\" onChangeText={setLieu} />\n                }\n\n                <View style={tailwind(\"items-center\")}>\n                  <FormButton title=\"Enregistrer\" onPress={handleSubmit} />\n                </View>\n              </View>\n            }\n\n          </View>\n\n        }\n\n      </View>\n\n\n      <View style={tailwind(\"items-center py-8\")}>\n\n        <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"DiagnosticDetails\") }} />\n\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\n\nconst mapStateToProps = (state) => ({\n\n  patientList: state.medicalService.patientList,\n  evolutionList: state.medicalService.evolutionList\n});\nconst mapActionToProps = {\n\n  addEvolution: actions.addEvolution,\n  getEvolution: actions.getEvolution,\n};\nexport default connect(mapStateToProps, mapActionToProps)(Evolution);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/examBio.js",["550","551","552","553","554","555","556"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../../Form/FormButton\";\nimport FormInput from \"../../Form/FormInput\";\n\n\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\nconst ExamBio = (props) => {\n  var handleTypeSdate = (data) => {\n    setDatePr(data.target.value)     \n       }\n       var handleTypeSdate1 = (data) => {\n        setDatePr(data.target.value)     \n           }\n           var handleTypeSdate2 = (data) => {\n            setDatePr(data.target.value)     \n               }\n               var handleTypeSdate3 = (data) => {\n                setDatePr(data.target.value)     \n                   }\n                   var handleTypeSdate4 = (data) => {\n                    setDatePr(data.target.value)     \n                       }\n  const [type, setType] = useState(\"NFS\")\n  const [datePr, setDatePr] = useState();\n  //NFS\n  const [gb, setGb] = useState()\n  const [lym, setLym] = useState()\n  const [pla, setPla] = useState()\n  const [hb, setHb] = useState()\n  const [ht, setHt] = useState()\n  //BIlan renal\n  const [creat, setCreat] = useState()\n  const [clairCreat, setClairCreat] = useState()\n  const [uree, setUree] = useState()\n\n  //Bilan hepatique\n  const [biliru, setBiliru] = useState()\n  const [biliru1, setBiliru1] = useState()\n  const [alat, setAlat] = useState()\n  const [asat, setAsat] = useState()\n  const [tp, setTp] = useState()\n  const [facteurV, setFacteurV] = useState()\n  const [fibrinogene, setFibrinogene] = useState()\n  const [cpk_mb, setCpk_mb] = useState()\n  const [troponine, setTroponine] = useState()\n  const [pro_bnp, setPro_bnp] = useState()\n  const [albumi, setAlbumi] = useState()\n  const [d_dimère, setD_dimère] = useState()\n  const [ldh, setLdh] = useState()\n  const [crp, setCrp] = useState()\n  const [procal, setProcal] = useState()\n  const [ferri, setFerri] = useState()\n  //GDSA\n  const [ph, setPh] = useState()\n  const [pao2, setPao2] = useState()\n  const [paco2, setPaco2] = useState()\n  const [hco3_, setHco3_] = useState()\n  const [sao2, setSao2] = useState()\n\n  //ionogramme\n  const [nak, setNak] = useState()\n  const [nak1, setNak1] = useState()\n  const [nakUr, setNakUr] = useState()\n  const [nakUr1, setNakUr1] = useState()\n  //Autre\n  const [fileName, setFileName] = useState()\n  const [file, setFile] = useState()\n  // controle de saisie\n  const [test, setTest] = useState()\n\n\n\n  var handleSubmit = () => {\n    var values = {\n      datePr: datePr,\n      type: type,\n      gb: gb,\n      lym: lym,\n      pla: pla,\n      hb: hb,\n      ht: ht,\n      creat: creat,\n      clairCreat: clairCreat,\n      uree: uree,\n      ph: ph,\n      paco2: paco2,\n      pao2: pao2,\n      hco3_: hco3_,\n      sao2: sao2,\n      nak: nak,\n      nak1: nak1,\n      nakUr: nakUr,\n      nakUr1: nakUr1,\n      biliru: biliru,\n      biliru1: biliru1,\n      alat: alat,\n      asat: asat,\n      tp: tp,\n      facteurV: facteurV,\n      fibrinogene: fibrinogene,\n      cpk_mb: cpk_mb,\n      troponine: troponine,\n      pro_bnp: pro_bnp,\n      albumi: albumi,\n      d_dimère: d_dimère,\n      ldh: ldh,\n      crp: crp,\n      procal: procal,\n      ferri: ferri\n\n\n    }\n    //console.log(values)\n    props.addExamBio(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"DiagnosticDetails\")\n\n  }\n\n\n\n  var handleTypeChange = (data) => {\n      setType(data.target.value)\n    setDatePr()\n\n  }\n\n  return (\n<div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(\"items-center\")}>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Examens Biologiques</Text>\n      <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n      <View style={tailwind(\"items-center\")}>\n      <div>\n      <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"NFS\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>NFS</Text></div>\n      <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"BilanRenal\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Bilan renal</Text></div>\n      <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"BilanHepa\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Bilan hepatique</Text></div>\n      <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"GDSA\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>GDSA</Text></div>\n      <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"Ionogra\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Ionogramme</Text></div>\n      <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"Autre\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Autres</Text></div>\n      </div>\n      </View>\n\n      <Text style={tailwind(\"text-center text-red-500 py-4\")}>{test !== undefined && test}</Text>\n\n\n      {\n        type === \"NFS\" && <View style={tailwind(\"items-center py-12\")}>\n          <FormInput placeholder=\"GB\" onChangeText={setGb} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Lymphocyte\" onChangeText={setLym} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Plaquette\" onChangeText={setPla} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Hb\" onChangeText={setHb} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Ht\" onChangeText={setHt} type=\"decimal-pad\" />\n          <FormButton title=\"Enregitrer\" onPress={handleSubmit} type=\"decimal-pad\" />\n\n        </View>\n      }\n      {\n        type === \"BilanRenal\" && <View style={tailwind(\"items-center py-12\")}>\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise de l'examen</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n          <FormInput placeholder=\"Creat\" onChangeText={setCreat} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Clairance de la creat\" onChangeText={setClairCreat} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Urée\" onChangeText={setUree} type=\"decimal-pad\" />\n          <FormButton title=\"Enregitrer\" onPress={handleSubmit} />\n        </View>\n      }\n      {\n        type === \"GDSA\" && <View style={tailwind(\"items-center py-12\")}>\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise de l'examen</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate1}/>\n        \n          <FormInput placeholder=\"pH\" onChangeText={setPh} type=\"decimal-pad\" />\n          <FormInput placeholder=\"PaO2\" onChangeText={setPao2} type=\"decimal-pad\" />\n          <FormInput placeholder=\"PaCO2\" onChangeText={setPaco2} type=\"decimal-pad\" />\n          <FormInput placeholder=\"HCO3-\" onChangeText={setHco3_} type=\"decimal-pad\" />\n          <FormInput placeholder=\"SaO2\" onChangeText={setSao2} type=\"decimal-pad\" />\n          <FormButton title=\"Enregitrer\" onPress={handleSubmit} />\n\n        </View>\n      }\n      {\n        type === \"BilanHepa\" && <View style={tailwind(\"items-center py-12\")}>\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise de l'examen</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate2}/>\n        \n          <FormInput placeholder=\"Bilirubine (T)\" onChangeText={setBiliru} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Bilirubine (D)\" onChangeText={setBiliru1} type=\"decimal-pad\" />\n          <FormInput placeholder=\"ALAT\" onChangeText={setAlat} type=\"decimal-pad\" />\n          <FormInput placeholder=\"ASAT\" onChangeText={setAsat} type=\"decimal-pad\" />\n          <FormInput placeholder=\"TP\" onChangeText={setTp} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Facteur V\" onChangeText={setFacteurV} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Fibrinogene\" onChangeText={setFibrinogene} type=\"decimal-pad\" />\n          <FormInput placeholder=\"CPK-MB\" onChangeText={setCpk_mb} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Troponine\" onChangeText={setTroponine} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Pro BNP\" onChangeText={setPro_bnp} type=\"decimal-pad\" />\n          <FormInput placeholder=\"ALbuminémie\" onChangeText={setAlbumi} type=\"decimal-pad\" />\n          <FormInput placeholder=\"D-Dimère\" onChangeText={setD_dimère} type=\"decimal-pad\" />\n          <FormInput placeholder=\"LDH\" onChangeText={setLdh} type=\"decimal-pad\" />\n          <FormInput placeholder=\"CRP\" onChangeText={setCrp} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Procalcitonine\" onChangeText={setProcal} type=\"decimal-pad\" />\n          <FormInput placeholder=\"FErritinemie\" onChangeText={setFerri} type=\"decimal-pad\" />\n          <FormButton title=\"Enregitrer\" onPress={handleSubmit} />\n\n\n        </View>\n      }\n      {\n        type === \"Ionogra\" && <View style={tailwind(\"items-center py-12\")}>\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise de l'examen</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate3}/>\n        \n          <FormInput placeholder=\"Na+\" onChangeText={setNak} type=\"decimal-pad\" />\n          <FormInput placeholder=\"K+\" onChangeText={setNak1} type=\"decimal-pad\" />\n          <FormInput placeholder=\"Na+ urinaire\" onChangeText={setNakUr} type=\"decimal-pad\" />\n          <FormInput placeholder=\"K+ urinaire\" onChangeText={setNakUr1} type=\"decimal-pad\" />\n          <FormButton title=\"Enregitrer\" onPress={handleSubmit} />\n\n        </View>\n      }\n      {\n        type === \"Autre\" && <View style={tailwind(\"items-center py-12\")}>\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de prise de l'examen</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate4}/>\n        \n        </View>\n      }\n      <View style={tailwind(\"items-center py-12\")}>\n        <FormButton title=\"Retour\" onPress={() => props.navigation.navigate(\"DiagnosticDetails\")} />\n      </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList,\n});\nconst mapActionToProps = {\n  login: actions.login,\n  logout: actions.logout,\n  addExamBio: actions.addExamBio\n};\nexport default connect(mapStateToProps, mapActionToProps)(ExamBio);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/examenCliniques.js",["557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../../Form/FormButton\";\nimport FormInput from \"../../Form/FormInput\";\nimport FormInput2 from \"../../Form/FormInput2\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport FormCheckBox from \"../../Form/CheckBox\";\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\nconst ExamenCliniques = (props) => {\n\n    var handleExamOroChange = (newValue, text) => {\n        if (newValue == true) setExamOro(examOro + \" \" + text)\n        else setExamOro(examOro.replace(text + \" \", \"\"))\n        if (text === \" Autre\" && newValue == true) setAutreOro(true)\n        if (text === \" Autre\" && newValue == false) setAutreOro(false)\n    }\n\n    var handleExamenOphtaChange = (newValue, text) => {\n        if (newValue == true) setExamOphta(examOphta + \" \" + text)\n        else setExamOphta(examOphta.replace(text + \" \", \"\"))\n        if (text === \"Autre\" && newValue == true) setAutreOphta(true)\n        if (text === \"Autre\" && newValue == false) setAutreOphta(false)\n    }\n\n\n    var handleExamPulChange = (newValue, text) => {\n        if (newValue == true) setExamPulmo(examPulmo + \" \" + text)\n        else setExamPulmo(examPulmo.replace(text + \" \", \"\"))\n        if (text === \"Autre\" && newValue == true) setAutrePul(true)\n        if (text === \"Autre\" && newValue == false) setAutrePul(false)\n    }\n\n    var handleExamCutChange = (newValue, text) => {\n        if (newValue == true) setExamCut(examCut + \" \" + text)\n        else setExamCut(examCut.replace(text + \" \", \"\"))\n        if (text === \"Autre\" && newValue == true) setAutreCut(true)\n        if (text === \"Autre\" && newValue == false) setAutreCut(false)\n    }\n\n    var handleExamNeuroChange = (newValue, text) => {\n        if (newValue == true) setExamNeuro(examNeuro + \" \" + text)\n        else setExamNeuro(examNeuro.replace(text + \" \", \"\"))\n        if (text === \"Autre\" && newValue == true) setAutreNeuro(true)\n        if (text === \"Autre\" && newValue == false) setAutreNeuro(false)\n    }\n    var handleExamenCarChange = (newValue, text) => {\n        if (newValue == true) setExamCardio(examCardio + \" \" + text)\n        else setExamCardio(examCardio.replace(text + \" \", \"\"))\n        if (text === \"Autre\" && newValue == true) setAutreCar(true)\n        if (text === \"Autre\" && newValue == false) setAutreCar(false)\n    }\n\n\n    //component\n    const [oro, setOro] = useState(false)\n    const [pul, setPul] = useState(false)\n    const [oph, setOph] = useState(false)\n    const [cut, setCut] = useState(false)\n    const [neu, setNeu] = useState(false)\n    const [card, setCard] = useState(false)\n    const [aut, setAut] = useState(false)\n    //values\n    const [temperature, setTemperature] = useState()\n    const [fr, setFr] = useState()\n    const [fc, setFc] = useState()\n    const [sao2, setSao2] = useState()\n    const [pa_sys, setPa_sys] = useState()\n    const [pa_dya, setPa_dya] = useState()\n\n    const [scoreGlas, setScoreGlas] = useState()\n    const [scoreGlas1, setScoreGlas1] = useState()\n    const [poids, setPoids] = useState()\n    const [taille, setTaille] = useState()\n    const [examOro, setExamOro] = useState(\"\")\n    const [examPulmo, setExamPulmo] = useState(\"Tirage intercostal\")\n    const [examOphta, setExamOphta] = useState(\"hyperhèmie conjonctivale unilatérale\")\n    const [examCut, setExamCut] = useState(\"Erruption maculo-papuleuse géneralisée\")\n    const [examNeuro, setExamNeuro] = useState(\"Désorientation temporo-spatiale\")\n    const [examCardio, setExamCardio] = useState(\"Assourdissement des bruits du coeur\")\n    const [autre, setAutre] = useState()\n    //autre cb values values\n    const [autreOro, setAutreOro] = useState(false)\n    const [autrePul, setAutrePul] = useState(false)\n    const [autreOphta, setAutreOphta] = useState(false)\n    const [autreCut, setAutreCut] = useState(false)\n    const [autreNeuro, setAutreNeuro] = useState(false)\n    const [autreCar, setAutreCar] = useState(false)\n    // autre inputVlaues\n    const [autreInputOro, setAutreInputOro] = useState(false)\n    const [autreInputPul, setAutreInputPul] = useState(false)\n    const [autreInputOphta, setAutreInputOphta] = useState(false)\n    const [autreInputCut, setAutreInputCut] = useState(false)\n    const [autreInputNeuro, setAutreInputNeuro] = useState(false)\n    const [autreInputCar, setAutreInputCar] = useState(false)\n\n\n    // form validation\n    const [validation, setValidation] = useState()\n\n    var handleAutreChange = (text) => {\n        setAutre(text)\n    }\n    //autrecb handle change functions\n    var handleChangeAutreOro = (text) => {\n        setAutreInputOro(text)\n    }\n\n    var handleChangeAutrePul = (text) => {\n        setAutreInputPul(text)\n\n    }\n    var handleChangeAutreOpht = (text) => {\n        setAutreInputOphta(text)\n    }\n    var handleChangeAutreCut = (text) => {\n        setAutreInputCut(text)\n    }\n    var handleChangeAUtreNeu = (text) => {\n        setAutreInputNeuro(text)\n    }\n    var handleChangeAutreCar = (text) => {\n        setAutreInputCar(text)\n    }\n    //submit function\n    var handleSubmit = () => {\n\n\n        if (temperature > 43 || temperature < 30 || temperature === undefined) { setValidation(\"La temperature doit etre comprise entre 30et 43 °C\"); return; }\n        if (fr > 250 || fr < 0 || fr === undefined) { setValidation(\"La valuer du FR doit etre comprise entre 0 et 250 C/min !\"); return }\n        if (fc > 150 || fc < 0 || fc == undefined) { setValidation(\"La valeur du FC doit etre comprise entre 0 et 150 bpm\"); return }\n        if (sao2 > 100 || sao2 < 0 || sao2 === undefined) { setValidation(\"Le pourcentage de SaO2  doit etre compris entre 0 % et 100 % !\"); return }\n        if (pa_sys > 200 || pa_sys < 80 || pa_sys === undefined) { setValidation(\"La pression arterielle systolique doit ete comprise entre 80 et 200 !\"); return }\n        if (pa_dya > 200 || pa_dya < 80 || pa_dya === undefined) { setValidation(\"La pression arterielle systolique doit ete comprise entre 40 et 150!\"); return }\n        if (scoreGlas > 15 || scoreGlas < 0 || scoreGlas === undefined) { setValidation(\"Le score de Glasgow doit etre entre 0 et 15 !\") }\n        if (scoreGlas1 > 15 || scoreGlas1 < 0 || scoreGlas1 === undefined) { setValidation(\"Le score de Glasgow doit etre entre 0 et 15 !\") }\n        var x = examOro.replace(\"Autre\", \"Autre:\" + autreInputOro)\n        var values = {\n            fr: fr,\n            fc: fc,\n            pa_sys: pa_sys,\n            pa_dya: pa_dya,\n            sao2: sao2,\n            scoreGlas: scoreGlas,\n            scoreGlas1: scoreGlas1,\n            poids: poids,\n            taille: taille,\n            examOro: examOro.replace(\"Autre\", \"Autre:\" + autreInputOro),\n            examPulmo: examPulmo.replace(\"Autre\", \"Autre:\" + autreInputPul),\n            examOphta: examOphta.replace(\"Autre\", \"Autre:\" + autreInputOphta),\n            examCut: examCut.replace(\"Autre\", \"Autre:\" + autreInputCut),\n            examNeuro: examNeuro.replace(\"Autre\", \"Autre:\" + autreInputNeuro),\n            examCardio: examCardio.replace(\"Autre\", \"Autre:\" + autreInputCar),\n            autre: autre,\n            temperature: temperature,\n        }\n        //console.log(values)\n        props.addExamCli(props.patientList[\"cin\"], values)\n        props.navigation.navigate(\"DiagnosticDetails\")\n    }\n\n\n\n    return (\n        <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n            <View style={tailwind(\"items-center\")}>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Examen clinique a l'admission</Text>\n            <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n            <View style={tailwind(\"items-center\")}>\n                <Text style={tailwind('text-red-500 py-2')}>{validation}</Text>\n                <FormInput placeholder=\"Température en °C\" type=\"decimal-pad\" onChangeText={setTemperature} />\n                <FormInput placeholder=\"FR  C/min\" type=\"decimal-pad\" onChangeText={setFr} />\n                <FormInput placeholder=\"FC bpm\" type=\"decimal-pad\" onChangeText={setFc} />\n                <FormInput placeholder=\"SaO2 %\" type=\"decimal-pad\" onChangeText={setSao2} />\n                <FormInput2 placeholder1=\"PA systolique\" placeholder2=\"PA diastolique\" onChangeText1={setPa_sys} onChangeText2={setPa_dya} />\n                <FormInput2 placeholder1=\"Score de Glasgow\" placeholder2=\"15\" onChangeText1={setScoreGlas} onChangeText2={setScoreGlas1} />\n                <FormInput placeholder=\"Poids kg\" type=\"decimal-pad\" maxLength={Number(\"3\")} onChangeText={setPoids} />\n                <FormInput placeholder=\"Taille m\" type=\"number-pad\" onChangeText={setTaille}  maxLength={Number(\"3\")}/>\n            </View>\n            <View style={tailwind(\"px-8 py-2 \")}>\n                <FormButton title=\"Examen oro-pharyngé\" onPress={() => setOro(!oro)}/>\n                {\n                    oro === true &&\n                    <View>\n                        <FormCheckBox text='Gorge Rouge' value={false} onPress={handleExamOroChange} />\n                        <FormCheckBox text=\"Hypertrophie des amygdales\" value={false} onPress={handleExamOroChange} />\n                        <FormCheckBox text=\"Anosmie\" value={false}  onPress={handleExamOroChange} />\n                        <FormCheckBox text=\" Agueusie\" value={false}  onPress={handleExamOroChange} />\n                        <FormCheckBox text=\" Autre\" value={false}  onPress={handleExamOroChange} />\n\n\n                    </View>\n\n\n                }\n                {autreOro === true && oro === true && <View style={tailwind(\"items-center\")}><FormInput placeholder=\"Autre\" onChangeText={handleChangeAutreOro} /></View>}\n                <FormButton title=\"Examen pulmonaire\" onPress={() => setPul(!pul)}/>\n                {\n                    pul === true &&\n                    <View>\n                        <FormCheckBox text=\"Tirage intercostal\" value={false} onPress={handleExamPulChange} />\n                        <FormCheckBox text=\"Tirage sus-sternal\" value={false} onPress={handleExamPulChange} />\n                        <FormCheckBox text=\"Silence auscultoire\" value={false} onPress={handleExamPulChange} />\n                        <FormCheckBox text=\"Hyper-sonorité\" value={false} onPress={handleExamPulChange} />\n                        <FormCheckBox text=\"Autre\" value={false} onPress={handleExamPulChange} />\n                    </View>\n\n                }\n                {autrePul === true && pul === true && <View style={tailwind(\"items-center\")}><FormInput placeholder=\"Autre\" onChangeText={handleChangeAutrePul} /></View>}\n                <FormButton title=\"Examen ophtalmologique\" onPress={() => setOph(!oph)}/>\n                {\n                    oph === true &&\n                    <View>\n                        <FormCheckBox text=\"Hyperhèmie conjonctivale unilatérale\" value={false} onPress={handleExamenOphtaChange} />\n                        <FormCheckBox text=\"Hyperhèmie conjonctivale bilatérale\" value={false} onPress={handleExamenOphtaChange} />\n                        <FormCheckBox text=\"Autre\" value={false} onPress={handleExamenOphtaChange} />\n                    </View>\n                }\n                {autreOphta === true && oph === true && <View style={tailwind(\"items-center\")}><FormInput placeholder=\"Autre\" onChangeText={handleChangeAutreOpht} /></View>}\n                <FormButton title=\"Examen cutané\" onPress={() => setCut(!cut)}/>\n                {\n                    cut === true && <View>\n                        <FormCheckBox text=\"Erruption maculo-papuleuse géneralisée\" value={false} onPress={handleExamCutChange} />\n                        <FormCheckBox text=\"Erruption purpurique\" value={false} onPress={handleExamCutChange} />\n                        <FormCheckBox text=\"Engelure\" value={false} onPress={handleExamCutChange} />\n                        <FormCheckBox text=\"Autre\" value={false} onPress={handleExamCutChange} />\n                    </View>\n                }\n                {autreCut === true && cut === true && <View style={tailwind(\"items-center\")}><FormInput placeholder=\"Autre\" onChangeText={handleChangeAutreCut} /></View>}\n                <FormButton title=\"Examen neurologique\" onPress={() => setNeu(!neu)}/>\n                {\n                    neu === true && <View>\n                        <FormCheckBox text=\"Désorientation temporo-spatiale\" value={false} onPress={handleExamNeuroChange} />\n                        <FormCheckBox text=\"Agitation\" value={false} onPress={handleExamNeuroChange} />\n                        <FormCheckBox text=\"Trouble de comportement\" value={false} onPress={handleExamNeuroChange} />\n                        <FormCheckBox text=\"Autre\" value={false} onPress={handleExamNeuroChange} />\n                    </View>\n                }\n                {autreNeuro === true && neu === true && <View style={tailwind(\"items-center\")}><FormInput placeholder=\"Autre\" onChangeText={handleChangeAUtreNeu} /></View>}\n                <FormButton title=\"Examen cardiovasculaire\" onPress={() => setCard(!card)}/>\n                {\n                    card === true &&\n                    <View>\n                        <FormCheckBox text=\"Assourdissement des bruits du coeur\" value={false} onPress={handleExamenCarChange} />\n                        <FormCheckBox text=\"Rythme cardiaque irrégulier\" value={false} onPress={handleExamenCarChange} />\n                        <FormCheckBox text=\"Souffre cardiaque si oui\" value={false} onPress={handleExamenCarChange} />\n                        <FormCheckBox text=\"Froideur des extrémités\" value={false} onPress={handleExamenCarChange} />\n                        <FormCheckBox text=\"Marbures aux genoux /generalisées\" value={false} onPress={handleExamenCarChange} />\n                        <FormCheckBox text=\"Autre\" value={false} onPress={handleExamenCarChange} />\n                    </View>\n\n                }\n                {autreCar === true && card === true && <View style={tailwind(\"items-center\")}><FormInput placeholder=\"Autre\" onChangeText={handleChangeAutreCar} /></View>}\n                <FormButton title=\"Autres éléments de l'examen physique\" onPress={() => setAut(!aut)}/>\n                {aut && <View style={tailwind(\"items-center\")}><FormInput placeholder=\"Précisier\" onChangeText={handleAutreChange} /></View>}\n\n            </View>\n            <View style={tailwind(\"items-center\")}>\n                <View style={styles.row}>\n                    <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"DiagnosticDetails\") }} />\n                    <FormButton title=\"Enregistrer\" onPress={handleSubmit} />\n                </View>\n            </View>\n        </View>\n        </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n    );\n};\nconst styles = StyleSheet.create({\n    row: {\n        flex: 1,\n        flexDirection: \"row\",\n        padding: 10\n    },\n    body: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#2193b0',\n    },\n});\nconst mapStateToProps = (state) => ({\n    patientList: state.medicalService.patientList,\n});\nconst mapActionToProps = {\n    login: actions.login,\n    logout: actions.logout,\n    addExamCli: actions.addExamCli\n};\nexport default connect(mapStateToProps, mapActionToProps)(ExamenCliniques);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/exposition.js",["578","579","580","581","582","583","584","585","586","587","588","589","590"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport FormInput from '../../Form/FormInput';\nimport FormButton from '../../Form/FormButton';\nimport { medicalService } from '../../../Reducers/medicalService';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\nconst Exposition = (props) => {\n  var handleTypeSdate = (data) => {\n    setDateD(data.target.value)     \n       }\n           var handleTypeSdate1 = (data) => {\n            setDateF(data.target.value)     \n               }\n               var handleTypeSdate2 = (data) => {\n                setDateEnt(data.target.value)     \n                   }\n                   var handleTypeSdate3 = (data) => {\n                    setDateV1(data.target.value)     \n                       }\n                       var handleTypeSdate4 = (data) => {\n                        setDateV2(data.target.value)     \n                           }\n                           var handleTypeSdate5 = (data) => {\n                            setDateDebutC(data.target.value)     \n                               }\n                               var handleTypeSdate6 = (data) => {\n                                setDateFinC(data.target.value)     \n                                   }\n                                   var handleTypeSdate7 = (data) => {\n                                    setDateDQu(data.target.value)     \n                                       }\n                                       var handleTypeSdate8 = (data) => {\n                                        setDateFQu(data.target.value)     \n                                           }\n                                           \n\n\n  //component test variable\n  const [sejour, setSejour] = useState(false)\n  const [arivee, setArivee] = useState(false)\n  const [parcours, setParcours] = useState(false)\n  const [etroit, setEtoit] = useState(false)\n  const [autres, setAutres] = useState(false)\n  const [quarantine, setQurarantine] = useState(false)\n  //checkbox variable\n  const [contactC, setContactC] = useState(\"Oui\")\n  const [autreBox, setAutreBox] = useState(\"Oui\")\n  const [miseQuarantine, setMiseQuarantine] = useState(\"Oui\")\n\n  //values\n  //Sejour /Transit component\n  const [habite, setHabite] = useState(true)\n  const [dateD, setDateD] = useState()\n  const [dateF, setDateF] = useState()\n  const [villes, setVilles] = useState()\n  //arivee en tunisie\n  const [dateEnt, setDateEnt] = useState()\n  const [lieuEnt, setLieuEnt] = useState()\n  const [moyensTran, setMoyensTran] = useState()\n  //parcours en Tunise\n  const [villesPar, setVillesPar] = useState()\n  const [dateV1, setDateV1] = useState()\n  const [moyenTranV1, setMoyenTranV1] = useState()\n  const [dateV2, setDateV2] = useState()\n  const [moyenTranV2, setMoyenTranV2] = useState()\n  const [moyenTranQu, setMoyenTranQu] = useState()\n  //contact etroit\n  const [idTun, setIdTun] = useState(0)\n  const [dateDebutC, setDateDebutC] = useState()\n  const [dateFinC, setDateFinC] = useState()\n  //Autres criteres ayant conduit\n\n  const [details, setDetails] = useState()\n  //mise en quarantine\n  const [dateDQu, setDateDQu] = useState()\n  const [dateFDQu, setDateFQu] = useState()\n  const [respect, setRespect] = useState(true)\n\n  //values handleChange functions\n  //sejour/transit values\n  var habiteHandleChange = (data) => {\n    if (data.target.value===\"Oui\")\n      setHabite(true)\n    if (data.target.value===\"Non\")\n      setHabite(false)\n  }\n  var handleVillesChange = (text) => {\n    setVilles(text)\n  }\n  //arrivee values\n  var handleLieuEnt = (text) => {\n    setLieuEnt(text)\n  }\n  var handletMoyensTran = (text) => {\n    setMoyensTran(text)\n  }\n  //parcours en Tunisie\n  var handleVillesPar = (text) => {\n    setVillesPar(text)\n  }\n  var handleMoyenTranV1 = (text) => {\n    setMoyenTranV1(text)\n  }\n  var handleMoyenTranV2 = (text) => {\n    setMoyenTranV2(text)\n  }\n  var handleMoyenTranQu = (text) => {\n    setMoyenTranQu(text)\n  }\n  //contact etroit\n  var handleIdTun = (text) => {\n    setIdTun(text)\n  }\n  //AUtres criteres\n\n  var handleDetailsChange = (text) => {\n    setDetails(text)\n  }\n  //Mise en quarantine\n  var handleRespectChange = (data) => {\n    if (data.target.value==\"Oui\")\n      setRespect(true)\n    else setRespect(false)\n  }\n\n  var handleSejourChange = () => {\n    setSejour(!sejour)\n  }\n  var handleAriveeChange = () => {\n    setArivee(!arivee)\n  }\n  var handleParousChange = () => {\n    setParcours(!parcours)\n  }\n  var handleEtroitChange = () => {\n    setEtoit(!etroit)\n  }\n  var handleAutresChange = () => {\n    setAutres(!autres)\n  }\n  var handleQuarantineChange = () => {\n    setQurarantine(!quarantine)\n  }\n  var handleContactCChange = (data) => {\n      setContactC(data.target.value)\n  }\n  var handleAutreBoxChange = (data) => {\n      setAutreBox(data.target.value)\n  }\n  var handleMiseQuarantineChange = (data) => {\n    if (data.target.value===\"Oui\")\n      setMiseQuarantine(\"Oui\")\n    else setMiseQuarantine(\"Non\")\n  }\n\n  //submit function\n  var handleSubmit = (e) => {\n    e.preventDefault()\n    var values = {\n      //Sejour /transit\n      habite: habite,\n      dateD: dateD,\n      dateF: dateF,\n      villes: villes,\n      // Arivee\n      dateEnt: dateEnt,\n      lieuEnt: lieuEnt,\n      moyensTran: moyensTran,\n      // parcours en tunisie\n      villesPar: villesPar,\n      dateV1: dateV1,\n      dateV2: dateV2,\n      moyenTranV1: moyenTranV1,\n      moyenTranV2: moyenTranV2,\n      moyenTranQu: moyenTranQu,\n\n      //contact etroit\n      contact: contactC,\n      idTun: idTun,\n      dateDebutC: dateDebutC,\n      dateFinC: dateFinC,\n\n      //autre critere\n      autre: autreBox,\n      details: details,\n\n      //mise en quarantine\n      dateDQu: dateDQu,\n      dateFDQu: dateFDQu,\n      respect: respect\n\n\n    }\n    console.log(values)\n\n    props.addExposition(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"PatientDetails\")\n  }\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n\n\n\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl ')}>Expositions à Risque </Text>\n        <Text style={tailwind('text-gray-700 font-bold py-2 ')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n\n\n        <View style={tailwind(' items-center ')}>\n          <FormButton title=\"Séjour ou transit dans une zone a risque\" onPress={handleSejourChange}/>\n          {sejour == true && <View style={tailwind('items-center ')}>\n          <Text style={tailwind('text-gray-700 py-2')}>Réside habituellement dans la zone a risque  ?</Text>\n          <div>\n          <input  onChange={habiteHandleChange} type=\"radio\" value=\"Oui\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n          <input  onChange={habiteHandleChange} type=\"radio\" value=\"Non\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n          <input  onChange={habiteHandleChange} type=\"radio\" value=\"row\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>row</Text>\n        </div>\n            <Text>Séjour ou transit dans zone risque ?</Text>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Du ?</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Au ?</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate1}/>\n            \n\n          </View>\n          }\n          <FormButton title=\"Arivée sur le territoire tunisien\" onPress={handleAriveeChange}/>\n          {arivee == true && <View style={tailwind(\"items-center\")}>\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date d'arrivée en Tunisie?</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate2}/>\n          \n            <FormInput placeholder=\"Lieu d'entrée\" onChangeText={handleLieuEnt} />\n            <FormInput placeholder=\"Moyen de transport\" onChangeText={handletMoyensTran} />\n          </View>}\n          <FormButton title=\"Parcours en Tunisie\" onPress={handleParousChange}/>\n          {(parcours == true) && <View style={tailwind(\"items-center\")}>\n            <FormInput placeholder=\"Villes visités en Tunisie\" onChangeText={handleVillesPar} />\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date d'arrivée ville 1</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate3}/>\n            \n            <FormInput placeholder=\"Moyens de transport\" onChangeText={handleMoyenTranV1} />\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date d'arrivée ville 2</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate4}/>\n            \n            <FormInput placeholder=\"Moyens de transport\" onChangeText={handleMoyenTranV2} />\n            <FormInput placeholder=\"Moyen de transport quotidien\" onChangeText={handleMoyenTranQu} />\n\n          </View>}\n          <FormButton title=\"Contact étroit\" onPress={handleEtroitChange}/>\n          {\n            (etroit == true) && (<View style={tailwind(\"items-center\")}>\n        <div>\n\t         <Text style={tailwind('text-gray-700 py-2')}>Contact avec un cas confirmé ou suspect ?</Text>\n          <input  onChange={handleContactCChange} type=\"radio\" value=\"Oui\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n          <input  onChange={handleContactCChange} type=\"radio\" value=\"Non\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n          <input  onChange={handleContactCChange} type=\"radio\" value=\"Ne sait pas\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Ne sait pas</Text>\n          <input  onChange={handleContactCChange} type=\"radio\" value=\"row\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>row</Text>\n        </div>\n            </View>\n            )}\n          {(contactC === \"Oui\" && etroit == true) && (<View style={tailwind(\"items-center\")}>\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Du ?</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate5}/>\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Au ?</Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate6}/>\n\n            <FormInput placeholder=\"Identifiant en Tunisie\" type=\"number-pad\" onChangeText={handleIdTun} />\n          </View>)}\n\n          <FormButton title=\"Autres critères ayant conduit au classement en cas possible\" onPress={handleAutresChange}/>\n          {(autres == true) && <View style={tailwind(\"items-center\")}>\n          <div>\n             <Text style={tailwind('text-gray-700 py-2')}>Contact avec un cas confirmé ou suspect ?</Text>\n            <input  onChange={handleAutreBoxChange} type=\"radio\" value=\"Oui\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n            <input  onChange={handleAutreBoxChange} type=\"radio\" value=\"Non\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n            <input  onChange={handleAutreBoxChange} type=\"radio\" value=\"NSP\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>NSP</Text>\n            <input  onChange={handleAutreBoxChange} type=\"radio\" value=\"row\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>row</Text>\n          </div>\n            {autreBox === \"Oui\" && <FormInput placeholder=\"Précisier\" onChangeText={handleDetailsChange} />}\n\n\n          </View>}\n          <FormButton title=\"Mise en quarantine\" onPress={handleQuarantineChange}/>\n          {(quarantine == true) && <View style={tailwind(\"items-center\")}>\n          <div>\n             <Text style={tailwind('text-gray-700 py-2')}>Mise en quarantine ?</Text>\n            <input  onChange={handleMiseQuarantineChange} type=\"radio\" value=\"Oui\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n            <input  onChange={handleMiseQuarantineChange} type=\"radio\" value=\"Non\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n            <input  onChange={handleMiseQuarantineChange} type=\"radio\" value=\"row\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>row</Text>\n          </div>\n            <Text style={tailwind('text-gray-700 py-2')}>  Mise en quarantine ?</Text>\n          </View>}\n          {(quarantine == true && miseQuarantine === \"Oui\") && <View style={tailwind('items-center')}>\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}></Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate7}/>\n          <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}></Text>\n          <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate8}/>\n          \n          <div>\n             <Text style={tailwind('text-gray-700 py-2')}>Respect de la quarantine ?</Text>\n            <input  onChange={handleRespectChange} type=\"radio\" value=\"Oui\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n            <input  onChange={handleRespectChange} type=\"radio\" value=\"Non\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n            <input  onChange={handleRespectChange} type=\"radio\" value=\"row\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>row</Text>\n          </div>\n          </View>}\n\n\n\n\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"PatientDetails\") }} />\n          <FormButton title=\"Enregistrer\" onPress={handleSubmit} />\n</View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  //loggedUser: state.medicalService.loggedUser,\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n  //login: actions.login,\n  addExposition: actions.addExposition\n};\nexport default connect(mapStateToProps, mapActionToProps)(Exposition);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/diagnostic/traitement.js",["591","592","593","594","595"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from '../../Form/FormInput';\nimport FormButton from '../../Form/FormButton';\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\n\nconst Traitement = (props) => {\n  var handleTypeSdate = (data) => {\n    setDateD(data.target.value)     \n       }\n       var handleTypeSdate1 = (data) => {\n        setDateF(data.target.value)     \n           }\n          \n  useEffect(() => {\n    props.getTraitment(props.patientList[\"cin\"], {\n      trai: trai\n    })\n   if ( props.traitmentList !=null &&typeof(props.traitmentList)!==\"string\"&& props.traitmentList[\"dateD\"] !== null &&   props.traitmentList[\"dateD\"] !== undefined &&oper === \"M\") setDateD(props.traitmentList[\"dateD\"].slice(0, 10))\n    //else setDateD()\n    //if (typeof(props.traitmentList)!==\"string\"&& props.traitmentList[\"dateF\"] !== null && oper === \"M\") setDateF(props.traitmentList[\"dateF\"].slice(0, 10))\n    //else setDateF()\n  })\n\n  const [oldPactt, setOldPactt] = useState(true)\n  const [pactt, setPactt] =  useState(\"Bras 1\")\n  const [type, setType] = useState(\"M\")\n  const [trai, setTrai] = useState(\"Lopinavir/ritonavir\")\n  const [oper, setOper] = useState(\"A\")\n  const [dateD, setDateD] = useState()\n  const [dateF, setDateF] = useState()\n  const [autreBox, setAutreBox] = useState(trai === \"Autre\")\n  const [dosage, setDosage] =  useState()\n\n  //formValidation\n  const [validation, setValidation] = useState()\n\n\n\n  var handlePacttChange = (data) => {\n   setPactt(data.target.value)\n  }\n\n\n  var handleOperChange = (data) => {\n    var i;\n    for (i = 0; i < data.length; i++) {\n      if (data[i].selected) { setOper(data[i].label[0]); setDateF(); setDateD(); }\n\n      if (data[i].label[0]===\"M\" && typeof(props.traitmentList)!==\"string\"&& props.traitmentList[\"dosage\"] !== null  && props.traitmentList[\"dosage\"] !== undefined)\n       {setDosage(props.traitmentList[\"dosage\"])}\n\n    }\n  }\n  var handleTypeChange = (data) => {\n    /* var i;\n    for (i = 0; i < data.length; i++) {\n      if (data[i].selected) { setType(data[i].label.charAt(0)) ;  }\n\n    }*/\n    if (data.target.value===\"1\") {\n      setType(\"M\"); setTrai(\"Lopinavir/ritonavir\"); setDateD(); setDateF()\n    }\n    if (data.target.value===\"2\") {\n      setType(\"P\"); setTrai(\"O2\"); setDateD(); setDateF()\n    }\n    if (data.target.value===\"3\") {\n      setType(\"A\"); setTrai(\"Amoxicilline/Acide clavunique\"); setDateD(); setDateF()\n    }\n  }\n\n  var handlePacttChange = (data) => {\n     setPactt(data.target.value)\n  }\n  var handleTraiChange = (data) => {\n      setDateF()\n      setDateD()\n      setTrai(data.target.value);\n\n        if (data.target.value === \"Autre\") { setAutreBox(true); setTrai() }\n        else setAutreBox(false)\n        props.getTraitment(props.patientList[\"cin\"], {\n          trai: trai\n        })\n      }\n\n\n\n  //SubmitFunction\n  var handleSUbmit = () => {\n    var values = {\n      dosage: dosage,\n      dateD: dateD,\n      dateF: dateF,\n      trai: trai,\n      pactt:pactt\n    }\n    console.log(values)\n     if(trai ===undefined)\n     { setValidation(\"Veuillez choisir un traitment\") ;return;}\n      if(dosage ===undefined)\n      {setValidation(\"Veuillez precisier un dosage\");return}\n      if(dateD ===undefined)\n     { setValidation(\"La date de debut de traitement est obligatoire\");return}\n     setValidation()\n\n    props.addTraitment(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"DiagnosticDetails\")\n\n  }\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n    <View>\n      <Text style={tailwind('text-gray-700 font-bold py-2 text-xl text-center')}>Traitement</Text>\n      <Text style={tailwind('text-gray-700 font-bold py-2  text-center')}>Patient:{props.patientList[\"generalInformation\"][\"nom\"] + \" \" + props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n      {validation !== undefined && <Text style={tailwind(\"text-center font-bold text-red-500\")}>{validation}</Text>}\n      <Text style={tailwind('text-gray-700 pt-8  pl-4 text-center pb-4')}>Participation au projet PACTT ?</Text>\n      {props.patientList[\"traitement\"][\"pactt\"] !== null && props.patientList[\"traitement\"][\"pactt\"] !== undefined&& oldPactt === true && <View style={tailwind(' items-center ')}>\n        <Text style={tailwind(\"text-gray-700 font-bold\")}> {props.patientList[\"traitement\"][\"pactt\"]}</Text>\n        <FormButton title=\"Modifier ?\" onPress={() => setOldPactt(false)}/>\n      </View>\n\n      }\n      {(props.patientList[\"traitement\"][\"pactt\"] == null && props.patientList[\"traitement\"][\"pactt\"] == undefined  || oldPactt === false) &&\n      <View style={tailwind(' items-center ')} >\n      <div>\n    <div>  <input  onChange={handlePacttChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Bras 1</Text></div>\n    <div>  <input  onChange={handlePacttChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Bras 2</Text></div>\n    <div>  <input  onChange={handlePacttChange} type=\"radio\" value=\"TrRythCardiaque\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text></div>\n    </div>\n    </View>\n  }\n\n      <Text style={tailwind('text-gray-700  text-center pb-4')}>Modifier ajouter les traitements</Text>\n      <View style={tailwind(' items-center ')} >\n      <div>\n    <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"1\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Molécules</Text></div>\n    <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"2\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Prise en charge standard</Text></div>\n    <div>  <input  onChange={handleTypeChange} type=\"radio\" value=\"3\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Antibiothérapie</Text></div>\n    </div>\n        <Text style={tailwind('text-gray-700  text-center p-4')}> Lequel/Laquelle ?</Text>\n        {\n          type === \"M\" &&\n          <div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Lopinavir/ritonavir</Text></div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Chloroquine phosphate</Text></div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Antibiothérapie\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Hydroxy-Chloroquine</Text></div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Azithromycine</Text></div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Remdesivir</Text></div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Antibiothérapie\" name=\"gender2\" /> <Text style={tailwind('text-gray-700 py-2')}>Autre</Text></div>\n        </div>\n\n        }\n\n        {\n          type === \"P\" &&\n          <div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>O2</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>HFNC</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Antibiothérapie\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>CPAP</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>VNI</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>VMI</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Antibiothérapie\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Paracétamol</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Antibiothérapie\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Anti coaguant</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>H2O</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>ADO</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Antibiothérapie\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Insulinothérapie</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Nébulisation corticoides</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender3\" /> <Text style={tailwind('text-gray-700 py-2')}>Nébulisation bronchodilateurs</Text></div>\n          </div>\n        }\n        {\n          type === \"A\" &&\n          <div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Amoxicilline/Acide clavunique</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Cefotaxime</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Antibiothérapie\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Ceftriaxone</Text></div>\n          <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender4\" /> <Text style={tailwind('text-gray-700 py-2')}>Autre</Text></div>\n          </div>\n        }\n        {autreBox === true && <View style={tailwind(\"items-center\")}>\n          <FormInput placeholder=\"Autre traitement ...\" onChangeText={setTrai} />\n        </View>}\n        <Text style={tailwind('text-gray-700  text-center p-4')}> Choisir l'opération ?</Text>\n        <div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>Amoxicilline/Acide clavunique</Text></div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>Cefotaxime</Text></div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"Antibiothérapie\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>Ceftriaxone</Text></div>\n        <div>  <input  onChange={handleTraiChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender5\" /> <Text style={tailwind('text-gray-700 py-2')}>Autre</Text></div>\n        </div>\n        <div>\n        <div>  <input  onChange={handleOperChange} type=\"radio\" value=\"PathRespChronique\" name=\"gender6\" /> <Text style={tailwind('text-gray-700 py-2')}>Ajouter Autre</Text></div>\n        <div>  <input  onChange={handleOperChange} type=\"radio\" value=\"Cardiopathies\" name=\"gender6\" /> <Text style={tailwind('text-gray-700 py-2')}>Modifier date fin</Text></div>\n        </div>\n        {\n          (oper === \"A\") && <View style={tailwind(\"items-center \")}>\n            <FormInput placeholder={\"Dosage\"} onChangeText={setDosage}  />\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de debut</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de fin</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate1}/>\n            \n          </View>\n        }\n        {\n          oper === \"M\" && typeof (props.traitmentList) === \"string\" && <Text style={tailwind(\"text-center py-4 font-bold  text-red-500\")}>{\"Aucun traitement \" + trai + \" trouvé , Veuillez ajouter autre !\"}</Text>\n        }\n        {\n          oper === \"M\" && typeof (props.traitmentList) !== \"string\" && props.traitmentList !== null && <View style={tailwind(\"items-center\")}>\n            <FormInput placeholder={\"Doage/Debit:\" + props.traitmentList[\"dosage\"]} editable=\"false\" />\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date de debut</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate}/>\n            <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Date fin</Text>\n            <input type=\"date\" data-date=\"\" data-date-format=\"DD MMMM YYYY\" onChange={handleTypeSdate1}/>\n            \n          </View>\n        }\n      </View>\n      <View style={tailwind(\"items-center\")}>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => props.navigation.navigate(\"DiagnosticDetails\")} />\n          <FormButton title=\"Enregistrer\" onPress={handleSUbmit} />\n        </View>\n\n      </View>\n    </View>\n    </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\n\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList,\n  traitmentList: state.medicalService.traitmentList\n});\nconst mapActionToProps = {\n  getTraitment: actions.getTraitment,\n  addTraitment: actions.addTraitment\n\n};\nexport default connect(mapStateToProps, mapActionToProps)(Traitement);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/ATCDchir.js",["596"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport {View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\nconst ATCDchir = (props) => {\n\n  const [ATCD, setATCD] = useState(\"\");\n\n\n  var handleATCDChange = (text) => {\n    setATCD(text)\n  }\n\n\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"ATCDchir\",\n      atcd: ATCD\n    }\n    e.preventDefault();\n    console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux\")\n  }\n\n\n\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>ATCD chirurgicaux</Text>\n        <FormInput placeholder=\"ATCD chirurgicaux\" onChangeText={handleATCDChange} />\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(ATCDchir);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/autresATCD.js",["597"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport {View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\n\nconst AutresATCD = (props) => {\n\n  const [ATCD, setATCD] = useState(\"\");\n\n\n  var handleATCDChange = (text) => {\n    setATCD(text)\n  }\n\n\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"AutresATCD\",\n      autres: ATCD\n\n\n    }\n    e.preventDefault();\n    //console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux\")\n  }\n\n\n\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}> Autres ATCD </Text>\n        <FormInput placeholder=\"Autres ATCD\" onChangeText={handleATCDChange} />\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(AutresATCD);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/avc.js",["598"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport {View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\nconst AVC = (props) => {\n\n  const [anciennete, setAnciennete] = useState(0.0);\n  const [traitement, setTraitement] = useState(0);\n  const [episode_1, setEpisode_1] = useState(true)\n  const [episode_x, setEpisode_x] = useState(false)\n  const [handicap, setHandicap] = useState(\"mineur\")\n\n  var handleHandicapChange = (data) => {\n      setHandicap(data)\n  }\n\n  var handleAnciennteChange = (text) => {\n    setAnciennete(text)\n  }\n  var handleTraitementChange = (text) => {\n    setTraitement(text)\n  }\n  var handleAvcChange = (data) => {\n    if (data.target.value===\"1\") {\n      setEpisode_1(true);\n      setEpisode_x(false);\n    }\n    else if (data.target.value===\"2\") {\n      setEpisode_1(false);\n      setEpisode_x(true)\n    }\n  }\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"AVC\",\n      anciennete: anciennete,\n      traitement: traitement,\n      episode_1: episode_1,\n      getEpisode_x: episode_x,\n      handicap: handicap\n    }\n    e.preventDefault();\n    console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux\")\n  }\n\n\n\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>AVC</Text>\n        <View style={styles.row}>\n                <div>\n                <Text style={tailwind('text-gray-700 py-2')}>  AVC?</Text>\n                  <input  onChange={handleAvcChange} type=\"radio\" value=\"1\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Un seul episode</Text>\n                  <input  onChange={handleAvcChange} type=\"radio\" value=\"2\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Plusieurs episodes</Text>\n                </div>\n        </View>\n        <FormInput title=\"Ancienneté\" placeholder=\"Ancienneté\" onChangeText={handleAnciennteChange} type=\"decimal-pad\" />\n        <FormInput title=\"Traitement\" placeholder=\"Traitement\" onChangeText={handleTraitementChange} />\n        <View style={styles.row}>\n                <div>\n                <Text style={tailwind('text-gray-700 py-2')}>Handicap?</Text>\n                  <input  onChange={handleHandicapChange} type=\"radio\" value=\"mineur\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Mineur</Text>\n                  <input  onChange={handleHandicapChange} type=\"radio\" value=\"moyen\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Moyen</Text>\n                  <input  onChange={handleHandicapChange} type=\"radio\" value=\"majeur\" name=\"gender1\" /> <Text style={tailwind('text-gray-700 py-2')}>Majeur</Text>\n                </div>\n              </View>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(AVC);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/cardiopathies.js",["599"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport {View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\nconst Cardiopathies = (props) => {\n\n  const [anciennete, setAnciennete] = useState(0.0);\n  const [traitement, setTraitement] = useState(0);\n  const [equilibre, setEquilibre] = useState(true);\n\n  var handleAnciennteChange = (text) => {\n    setAnciennete(text)\n  }\n  var handleTraitementChange = (text) => {\n    setTraitement(text)\n  }\n  var handleEquilibreChange = (data) => {\n      setEquilibre(data.target.value)\n  }\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"Cardiopathies\",\n      anciennete: anciennete,\n      traitement: traitement,\n      equilibre: equilibre\n    }\n    e.preventDefault();\n    //console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux\")\n  }\n\n\n\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Cardiopathies</Text>\n\n        <FormInput title=\"Ancienneté\" placeholder=\"Ancienneté\" onChangeText={handleAnciennteChange} type=\"decimal-pad\" />\n        <FormInput title=\"Traitement\" placeholder=\"Traitement\" onChangeText={handleTraitementChange} />\n\n        <View style={styles.row}>\n        <div  onChange={handleEquilibreChange}>\n        <Text style={tailwind('text-gray-700 py-2')}>Equilibré?</Text>\n        <input type=\"radio\" value=\"true\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n        <input type=\"radio\" value=\"false\" name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n      </div>\n        </View>\n\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n\n        </View>\n    </View>\n    </Container>\n    </div>\n    <ParticlesBg type=\"cobweb\" config={config} bg={true} />\n    </div>\n  );\n};\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Cardiopathies);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/diabete.js",["600"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport {View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\nconst Diabete = (props) => {\n\n  const [anciennete, setAnciennete] = useState(0.0);\n  const [traitement, setTraitement] = useState(0);\n  const [equilibre, setEquilibre] = useState(true);\n\n  var handleAnciennteChange = (text) => {\n    setAnciennete(text)\n  }\n  var handleTraitementChange = (text) => {\n    setTraitement(text)\n  }\n  var handleEquilibreChange = (data) => {\n      setEquilibre(data.target.value)\n  }\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"Diabete\",\n      anciennete: anciennete,\n      traitement: traitement,\n      equilibre: equilibre\n    }\n    e.preventDefault();\n    //console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux\")\n  }\n\n\n\n\n  return (\n    <div>\n    <div class=\"big\">\n    <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Diabète</Text>\n\n        <FormInput title=\"Ancienneté\" placeholder=\"Ancienneté\" onChangeText={handleAnciennteChange} type=\"decimal-pad\" />\n        <FormInput title=\"Traitement\" placeholder=\"Traitement\" onChangeText={handleTraitementChange} />\n\n        <View style={styles.row}>\n        <div  onChange={handleEquilibreChange}>\n    <Text style={tailwind('text-gray-700 py-2')}>Equilibré?</Text>\n          <input type=\"radio\" value={true} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n          <input type=\"radio\" value={false} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n        </div>\n        </View>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\nconst styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n});\nexport default connect(mapStateToProps, mapActionToProps)(Diabete);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/pathRespChronique.js",["601"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport {View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\nconst PathRespChronique = (props) => {\n\n  const [anciennete, setAnciennete] = useState(0.0);\n  const [traitement, setTraitement] = useState(0);\n  const [equilibre, setEquilibre] = useState(true);\n\n  var handleAnciennteChange = (text) => {\n    setAnciennete(text)\n  }\n  var handleTraitementChange = (text) => {\n    setTraitement(text)\n  }\n  var handleEquilibreChange = (data) => {\n      setEquilibre(data.target.value)\n  }\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"PathResChronique\",\n      anciennete: anciennete,\n      traitement: traitement,\n      equilibre: equilibre\n    }\n    e.preventDefault();\n    //console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux\")\n  }\n\n\n\n\n  return (\n    <div>\n    <div class=\"big\">\n    <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Pathologie Respiratoire chroniques</Text>\n\n        <FormInput title=\"Ancienneté\" placeholder=\"Ancienneté\" onChangeText={handleAnciennteChange} type=\"decimal-pad\" />\n        <FormInput title=\"Traitement\" placeholder=\"Traitement\" onChangeText={handleTraitementChange} />\n        <View style={styles.row}>\n        <div  onChange={handleEquilibreChange}>\n        <Text style={tailwind('text-gray-700 py-2')}>Equilibré?</Text>\n          <input type=\"radio\" value={true} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Oui</Text>\n          <input type=\"radio\" value={false} name=\"gender\" /> <Text style={tailwind('text-gray-700 py-2')}>Non</Text>\n        </div>\n        </View>\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n        </View>\n      </View>\n      </Container>\n      </div>\n      <ParticlesBg type=\"cobweb\" config={config} bg={true} />\n      </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\nconst styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n});\nexport default connect(mapStateToProps, mapActionToProps)(PathRespChronique);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/priseAINS.js",["602"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport { DatePicker } from '@assenti/rui-components';\nimport '@assenti/rui-components/css/index.css';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\nconst PriseAINS = (props) => {\n\n  const [dose, setDose] = useState(0.0)\n  const [duree, setDuree] = useState(0)\n  const [molecule, setMolecule] = useState(\"\")\n  const [date, setDate] = useState()\n\n  var handleDoseChange = (text) => {\n    setDose(text)\n  }\n  var handleDureeChange = (text) => {\n    setDuree(text)\n  }\n  var handleMoleculeChange = (text) => {\n    setMolecule(text)\n  }\n\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"PriseAINS\",\n      dose: dose,\n      molecule: molecule,\n      duree: duree,\n      datePrise: date\n    }\n    e.preventDefault();\n    console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux\")\n  }\n\n\n\n\n  return (\n    <div>\n    <div class=\"big\">\n    <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Prise récentes d'AINS</Text>\n\n        <FormInput placeholder=\"Dose \" type=\"decimal-pad\" onChangeText={handleDoseChange} />\n        <FormInput placeholder=\"Molecule\" onChangeText={handleMoleculeChange} />\n        <FormInput placeholder=\"Duree\" type=\"number-pad\" onChangeText={handleDureeChange} />\n        <Text style={tailwind('text-gray-700 py-2')}>Date de prise</Text>\n        <DatePicker\n        color=\"primary\"\n        placeholder=\"YYYY-MM-DD\"\n        value={date}\n        clearable\n        minDate=\"1920-05-01\"\n        maxDate={new Date()}\n        onDate={(date) => {\n        setDate(date)\n        }}\n        onClear={() => setDate('')}\n        width={250}\n        onChange={(value) => setDate(value)}/>\n\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n        </View>\n      </View>\n      </Container>\n</div>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\nconst styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n});\nexport default connect(mapStateToProps, mapActionToProps)(PriseAINS);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/antecedentsMedicaux/retinopathie.js",["603"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormInput from \"../../Form/FormInput\";\nimport FormButton from \"../../Form/FormButton\";\nimport * as actions from \"../../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport {View, Text, StyleSheet } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport '../home.css';\nlet config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n\n\n\n\n\nconst Retinopathie = (props) => {\n\n  const [anciennete, setAnciennete] = useState(0.0);\n  const [traitement, setTraitement] = useState(0);\n\n\n  var handleAnciennteChange = (text) => {\n    setAnciennete(text)\n  }\n  var handleTraitementChange = (text) => {\n    setTraitement(text)\n  }\n\n  var handleSubmit = (e) => {\n    var values = {\n      antecedent: \"Retinopathie\",\n      anciennete: anciennete,\n      traitement: traitement,\n\n    }\n    e.preventDefault();\n    //console.log(values)\n    props.antecedentsMedicaux(props.patientList[\"cin\"], values)\n    props.navigation.navigate(\"AddAntecendentsMedicaux\")\n  }\n\n\n\n\n  return (\n    <div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Retinopathie</Text>\n\n        <FormInput title=\"Ancienneté\" placeholder=\"Ancienneté\" onChangeText={handleAnciennteChange} type=\"decimal-pad\" />\n        <FormInput title=\"Traitement\" placeholder=\"Traitement\" onChangeText={handleTraitementChange} />\n\n\n\n        <View style={styles.row}>\n          <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"AddAntecendentsMedicaux\") }} />\n          <FormButton title=\"Enregister\" onPress={handleSubmit} />\n\n        </View>\n\n\n\n      </View>\n      </Container>\n      </div>\n      <ParticlesBg type=\"cobweb\" config={config} bg={true} />\n      </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  antecedentsMedicaux: actions.antecedentsMedicaux\n};\nconst styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n});\nexport default connect(mapStateToProps, mapActionToProps)(Retinopathie);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/patientDetails.js",["604","605","606"],"import React from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../Form/FormButton\";\nimport * as actions from \"../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { StyleSheet,View, Text } from 'react-native';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport './home.css';\n\n\nconst PatientDetails = (props) => {\n  let config = {\n        num: [4, 7],\n        rps: 0.1,\n        radius: [5, 40],\n        life: [1.5, 3],\n        v: [2, 3],\n        tha: [-50, 50],\n        alpha: [0.6, 0],\n        scale: [.1, 0.9],\n        position: \"all\",\n        color: [ \"#ff0000\"],\n        cross: \"dead\",\n        random: 10\n      };\n\n    return (\n      <div>\n      <div class=\"big\">\n      <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n        <View>\n            <View style={tailwind(' items-center ')} >\n                <View style={tailwind('py-5')}>\n                    <FormButton title=\"Informations générales\" onPress={() => { props.navigation.navigate(\"InfosGenerales\") }} />\n                    <FormButton title=\"Habitudes de vie\" onPress={() => { props.navigation.navigate(\"HabitudesDeVie\") }} />\n                    <FormButton title=\"Antécédents médicaux\" onPress={() => { props.navigation.navigate(\"AntecendentsMedicaux\") }} />\n                    <FormButton title=\"Expositions a risque\" onPress={() => { props.navigation.navigate(\"Exposition\") }} />\n                    <FormButton title=\"Diagnostics\" onPress={() => { props.navigation.navigate(\"DiagnosticDetails\") }} />\n                </View>\n            </View>\n            <View style={tailwind('items-center py-8')}>\n                <FormButton title=\"Retour\" onPress={() => { props.navigation.navigate(\"SearchPatient\") }} />\n            </View>\n        </View>\n        </Container>\n        </div>\n        <ParticlesBg type=\"cobweb\" config={config} bg={true} />\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(PatientDetails);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Form/CaracCls.js",[],"/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/info/Heading.js",[],"/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/searchPatient.js",["607","608","609"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport * as actions from \"../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from 'react-native';\nimport FormInput from \"../Form/FormInput\";\nimport FormButton from \"../Form/FormButton\";\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport './home.css';\n//import 'localstorage-polyfill';\n\n\n\nconst SearchPatient = (props) => {\n  let config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n    };\n  useEffect(() => {\n    props.search(search)\n  }, [])\n\n  const tableHead = ['Cin', 'Nom', 'Prenom']\n  const [search, setSearch] = useState(0)\n  const [search2, setSearch2] = useState(0)\n\n  const handleSearchChange = (text) => {\n    setSearch(text)\n    //console.log(search)\n  }\n  const handleSearch = () => {\n    setSearch2(search)\n    console.log(search)\n    props.search(search)\n\n\n  }\n  return (\n<div>\n<div class=\"big\">\n<Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Rechercher un patient</Text>\n        <View style={tailwind('py-8 items-center')}>\n\n          <FormInput\n            placeholder=\"Search...Type CIN\"\n            type=\"number-pad\"\n            onChangeText={handleSearchChange}\n            maxLength={Number(\"8\")}\n          />\n\n\n          <FormButton title=\"Rechercher\" onPress={handleSearch} />\n          <View style={tailwind('py-8 items-center')}>\n            <Text style={tailwind(\"text-red-500\")}>\n              {(search2 != 0) && ((typeof (props.patientList) === 'string' && props.patientList) ||\n                (\n                  <View style={tailwind('items-center')}>\n                  <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>identifiant:{props.patientList[\"generalInformation\"][\"identifiant\"]}</Text>\n                  <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>patient:{props.patientList[\"generalInformation\"][\"patient\"]}</Text>\n                  <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>Nom:{props.patientList[\"generalInformation\"][\"nom\"]}</Text>\n                  <Text style={tailwind('text-gray-700 font-bold py-2 text-xl')}>prenom:{props.patientList[\"generalInformation\"][\"prenom\"]}</Text>\n                    <FormButton title=\"Details\" onPress={() => { props.navigation.navigate(\"PatientDetails\") }} />\n                    <FormButton title=\"Information\" onPress={() => { props.navigation.navigate(\"InfosGenerales2\") }} />\n                    <FormButton title=\"Dashbord\" onPress={() => { props.navigation.navigate(\"Dashbord\") }} />\n                  </View>\n\n\n\n                ))}\n\n            </Text>\n\n          </View>\n\n\n\n\n        </View>\n\n        <View style={styles.row}>\n          <FormButton title=\"Ajouter un patient\" onPress={() => { props.navigation.navigate(\"AddPatient\"); }} />\n          <FormButton title=\"Annuler\" onPress={() => { props.navigation.navigate(\"Home\"); }} />\n\n        </View>\n\n      </View>\n      </Container>\n      </div>\n      <ParticlesBg type=\"cobweb\" config={config} bg={true} />\n      </div>\n\n\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  patientList: state.medicalService.patientList\n});\nconst mapActionToProps = {\n\n  search: actions.searchPatient\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n});\n\nexport default connect(mapStateToProps, mapActionToProps)(SearchPatient);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/home.js",["610","611","612","613","614"],"import React, { useState, useEffect } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FormButton from \"../Form/FormButton\";\nimport FormCheckBox from \"../Form/CheckBox\";\nimport * as actions from \"../../Actions/medicalService\";\nimport { connect } from \"react-redux\";\nimport { StyleSheet,View, Text } from 'react-native';\nimport { AsyncStorage } from 'AsyncStorage';\nimport Container from '@material-ui/core/Container';\nimport ParticlesBg from \"particles-bg\";\nimport './home.css';\nconst Home = (props) => {\n  const [toggleCheckBox, setToggleCheckBox] = useState(false)\n\n  const logout = (e) => {\n\n\n    props.logout();\n    AsyncStorage.setItem(\"loggedUser\", JSON.stringify(null))\n    props.navigation.navigate(\"Login\")\n    console.log(AsyncStorage.getItem(\"loggedUser\"));\n\n    console.log(props.loggedUser)\n\n  }\n  let config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-50, 50],\n      alpha: [0.6, 0],\n      scale: [.1, 0.9],\n      position: \"all\",\n      color: [ \"#ff0000\"],\n      cross: \"dead\",\n      random: 10\n      \n    };\n\n\n  return (\n\n    <div style={mystyle}>\n    <Container style={{backgroundColor:\"rgba(200,200,200,0.75)\",backgroundsize: \"cover\"}} component=\"main\" maxWidth=\"xs\" >\n      <div class=\"big\">\n      <View style={tailwind(' items-center mt-10')} >\n      <View style={tailwind(' items-center ')} >\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-9xl')}>Bienvenue a </Text>\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-9xl')}>Plate-forme sars cov 2</Text>\n        <Text style={tailwind('text-gray-700 font-bold py-2 text-9xl')}>et autre maladie infectieuse</Text>\n        </View>\n        <View style={tailwind('py-4')}>\n          <FormButton title=\"Ajouter un patient\" onPress={() => props.navigation.navigate(\"AddPatient\")} />\n          <FormButton title=\" Rechercher un patient \" onPress={() => props.navigation.navigate(\"SearchPatient\")} />\n        </View>\n        <FormButton title=\"Deconnexion\" onPress={logout} />\n</View>\n</div>\n</Container>\n<ParticlesBg type=\"cobweb\" config={config} bg={true} />\n</div>\n  );\n};\nconst mystyle = {\n      color: \"white\",\n      height: \"100vh\",\n      backgroundposition: \"center\",\n      backgroundrepeat: \"no-repeat\",\n      backgroundsize: \"cover\"\n    };\nconst mapStateToProps = (state) => ({\n  loggedUser: state.medicalService.loggedUser,\n});\nconst mapActionToProps = {\n  login: actions.login,\n  logout: actions.logout\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Home);\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Actions/medicalService.js",["615","616","617","618","619"],"import apiMedicalService from \"./apiMedicalService\";\n\nexport const ACTION_TYPES = {\n  LOGIN: \"LOGIN\",\n  LOGOUT: \"LOGOUT\",\n  ADD_PATIENT: \"ADD_PATIENT\",\n  SEARCH_PATIENT: \"SEARCH_PATIENT\",\n  HABITUDES_DE_VIE_PATIENT: \"HABITUDES_DE_VIE_PATIENT\",\n  INFOS_GENERALES: \"INFOS_GENERALES\",\n  ANTECEDENTS_MEDICAUX: \"ANTECEDENTS_MEDICAUX\",\n  GET_ALL_ANTECEDENTS_MEDICAUX: \"GET_ALL_ANTECEDENTS_MEDICAUX\",\n  REMOVE_ANTECEDENT_MEDICAL: \"REMOVE_ANTECEDENT_MEDICAL\",\n  ADD_DIAGNOSTIC: \"ADD_DIAGNOSTIC\",\n  ADD_EXPOSITION: \"ADD_EXPOSITION\",\n  ADD_EXPOSITION1: \"ADD_EXPOSITION1\",\n  GET_ALL_DIAGNOSTICS: \"GET_ALL_DIAGNOSTICS\",\n  SEARCH_DIAGNOSTIC: \"SEARCH_DIAGNOSTIC\",\n  ADD_CONF_DIAG: \"ADD_CONF_DIAG\",\n  ADD_ADMISSION: \"ADD_ADMISSION\",\n  ADD_CARAC_CLINIQUES: \"ADD_CARAC_CLINIQUES\",\n  ADD_EXAM_CLI: \"ADD_EXAM_CLI\",\n  ADD_EXAM_RADIO_PARA_CLI: \"ADD_EXAM_RADIO_PARA_CLI\",\n  ADD_EVALUATION_FINALE: \"ADD_EVALUATION_FINALE\",\n  ADD_EXAM_BIO: \"ADD_EXAM_BIO\",\n  ADD_TRAITMENT:\"ADD_TRAITMENT\",\n  GET_TRAITMENT:\"GET_TRAITMENT\",\n  ADD_EVOLUTION:\"ADD_EVOLUTION\",\n  GET_EVOLUTION:\"GET_EVOLUTION\"\n};\n\nexport const getEvolution=(cin,values)=>(dispatch)=>{\n  apiMedicalService\n  .medicalService()\n  .getEvolution(cin,values)\n . then(resposne=>{\n    dispatch({\n      type:ACTION_TYPES.GET_EVOLUTION,\n      payload:resposne.data\n    })\n  })\n  .catch(err=>console.log(err))\n}\n\nexport const addEvolution=(cin,values)=>(dispatch)=>{\n  apiMedicalService\n  .medicalService()\n  .addEvolution(cin,values)\n  .then((response)=>{\n    dispatch({\n      type:ACTION_TYPES.ADD_EVOLUTION,\n      payload:response.data\n    })\n  })\n  .catch(err=>console.log(err))\n}\n\nexport const getTraitment=(cin,values)=>(dispatch)=>{\n  apiMedicalService\n  .medicalService()\n  .getTraitment(cin,values)\n  .then((response)=>{\n    dispatch({\n      type:ACTION_TYPES.GET_TRAITMENT,\n      payload:response.data\n    })\n  })\n  .catch(err=>console.log(err))\n}\n\nexport const addTraitment=(cin,values)=>(dispatch)=>{\n  apiMedicalService\n  .medicalService()\n  .addTraitment(cin,values)\n  .then((response)=>{\n    dispatch({\n      type:ACTION_TYPES.ADD_TRAITMENT,\n      payload:response.data\n    })\n  })\n  .catch(err=>console.log(err))\n}\n\nexport const addExamBio = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addExamBio(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EXAM_BIO,\n        payload: response.data\n\n      })\n    })\n    .catch(err=>console.log(err))\n\n}\nexport const addEvaluationFinale = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addEvaluationFinale(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EVALUATION_FINALE,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n\n}\n\nexport const addExamRadioParaCli = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addExamRadioParaCli(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EXAM_RADIO_PARA_CLI,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const addExamCli = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addExamCli(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EXAM_CLI,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const addCaracCliniques = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addCracCliniques(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_CARAC_CLINIQUES,\n        payload: response.data\n\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const addAdmission = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addAdmission(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_ADMISSION,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const addConfDiag = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addConfDiag(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_CONF_DIAG,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const searchDiagnostic = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .searchDiagnostic(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.SEARCH_DIAGNOSTIC,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const getAllDiagnostics = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .getAllDiagnostics(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.GET_ALL_DIAGNOSTICS,\n        payload: response.data\n      })\n    })\n    .catch(err => { console.log(err) })\n}\n\nexport const addExposition = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addExposition(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EXPOSITION,\n        payload: response.data\n      })\n    })\n    .catch(err => { console.log(err) })\n}\n\nexport const addExposition1 = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addExposition1(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EXPOSITION1,\n        payload: response.data\n      })\n    })\n    .catch(err => { console.log(err) })\n}\n\nexport const addDiagnostic = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addDiagnostic(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_DIAGNOSTIC,\n        payload: response.data\n      })\n      console.log(response.data)\n      if (response.data == \"You have already added a diagnostic in the same day\")\n        localStorage.setItem(\"addDiagnostic\", response.data)\n      else localStorage.setItem(\"addDiagnostic\", JSON.stringify(null))\n\n    })\n    .catch((err) => { console.log(err) })\n}\nexport const removeAntecedentMedical = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removeAntecedentMedical(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_ANTECEDENT_MEDICAL,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\n\nexport const getAllAntecedentsMedicaux = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .allAntecedentsMedicaux(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.GET_ALL_ANTECEDENTS_MEDICAUX,\n        payload: response.data\n      })\n      console.log(response.data)\n    }\n    )\n    .catch((err) => console.log(err))\n}\nexport const antecedentsMedicaux = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .antecedentsMedicaux(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ANTECEDENTS_MEDICAUX,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\n\nexport const infosGenerales = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .infosGenerales(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.INFOS_GENERALES,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const habitudesDeViePatient = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .habitudesDeViePatient(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.HABITUDES_DE_VIE_PATIENT,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const searchPatient = (search) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .searchPatient(search)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.SEARCH_PATIENT,\n        payload: response.data\n      });\n\n    })\n    .catch((err) => console.log(err))\n}\n\nexport const login = (values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .login(values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.LOGIN,\n        payload: response.data,\n      });\n      const loggedUser = response.data;\n      if (loggedUser == \"\") {\n        localStorage.setItem(\"loggedUser\", JSON.stringify(null))\n      } else if (loggedUser == \"Username or/and password is/are incorrect\") {\n        localStorage.setItem(\"loggedUser\", JSON.stringify(null))\n\n      } else {\n        localStorage.setItem(\"loggedUser\", JSON.stringify(loggedUser))\n\n\n      }\n    })\n    .catch((err) => console.log(err));\n};\n\n\nexport const logout = () => (dispatch) => {\n  apiMedicalService.medicalService().logout().\n    then((response) => {\n      localStorage.setItem(\"loggedUser\", JSON.stringify(\"Try to login\"))\n      dispatch({\n        type: ACTION_TYPES.LOGOUT,\n        payload: JSON.stringify(null)\n      });\n\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const addPatient = (values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addPatient(values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_PATIENT,\n        payload: response.data,\n      });\n      const addPatientMessage = response.data\n      if (addPatientMessage == \"Cin or/and matricule already existed\")\n        localStorage.setItem(\"addPatientMessage\", \"Cin or/and matricule already existed\")\n      else {\n        localStorage.setItem(\"addPatientMessage\", JSON.stringify(null))\n\n      };\n\n    })\n    .catch((err) => console.log(err));\n};\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Actions/apiMedicalService.js",["620"],"/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/Dashbord/upload-files.component.js",[],"/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Pages/Dashbord/upload-files.service.js",[],"/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Form/FormButton1.js",["621"],"/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow strict-local\n */\n\nimport React from 'react';\n\n\nimport tailwind from 'tailwind-rn';\nimport { Button, TouchableOpacity, Text } from 'react-native';\n\n\nconst FormButton = (prpos) => {\n  return (\n\n    < >\n      <TouchableOpacity style={tailwind('bg-gray-600 px-3 py-3 mx-3 my-3  w-32 rounded-md')} onPress={prpos.onPress}>\n        <Text style={tailwind('text-white font-bold text-center')}>\n          {prpos.title}\n        </Text>\n      </TouchableOpacity>\n    </>\n  );\n};\n\n\n\n\nexport default FormButton;\n","/home/yobi/Desktop/jihed/test/testvalide/reactnativeweb-demo/src/Components/Form/Steps.js",[],{"ruleId":"622","replacedBy":"623"},{"ruleId":"624","replacedBy":"625"},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"630","severity":1,"message":"631","line":58,"column":11,"nodeType":"632","endLine":58,"endColumn":70},{"ruleId":"630","severity":1,"message":"631","line":61,"column":11,"nodeType":"632","endLine":61,"endColumn":23},{"ruleId":"630","severity":1,"message":"631","line":62,"column":11,"nodeType":"632","endLine":62,"endColumn":23},{"ruleId":"630","severity":1,"message":"631","line":63,"column":11,"nodeType":"632","endLine":63,"endColumn":23},{"ruleId":"630","severity":1,"message":"631","line":64,"column":11,"nodeType":"632","endLine":64,"endColumn":23},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"633","line":40,"column":7,"nodeType":"628","messageId":"629","endLine":40,"endColumn":22},{"ruleId":"626","severity":1,"message":"634","line":4,"column":13,"nodeType":"628","messageId":"629","endLine":4,"endColumn":20},{"ruleId":"626","severity":1,"message":"635","line":6,"column":10,"nodeType":"628","messageId":"629","endLine":6,"endColumn":20},{"ruleId":"626","severity":1,"message":"636","line":6,"column":27,"nodeType":"628","messageId":"629","endLine":6,"endColumn":31},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"637","line":8,"column":8,"nodeType":"628","messageId":"629","endLine":8,"endColumn":18},{"ruleId":"638","severity":1,"message":"639","line":40,"column":12,"nodeType":"628","messageId":"640","endLine":40,"endColumn":27},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"641","severity":1,"message":"642","line":44,"column":18,"nodeType":"643","messageId":"644","endLine":44,"endColumn":20},{"ruleId":"645","severity":1,"message":"646","line":135,"column":72,"nodeType":"647","endLine":135,"endColumn":85},{"ruleId":"645","severity":1,"message":"646","line":136,"column":68,"nodeType":"647","endLine":136,"endColumn":81},{"ruleId":"645","severity":1,"message":"646","line":137,"column":69,"nodeType":"647","endLine":137,"endColumn":82},{"ruleId":"645","severity":1,"message":"646","line":157,"column":67,"nodeType":"647","endLine":157,"endColumn":80},{"ruleId":"645","severity":1,"message":"646","line":158,"column":76,"nodeType":"647","endLine":158,"endColumn":89},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"645","severity":1,"message":"646","line":146,"column":72,"nodeType":"647","endLine":146,"endColumn":85},{"ruleId":"645","severity":1,"message":"646","line":147,"column":68,"nodeType":"647","endLine":147,"endColumn":81},{"ruleId":"645","severity":1,"message":"646","line":148,"column":69,"nodeType":"647","endLine":148,"endColumn":82},{"ruleId":"645","severity":1,"message":"646","line":168,"column":67,"nodeType":"647","endLine":168,"endColumn":80},{"ruleId":"645","severity":1,"message":"646","line":169,"column":76,"nodeType":"647","endLine":169,"endColumn":89},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"637","line":8,"column":8,"nodeType":"628","messageId":"629","endLine":8,"endColumn":18},{"ruleId":"626","severity":1,"message":"648","line":33,"column":10,"nodeType":"628","messageId":"629","endLine":33,"endColumn":29},{"ruleId":"626","severity":1,"message":"649","line":35,"column":9,"nodeType":"628","messageId":"629","endLine":35,"endColumn":23},{"ruleId":"626","severity":1,"message":"650","line":43,"column":9,"nodeType":"628","messageId":"629","endLine":43,"endColumn":22},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"633","line":40,"column":7,"nodeType":"628","messageId":"629","endLine":40,"endColumn":22},{"ruleId":"626","severity":1,"message":"634","line":7,"column":13,"nodeType":"628","messageId":"629","endLine":7,"endColumn":20},{"ruleId":"626","severity":1,"message":"651","line":8,"column":10,"nodeType":"628","messageId":"629","endLine":8,"endColumn":17},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"652","line":8,"column":10,"nodeType":"628","messageId":"629","endLine":8,"endColumn":20},{"ruleId":"653","severity":1,"message":"654","line":38,"column":3,"nodeType":"628","endLine":38,"endColumn":12,"suggestions":"655"},{"ruleId":"638","severity":1,"message":"656","line":95,"column":7,"nodeType":"628","messageId":"640","endLine":95,"endColumn":24},{"ruleId":"657","severity":1,"message":"658","line":151,"column":58,"nodeType":"659","messageId":"660","endLine":151,"endColumn":60},{"ruleId":"641","severity":1,"message":"642","line":151,"column":102,"nodeType":"643","messageId":"644","endLine":151,"endColumn":104},{"ruleId":"657","severity":1,"message":"658","line":151,"column":116,"nodeType":"659","messageId":"660","endLine":151,"endColumn":118},{"ruleId":"626","severity":1,"message":"661","line":14,"column":8,"nodeType":"628","messageId":"629","endLine":14,"endColumn":19},{"ruleId":"653","severity":1,"message":"662","line":37,"column":7,"nodeType":"663","endLine":37,"endColumn":48},{"ruleId":"626","severity":1,"message":"664","line":115,"column":7,"nodeType":"628","messageId":"629","endLine":115,"endColumn":20},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"641","severity":1,"message":"642","line":113,"column":32,"nodeType":"643","messageId":"644","endLine":113,"endColumn":34},{"ruleId":"626","severity":1,"message":"665","line":166,"column":7,"nodeType":"628","messageId":"629","endLine":166,"endColumn":13},{"ruleId":"626","severity":1,"message":"634","line":4,"column":13,"nodeType":"628","messageId":"629","endLine":4,"endColumn":20},{"ruleId":"626","severity":1,"message":"666","line":8,"column":10,"nodeType":"628","messageId":"629","endLine":8,"endColumn":24},{"ruleId":"626","severity":1,"message":"665","line":70,"column":7,"nodeType":"628","messageId":"629","endLine":70,"endColumn":13},{"ruleId":"626","severity":1,"message":"634","line":4,"column":13,"nodeType":"628","messageId":"629","endLine":4,"endColumn":20},{"ruleId":"626","severity":1,"message":"636","line":6,"column":16,"nodeType":"628","messageId":"629","endLine":6,"endColumn":20},{"ruleId":"626","severity":1,"message":"667","line":1,"column":17,"nodeType":"628","messageId":"629","endLine":1,"endColumn":25},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"665","line":47,"column":7,"nodeType":"628","messageId":"629","endLine":47,"endColumn":13},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"634","line":4,"column":13,"nodeType":"628","messageId":"629","endLine":4,"endColumn":20},{"ruleId":"626","severity":1,"message":"667","line":1,"column":17,"nodeType":"628","messageId":"629","endLine":1,"endColumn":25},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"634","line":3,"column":13,"nodeType":"628","messageId":"629","endLine":3,"endColumn":20},{"ruleId":"626","severity":1,"message":"636","line":5,"column":16,"nodeType":"628","messageId":"629","endLine":5,"endColumn":20},{"ruleId":"626","severity":1,"message":"668","line":14,"column":7,"nodeType":"628","messageId":"629","endLine":14,"endColumn":11},{"ruleId":"626","severity":1,"message":"665","line":79,"column":9,"nodeType":"628","messageId":"629","endLine":79,"endColumn":15},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"637","line":8,"column":8,"nodeType":"628","messageId":"629","endLine":8,"endColumn":18},{"ruleId":"638","severity":1,"message":"639","line":40,"column":12,"nodeType":"628","messageId":"640","endLine":40,"endColumn":27},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"652","line":10,"column":10,"nodeType":"628","messageId":"629","endLine":10,"endColumn":20},{"ruleId":"626","severity":1,"message":"669","line":77,"column":10,"nodeType":"628","messageId":"629","endLine":77,"endColumn":18},{"ruleId":"626","severity":1,"message":"670","line":77,"column":20,"nodeType":"628","messageId":"629","endLine":77,"endColumn":31},{"ruleId":"626","severity":1,"message":"671","line":78,"column":10,"nodeType":"628","messageId":"629","endLine":78,"endColumn":14},{"ruleId":"626","severity":1,"message":"672","line":78,"column":16,"nodeType":"628","messageId":"629","endLine":78,"endColumn":23},{"ruleId":"626","severity":1,"message":"673","line":80,"column":16,"nodeType":"628","messageId":"629","endLine":80,"endColumn":23},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"641","severity":1,"message":"642","line":33,"column":22,"nodeType":"643","messageId":"644","endLine":33,"endColumn":24},{"ruleId":"641","severity":1,"message":"642","line":35,"column":43,"nodeType":"643","messageId":"644","endLine":35,"endColumn":45},{"ruleId":"641","severity":1,"message":"642","line":36,"column":43,"nodeType":"643","messageId":"644","endLine":36,"endColumn":45},{"ruleId":"641","severity":1,"message":"642","line":40,"column":22,"nodeType":"643","messageId":"644","endLine":40,"endColumn":24},{"ruleId":"641","severity":1,"message":"642","line":42,"column":42,"nodeType":"643","messageId":"644","endLine":42,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":43,"column":42,"nodeType":"643","messageId":"644","endLine":43,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":48,"column":22,"nodeType":"643","messageId":"644","endLine":48,"endColumn":24},{"ruleId":"641","severity":1,"message":"642","line":50,"column":42,"nodeType":"643","messageId":"644","endLine":50,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":51,"column":42,"nodeType":"643","messageId":"644","endLine":51,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":55,"column":22,"nodeType":"643","messageId":"644","endLine":55,"endColumn":24},{"ruleId":"641","severity":1,"message":"642","line":57,"column":42,"nodeType":"643","messageId":"644","endLine":57,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":58,"column":42,"nodeType":"643","messageId":"644","endLine":58,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":62,"column":22,"nodeType":"643","messageId":"644","endLine":62,"endColumn":24},{"ruleId":"641","severity":1,"message":"642","line":64,"column":42,"nodeType":"643","messageId":"644","endLine":64,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":65,"column":42,"nodeType":"643","messageId":"644","endLine":65,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":68,"column":22,"nodeType":"643","messageId":"644","endLine":68,"endColumn":24},{"ruleId":"641","severity":1,"message":"642","line":70,"column":42,"nodeType":"643","messageId":"644","endLine":70,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":71,"column":42,"nodeType":"643","messageId":"644","endLine":71,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":151,"column":38,"nodeType":"643","messageId":"644","endLine":151,"endColumn":40},{"ruleId":"626","severity":1,"message":"674","line":157,"column":13,"nodeType":"628","messageId":"629","endLine":157,"endColumn":14},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"666","line":8,"column":10,"nodeType":"628","messageId":"629","endLine":8,"endColumn":24},{"ruleId":"626","severity":1,"message":"675","line":110,"column":7,"nodeType":"628","messageId":"629","endLine":110,"endColumn":25},{"ruleId":"641","severity":1,"message":"642","line":144,"column":26,"nodeType":"643","messageId":"644","endLine":144,"endColumn":28},{"ruleId":"641","severity":1,"message":"642","line":237,"column":19,"nodeType":"643","messageId":"644","endLine":237,"endColumn":21},{"ruleId":"641","severity":1,"message":"642","line":253,"column":19,"nodeType":"643","messageId":"644","endLine":253,"endColumn":21},{"ruleId":"641","severity":1,"message":"642","line":261,"column":22,"nodeType":"643","messageId":"644","endLine":261,"endColumn":24},{"ruleId":"641","severity":1,"message":"642","line":276,"column":21,"nodeType":"643","messageId":"644","endLine":276,"endColumn":23},{"ruleId":"641","severity":1,"message":"642","line":286,"column":42,"nodeType":"643","messageId":"644","endLine":286,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":296,"column":20,"nodeType":"643","messageId":"644","endLine":296,"endColumn":22},{"ruleId":"641","severity":1,"message":"642","line":309,"column":24,"nodeType":"643","messageId":"644","endLine":309,"endColumn":26},{"ruleId":"641","severity":1,"message":"642","line":318,"column":24,"nodeType":"643","messageId":"644","endLine":318,"endColumn":26},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"653","severity":1,"message":"676","line":31,"column":6,"nodeType":"677","endLine":31,"endColumn":8,"suggestions":"678"},{"ruleId":"641","severity":1,"message":"679","line":69,"column":25,"nodeType":"643","messageId":"644","endLine":69,"endColumn":27},{"ruleId":"641","severity":1,"message":"642","line":107,"column":34,"nodeType":"643","messageId":"644","endLine":107,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"634","line":4,"column":13,"nodeType":"628","messageId":"629","endLine":4,"endColumn":20},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"680","line":3,"column":8,"nodeType":"628","messageId":"629","endLine":3,"endColumn":18},{"ruleId":"626","severity":1,"message":"681","line":97,"column":7,"nodeType":"628","messageId":"629","endLine":97,"endColumn":19},{"ruleId":"626","severity":1,"message":"682","line":13,"column":10,"nodeType":"628","messageId":"629","endLine":13,"endColumn":16},{"ruleId":"626","severity":1,"message":"682","line":5,"column":10,"nodeType":"628","messageId":"629","endLine":5,"endColumn":16},{"ruleId":"626","severity":1,"message":"683","line":5,"column":18,"nodeType":"628","messageId":"629","endLine":5,"endColumn":34},{"ruleId":"626","severity":1,"message":"636","line":5,"column":36,"nodeType":"628","messageId":"629","endLine":5,"endColumn":40},{"ruleId":"626","severity":1,"message":"684","line":5,"column":59,"nodeType":"628","messageId":"629","endLine":5,"endColumn":77},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"637","line":8,"column":8,"nodeType":"628","messageId":"629","endLine":8,"endColumn":18},{"ruleId":"626","severity":1,"message":"648","line":52,"column":10,"nodeType":"628","messageId":"629","endLine":52,"endColumn":29},{"ruleId":"626","severity":1,"message":"649","line":54,"column":9,"nodeType":"628","messageId":"629","endLine":54,"endColumn":23},{"ruleId":"626","severity":1,"message":"650","line":62,"column":9,"nodeType":"628","messageId":"629","endLine":62,"endColumn":22},{"ruleId":"685","severity":1,"message":"686","line":103,"column":7,"nodeType":"687","messageId":"688","endLine":103,"endColumn":19,"fix":"689"},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"669","line":90,"column":10,"nodeType":"628","messageId":"629","endLine":90,"endColumn":18},{"ruleId":"626","severity":1,"message":"670","line":90,"column":20,"nodeType":"628","messageId":"629","endLine":90,"endColumn":31},{"ruleId":"626","severity":1,"message":"671","line":91,"column":10,"nodeType":"628","messageId":"629","endLine":91,"endColumn":14},{"ruleId":"626","severity":1,"message":"672","line":91,"column":16,"nodeType":"628","messageId":"629","endLine":91,"endColumn":23},{"ruleId":"626","severity":1,"message":"673","line":93,"column":16,"nodeType":"628","messageId":"629","endLine":93,"endColumn":23},{"ruleId":"626","severity":1,"message":"665","line":263,"column":7,"nodeType":"628","messageId":"629","endLine":263,"endColumn":13},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"641","severity":1,"message":"642","line":15,"column":22,"nodeType":"643","messageId":"644","endLine":15,"endColumn":24},{"ruleId":"641","severity":1,"message":"642","line":17,"column":43,"nodeType":"643","messageId":"644","endLine":17,"endColumn":45},{"ruleId":"641","severity":1,"message":"642","line":18,"column":43,"nodeType":"643","messageId":"644","endLine":18,"endColumn":45},{"ruleId":"641","severity":1,"message":"642","line":22,"column":22,"nodeType":"643","messageId":"644","endLine":22,"endColumn":24},{"ruleId":"641","severity":1,"message":"642","line":24,"column":42,"nodeType":"643","messageId":"644","endLine":24,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":25,"column":42,"nodeType":"643","messageId":"644","endLine":25,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":30,"column":22,"nodeType":"643","messageId":"644","endLine":30,"endColumn":24},{"ruleId":"641","severity":1,"message":"642","line":32,"column":42,"nodeType":"643","messageId":"644","endLine":32,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":33,"column":42,"nodeType":"643","messageId":"644","endLine":33,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":37,"column":22,"nodeType":"643","messageId":"644","endLine":37,"endColumn":24},{"ruleId":"641","severity":1,"message":"642","line":39,"column":42,"nodeType":"643","messageId":"644","endLine":39,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":40,"column":42,"nodeType":"643","messageId":"644","endLine":40,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":44,"column":22,"nodeType":"643","messageId":"644","endLine":44,"endColumn":24},{"ruleId":"641","severity":1,"message":"642","line":46,"column":42,"nodeType":"643","messageId":"644","endLine":46,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":47,"column":42,"nodeType":"643","messageId":"644","endLine":47,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":50,"column":22,"nodeType":"643","messageId":"644","endLine":50,"endColumn":24},{"ruleId":"641","severity":1,"message":"642","line":52,"column":42,"nodeType":"643","messageId":"644","endLine":52,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":53,"column":42,"nodeType":"643","messageId":"644","endLine":53,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":133,"column":38,"nodeType":"643","messageId":"644","endLine":133,"endColumn":40},{"ruleId":"626","severity":1,"message":"674","line":139,"column":13,"nodeType":"628","messageId":"629","endLine":139,"endColumn":14},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"666","line":8,"column":10,"nodeType":"628","messageId":"629","endLine":8,"endColumn":24},{"ruleId":"626","severity":1,"message":"675","line":110,"column":7,"nodeType":"628","messageId":"629","endLine":110,"endColumn":25},{"ruleId":"641","severity":1,"message":"642","line":144,"column":26,"nodeType":"643","messageId":"644","endLine":144,"endColumn":28},{"ruleId":"641","severity":1,"message":"642","line":236,"column":19,"nodeType":"643","messageId":"644","endLine":236,"endColumn":21},{"ruleId":"641","severity":1,"message":"642","line":253,"column":19,"nodeType":"643","messageId":"644","endLine":253,"endColumn":21},{"ruleId":"641","severity":1,"message":"642","line":261,"column":22,"nodeType":"643","messageId":"644","endLine":261,"endColumn":24},{"ruleId":"641","severity":1,"message":"642","line":276,"column":21,"nodeType":"643","messageId":"644","endLine":276,"endColumn":23},{"ruleId":"641","severity":1,"message":"642","line":286,"column":42,"nodeType":"643","messageId":"644","endLine":286,"endColumn":44},{"ruleId":"641","severity":1,"message":"642","line":296,"column":20,"nodeType":"643","messageId":"644","endLine":296,"endColumn":22},{"ruleId":"641","severity":1,"message":"642","line":309,"column":24,"nodeType":"643","messageId":"644","endLine":309,"endColumn":26},{"ruleId":"641","severity":1,"message":"642","line":318,"column":24,"nodeType":"643","messageId":"644","endLine":318,"endColumn":26},{"ruleId":"626","severity":1,"message":"665","line":345,"column":7,"nodeType":"628","messageId":"629","endLine":345,"endColumn":13},{"ruleId":"653","severity":1,"message":"654","line":38,"column":3,"nodeType":"628","endLine":38,"endColumn":12,"suggestions":"690"},{"ruleId":"638","severity":1,"message":"656","line":95,"column":7,"nodeType":"628","messageId":"640","endLine":95,"endColumn":24},{"ruleId":"657","severity":1,"message":"658","line":150,"column":58,"nodeType":"659","messageId":"660","endLine":150,"endColumn":60},{"ruleId":"641","severity":1,"message":"642","line":150,"column":102,"nodeType":"643","messageId":"644","endLine":150,"endColumn":104},{"ruleId":"657","severity":1,"message":"658","line":150,"column":116,"nodeType":"659","messageId":"660","endLine":150,"endColumn":118},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"634","line":4,"column":13,"nodeType":"628","messageId":"629","endLine":4,"endColumn":20},{"ruleId":"626","severity":1,"message":"635","line":6,"column":10,"nodeType":"628","messageId":"629","endLine":6,"endColumn":20},{"ruleId":"626","severity":1,"message":"636","line":6,"column":27,"nodeType":"628","messageId":"629","endLine":6,"endColumn":31},{"ruleId":"653","severity":1,"message":"676","line":32,"column":6,"nodeType":"677","endLine":32,"endColumn":8,"suggestions":"691"},{"ruleId":"626","severity":1,"message":"692","line":34,"column":9,"nodeType":"628","messageId":"629","endLine":34,"endColumn":18},{"ruleId":"641","severity":1,"message":"679","line":68,"column":25,"nodeType":"643","messageId":"644","endLine":68,"endColumn":27},{"ruleId":"626","severity":1,"message":"627","line":1,"column":27,"nodeType":"628","messageId":"629","endLine":1,"endColumn":36},{"ruleId":"626","severity":1,"message":"693","line":4,"column":8,"nodeType":"628","messageId":"629","endLine":4,"endColumn":20},{"ruleId":"626","severity":1,"message":"635","line":7,"column":10,"nodeType":"628","messageId":"629","endLine":7,"endColumn":20},{"ruleId":"626","severity":1,"message":"694","line":13,"column":10,"nodeType":"628","messageId":"629","endLine":13,"endColumn":24},{"ruleId":"626","severity":1,"message":"695","line":13,"column":26,"nodeType":"628","messageId":"629","endLine":13,"endColumn":43},{"ruleId":"641","severity":1,"message":"642","line":239,"column":25,"nodeType":"643","messageId":"644","endLine":239,"endColumn":27},{"ruleId":"641","severity":1,"message":"642","line":334,"column":22,"nodeType":"643","messageId":"644","endLine":334,"endColumn":24},{"ruleId":"641","severity":1,"message":"642","line":336,"column":29,"nodeType":"643","messageId":"644","endLine":336,"endColumn":31},{"ruleId":"696","severity":1,"message":"697","line":350,"column":46,"nodeType":"687","messageId":"698","endLine":350,"endColumn":47,"fix":"699"},{"ruleId":"641","severity":1,"message":"642","line":372,"column":29,"nodeType":"643","messageId":"644","endLine":372,"endColumn":31},{"ruleId":"700","severity":1,"message":"701","line":3,"column":1,"nodeType":"702","endLine":34,"endColumn":3},{"ruleId":"626","severity":1,"message":"682","line":13,"column":10,"nodeType":"628","messageId":"629","endLine":13,"endColumn":16},"no-native-reassign",["703"],"no-negated-in-lhs",["704"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'handleGpaChange' is assigned a value but never used.","'actions' is defined but never used.","'StyleSheet' is defined but never used.","'Text' is defined but never used.","'FormInput2' is defined but never used.","no-redeclare","'handleTypeSdate' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'isDatePickerVisible' is assigned a value but never used.","'showDatePicker' is assigned a value but never used.","'handleConfirm' is assigned a value but never used.","'connect' is defined but never used.","'DatePicker' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setDateD'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props, trai, oper] as a second argument to the useEffect Hook.",["705"],"'handlePacttChange' is already defined.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'MaskedInput' is defined but never used.","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'handleVitSeul' is assigned a value but never used.","'styles' is assigned a value but never used.","'medicalService' is defined but never used.","'useState' is defined but never used.","'json' is assigned a value but never used.","'fileName' is assigned a value but never used.","'setFileName' is assigned a value but never used.","'file' is assigned a value but never used.","'setFile' is assigned a value but never used.","'setTest' is assigned a value but never used.","'x' is assigned a value but never used.","'handleVillesChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'search'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["706"],"Expected '!==' and instead saw '!='.","'FormButton' is defined but never used.","'handleSubmit' is assigned a value but never used.","'Button' is defined but never used.","'TouchableOpacity' is defined but never used.","'ShadowPropTypesIOS' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property log.","MemberExpression","unexpectedWhitespace",{"range":"707","text":"708"},["709"],["710"],"'tableHead' is assigned a value but never used.","'FormCheckBox' is defined but never used.","'toggleCheckBox' is assigned a value but never used.","'setToggleCheckBox' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","expectedDotBeforeProperty",{"range":"711","text":"712"},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},[2884,2886],".",{"desc":"713","fix":"717"},{"desc":"715","fix":"718"},[8884,8890],"\n    .","Add dependencies array: [props, trai, oper]",{"range":"719","text":"720"},"Update the dependencies array to be: [props, search]",{"range":"721","text":"722"},{"range":"723","text":"720"},{"range":"724","text":"722"},[1559,1559],", [props, trai, oper]",[853,855],"[props, search]",[1532,1532],[841,843]]